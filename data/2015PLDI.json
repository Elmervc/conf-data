{
    "DataRevision": 1432500137,
    "Preliminary": "false",
    "Event": "PLDI 2015",
    "Name": "PLDI 2015",
    "Description": "",
    "Date": "June 13â€“17, 2015",
    "DateStart": "2015-06-13",
    "DateEnd": "2015-06-17",
    "Location": "Portland, OR, USA",
    "Sponsors": "",
    "URL": "http://conf.researchr.org/home/pldi2015",
    "MultiTrack": "false",
    "UseMiniPage": "true",
    "NewPagePerDay": "false",
    "NumOfParallelTracks": 1,
    "Organization": {
        "General Chairs": [
                "David Grove"
        ],
        "PC Chairs": [
                "Steve Blackburn"
        ]
    },
    "SocialFeeds": [
    ],
    "VenueInfo": {
        "Name": "",
        "GPS": {
            "Latitude": 0,
            "Longitude": 0
        }
    },
    "InfoPage": {
        "xaml": "foo",
        "Elements": [
            {
                "XamlName": "ConferenceCenterMap",
                "Type": "Map",
                "GPS": {
                    "Latitude": 0,
                    "Longitude": 0
                },
                "MapLabel": ""
            },
            {
                "XamlName": "LicenseButton",
                "Type": "WebLink",
                "URL": "http://research.microsoft.com/en-US/projects/confapp/terms.aspx"
            },
            {
                "XamlName": "PrivacyButton",
                "Type": "WebLink",
                "URL": "http://privacy.microsoft.com/en-us/default.msp"
            }
        ]
    },
    "SessionPriorities": [
        "Award",
        "Invited Talk",
        "Other"
    ],
    "Items": [
        {
            "Title": "Automatically Improving Accuracy for Floating Point Expressions",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-61-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DPavel+Panchekha%2C+Alex+Sanchez-Stern%2C+James+R.+Wilcox%2C+and+Zachary+Tatlock+%22Automatically+Improving+Accuracy+for+Floating+Point+Expressions%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737959",
            "PersonsString": "Pavel Panchekha, Alex Sanchez-Stern, James R. Wilcox, and Zachary Tatlock",
            "AffiliationsString": "University of Washington, USA",
            "Authors": [
                "Pavel Panchekha @ University of Washington, USA",
                "Alex Sanchez-Stern @ University of Washington, USA",
                "James R. Wilcox @ University of Washington, USA",
                "Zachary Tatlock @ University of Washington, USA"
            ],
            "Affiliations": [
                "University of Washington, USA",
                "University of Washington, USA",
                "University of Washington, USA",
                "University of Washington, USA"
            ],
            "Abstract": "Scientific and engineering applications depend on floating point arithmetic to approximate real arithmetic. This approximation introduces rounding error, which can accumulate to produce unacceptable results. While the numerical methods literature provides techniques to mitigate rounding error, applying these techniques requires manually rearranging expressions and understanding the finer details of floating point arithmetic. We introduce Herbie, a tool which automatically discovers the rewrites experts perform to improve accuracy. Herbie&#039;s heuristic search estimates and localizes rounding error using sampled points (rather than static error analysis), applies a database of rules to generate improvements, takes series expansions, and combines improvements for different input regions. We evaluated Herbie on examples from a classic numerical methods textbook, and found that Herbie was able to improve accuracy on each example, some by up to 60 bits, while imposing a median performance overhead of 40%. Colleagues in machine learning have used Herbie to significantly improve the results of a clustering algorithm, and a mathematical library has accepted two patches generated using Herbie.",
            "Award": ""
        },
        {
            "Title": "Diagnosing Type Errors with Class",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-312-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DDanfeng+Zhang%2C+Andrew+C.+Myers%2C+Dimitrios+Vytiniotis%2C+and+Simon+Peyton-Jones+%22Diagnosing+Type+Errors+with+Class%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2738009",
            "PersonsString": "Danfeng Zhang, Andrew C. Myers, Dimitrios Vytiniotis, and Simon Peyton-Jones",
            "AffiliationsString": "Cornell University, USA; Microsoft Research, UK",
            "Authors": [
                "Danfeng Zhang @ Cornell University, USA",
                "Andrew C. Myers @ Cornell University, USA",
                "Dimitrios Vytiniotis @ Microsoft Research, UK",
                "Simon Peyton-Jones @ Microsoft Research, UK"
            ],
            "Affiliations": [
                "Cornell University, USA",
                "Cornell University, USA",
                "Microsoft Research, UK",
                "Microsoft Research, UK"
            ],
            "Abstract": "Type inference engines often give terrible error messages, and the more sophisticated the type system the worse the problem. We show that even with the highly expressive type system implemented by the Glasgow Haskell Compiler (GHC)--including type classes, GADTs, and type families--it is possible to identify the most likely source of the type error, rather than the first source that the inference engine trips over. To determine which are the likely error sources, we apply a simple Bayesian model to a graph representation of the typing constraints; the satisfiability or unsatisfiability of paths within the graph provides evidence for or against possible explanations. While we build on prior work on error diagnosis for simpler type systems, inference in the richer type system of Haskell requires extending the graph with new nodes. The augmentation of the graph creates challenges both for Bayesian reasoning and for ensuring termination. Using a large corpus of Haskell programs, we show that this error localization technique is practical and significantly improves accuracy over the state of the art.",
            "Award": ""
        },
        {
            "Title": "Provably Correct Peephole Optimizations with Alive",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-74-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DNuno+P.+Lopes%2C+David+Menendez%2C+Santosh+Nagarakatte%2C+and+John+Regehr+%22Provably+Correct+Peephole+Optimizations+with+Alive%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737965",
            "PersonsString": "Nuno P. Lopes, David Menendez, Santosh Nagarakatte, and John Regehr",
            "AffiliationsString": "Microsoft Research, UK; Rutgers University, USA; University of Utah, USA",
            "Authors": [
                "Nuno P. Lopes @ Microsoft Research, UK",
                "David Menendez @ Rutgers University, USA",
                "Santosh Nagarakatte @ Rutgers University, USA",
                "John Regehr @ University of Utah, USA"
            ],
            "Affiliations": [
                "Microsoft Research, UK",
                "Rutgers University, USA",
                "Rutgers University, USA",
                "University of Utah, USA"
            ],
            "Abstract": "Compilers should not miscompile. Our work addresses problems in developing peephole optimizations that perform local rewriting to improve the efficiency of LLVM code. These optimizations are individually difficult to get right, particularly in the presence of undefined behavior; taken together they represent a persistent source of bugs. This paper presents Alive, a domain-specific language for writing optimizations and for automatically either proving them correct or else generating counterexamples. Furthermore, Alive can be automatically translated into C++ code that is suitable for inclusion in an LLVM optimization pass. Alive is based on an attempt to balance usability and formal methods; for example, it captures---but largely hides---the detailed semantics of three different kinds of undefined behavior in LLVM. We have translated more than 300 LLVM optimizations into Alive and, in the process, found that eight of them were wrong.",
            "Award": ""
        },
        {
            "Title": "Algorithmic Debugging of Real-World Haskell Programs: Deriving Dependencies from the Cost Centre Stack",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-172-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DMaarten+Faddegon+and+Olaf+Chitil+%22Algorithmic+Debugging+of+Real-World+Haskell+Programs%3A+Deriving+Dependencies+from+the+Cost+Centre+Stack%22",
            "URLvideo": "https%3A%2F%2Fyoutu.be%2Fek-h5i5oAfk",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737985",
            "PersonsString": "Maarten Faddegon and Olaf Chitil",
            "AffiliationsString": "University of Kent, UK",
            "Authors": [
                "Maarten Faddegon @ University of Kent, UK",
                "Olaf Chitil @ University of Kent, UK"
            ],
            "Affiliations": [
                "University of Kent, UK",
                "University of Kent, UK"
            ],
            "Abstract": "Existing algorithmic debuggers for Haskell require a transformation of all modules in a program, even libraries that the user does not want to debug and which may use language features not supported by the debugger. This is a pity, because a promising approach to debugging is therefore not applicable to many real-world programs. We use the cost centre stack from the Glasgow Haskell Compiler profiling environment together with runtime value observations as provided by the Haskell Object Observation Debugger (HOOD) to collect enough information for algorithmic debugging. Program annotations are in suspected modules only. With this technique algorithmic debugging is applicable to a much larger set of Haskell programs. This demonstrates that for functional languages in general a simple stack trace extension is useful to support tasks such as profiling and debugging.",
            "Award": ""
        },
        {
            "Title": "Automatic Error Elimination by Horizontal Code Transfer across Multiple Applications",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-186-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DStelios+Sidiroglou-Douskos%2C+Eric+Lahtinen%2C+Fan+Long%2C+and+Martin+Rinard+%22Automatic+Error+Elimination+by+Horizontal+Code+Transfer+across+Multiple+Applications%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737988",
            "PersonsString": "Stelios Sidiroglou-Douskos, Eric Lahtinen, Fan Long, and Martin Rinard",
            "AffiliationsString": "Massachusetts Institute of Technology, USA",
            "Authors": [
                "Stelios Sidiroglou-Douskos @ Massachusetts Institute of Technology, USA",
                "Eric Lahtinen @ Massachusetts Institute of Technology, USA",
                "Fan Long @ Massachusetts Institute of Technology, USA",
                "Martin Rinard @ Massachusetts Institute of Technology, USA"
            ],
            "Affiliations": [
                "Massachusetts Institute of Technology, USA",
                "Massachusetts Institute of Technology, USA",
                "Massachusetts Institute of Technology, USA",
                "Massachusetts Institute of Technology, USA"
            ],
            "Abstract": "We present Code Phage (CP), a system for automatically transferring correct code from donor applications into recipient applications that process the same inputs to successfully eliminate errors in the recipient. Experimental results using seven donor applications to eliminate ten errors in seven recipient applications highlight the ability of CP to transfer code across applications to eliminate out of bounds access, integer overflow, and divide by zero errors. Because CP works with binary donors with no need for source code or symbolic information, it supports a wide range of use cases. To the best of our knowledge, CP is the first system to automatically transfer code across multiple applications.",
            "Award": ""
        },
        {
            "Title": "Light: Replay via Tightly Bounded Recording",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-245-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DPeng+Liu%2C+Xiangyu+Zhang%2C+Omer+Tripp%2C+and+Yunhui+Zheng+%22Light%3A+Replay+via+Tightly+Bounded+Recording%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2738001",
            "PersonsString": "Peng Liu, Xiangyu Zhang, Omer Tripp, and Yunhui Zheng",
            "AffiliationsString": "Purdue University, USA; IBM Research, USA",
            "Authors": [
                "Peng Liu @ Purdue University, USA",
                "Xiangyu Zhang @ Purdue University, USA",
                "Omer Tripp @ IBM Research, USA",
                "Yunhui Zheng @ IBM Research, USA"
            ],
            "Affiliations": [
                "Purdue University, USA",
                "Purdue University, USA",
                "IBM Research, USA",
                "IBM Research, USA"
            ],
            "Abstract": "Reproducing concurrency bugs is a prominent challenge. Existing techniques either rely on recording very fine grained execution information and hence have high runtime overhead, or strive to log as little information as possible but provide no guarantee in reproducing a bug. We present Light, a technique that features much lower overhead compared to techniques based on fine grained recording, and that guarantees to reproduce concurrent bugs. We leverage and formally prove that recording flow dependences is the necessary and sufficient condition to reproduce a concurrent bug. The flow dependences, together with the thread local orders that can be automatically inferred (and hence not logged), are encoded as scheduling constraints. An SMT solver is used to derive a replay schedule, which is guaranteed to exist even though it may be different from the original schedule. Our experiments show that Light has only 44% logging overhead, almost one order of magnitude lower than the state of the art techniques relying on logging memory accesses. Its space overhead is only 10% of those techniques. Light can also reproduce all the bugs we have collected whereas existing techniques miss some of them.",
            "Award": ""
        },
        {
            "Title": "Many-Core Compiler Fuzzing",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-181-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DChristopher+Lidbury%2C+Andrei+Lascu%2C+Nathan+Chong%2C+and+Alastair+F.+Donaldson+%22Many-Core+Compiler+Fuzzing%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737986",
            "PersonsString": "Christopher Lidbury, Andrei Lascu, Nathan Chong, and Alastair F. Donaldson",
            "AffiliationsString": "Imperial College London, UK; University College London, UK",
            "Authors": [
                "Christopher Lidbury @ Imperial College London, UK",
                "Andrei Lascu @ Imperial College London, UK",
                "Nathan Chong @ University College London, UK",
                "Alastair F. Donaldson @ Imperial College London, UK"
            ],
            "Affiliations": [
                "Imperial College London, UK",
                "Imperial College London, UK",
                "University College London, UK",
                "Imperial College London, UK"
            ],
            "Abstract": "We address the compiler correctness problem for many-core systems through novel applications of fuzz testing to OpenCL compilers. Focusing on two methods from prior work, random differential testing and testing via equivalence modulo inputs (EMI), we present several strategies for random generation of deterministic, communicating OpenCL kernels, and an injection mechanism that allows EMI testing to be applied to kernels that otherwise exhibit little or no dynamically-dead code. We use these methods to conduct a large, controlled testing campaign with respect to 21 OpenCL (device, compiler) configurations, covering a range of CPU, GPU, accelerator, FPGA and emulator implementations. Our study provides independent validation of claims in prior work related to the effectiveness of random differential testing and EMI testing, proposes novel methods for lifting these techniques to the many-core setting and reveals a significant number of OpenCL compiler bugs in commercial implementations.",
            "Award": ""
        },
        {
            "Title": "Mechanized Verification of Fine-Grained Concurrent Programs",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-73-p",
            "URL": "http%3A%2F%2Fsoftware.imdea.org%2Ffcsl%2Fpapers%2Ffcsl-pldi15.pdf",
            "URLvideo": "",
            "URLinfo": "http%3A%2F%2Fsoftware.imdea.org%2Ffcsl",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737964",
            "PersonsString": "Ilya Sergey, Aleksandar Nanevski, and Anindya Banerjee",
            "AffiliationsString": "IMDEA Software Institute, Spain",
            "Authors": [
                "Ilya Sergey @ IMDEA Software Institute, Spain",
                "Aleksandar Nanevski @ IMDEA Software Institute, Spain",
                "Anindya Banerjee @ IMDEA Software Institute, Spain"
            ],
            "Affiliations": [
                "IMDEA Software Institute, Spain",
                "IMDEA Software Institute, Spain",
                "IMDEA Software Institute, Spain"
            ],
            "Abstract": "Efficient concurrent programs and data structures rarely employ coarse-grained synchronization mechanisms (i.e., locks); instead, they implement custom synchronization patterns via fine-grained primitives, such as compare-and-swap. Due to sophisticated interference scenarios between threads, reasoning about such programs is challenging and error-prone, and can benefit from mechanization. In this paper, we present the first completely formalized framework for mechanized verification of full functional correctness of fine-grained concurrent programs. Our tool is based on the recently proposed program logic FCSL. It is implemented as an embedded DSL in the dependently-typed language of the Coq proof assistant, and is powerful enough to reason about programming features such as higher-order functions and local thread spawning. By incorporating a uniform concurrency model, based on state-transition systems and partial commutative monoids, FCSL makes it possible to build proofs about concurrent libraries in a thread-local, compositional way, thus facilitating scalability and reuse: libraries are verified just once, and their specifications are used ubiquitously in client-side reasoning. We illustrate the proof layout in FCSL by example, outline its infrastructure, and report on our experience of using FCSL to verify a number of concurrent algorithms and data structures.",
            "Award": ""
        },
        {
            "Title": "Verification of Producer-Consumer Synchronization in GPU Programs",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-68-p",
            "URL": "http%3A%2F%2Fstanford.edu%2F%7Esharmar%2Fpubs%2Fweft.pdf",
            "URLvideo": "",
            "URLinfo": "https%3A%2F%2Fgithub.com%2Flightsighter%2FWeft",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737962",
            "PersonsString": "Rahul Sharma, Michael Bauer, and Alex Aiken",
            "AffiliationsString": "Stanford University, USA; NVIDIA Research, USA",
            "Authors": [
                "Rahul Sharma @ Stanford University, USA",
                "Michael Bauer @ NVIDIA Research, USA",
                "Alex Aiken @ Stanford University, USA"
            ],
            "Affiliations": [
                "Stanford University, USA",
                "NVIDIA Research, USA",
                "Stanford University, USA"
            ],
            "Abstract": "Previous efforts to formally verify code written for GPUs have focused solely on kernels written within the traditional data-parallel GPU programming model. No previous work has considered the higher performance, but more complex, warp-specialized kernels based on producer-consumer named barriers available on current hardware. In this work we present the first formal operational semantics for named barriers and define what it means for a warp-specialized kernel to be correct. We give algorithms for verifying the correctness of warp-specialized kernels and prove that they are both sound and complete for the most common class of warp-specialized programs. We also present WEFT, a verification tool for checking warp-specialized code. Using WEFT, we discover several non-trivial bugs in production warp-specialized kernels.",
            "Award": ""
        },
        {
            "Title": "Relaxing Safely: Verified On-the-Fly Garbage Collection for x86-TSO",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-279-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DPeter+Gammie%2C+Antony+L.+Hosking%2C+and+Kai+Engelhardt+%22Relaxing+Safely%3A+Verified+On-the-Fly+Garbage+Collection+for+x86-TSO%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2738006",
            "PersonsString": "Peter Gammie, Antony L. Hosking, and Kai Engelhardt",
            "AffiliationsString": "NICTA, Australia; Purdue University, USA; UNSW, Australia",
            "Authors": [
                "Peter Gammie @ NICTA, Australia",
                "Antony L. Hosking @ Purdue University, USA / NICTA, Australia",
                "Kai Engelhardt @ UNSW, Australia / NICTA, Australia"
            ],
            "Affiliations": [
                "NICTA, Australia",
                "Purdue University, USA / NICTA, Australia",
                "UNSW, Australia / NICTA, Australia"
            ],
            "Abstract": "We report on a machine-checked verification of safety for a state-of-the-art, on-the-fly, concurrent, mark-sweep garbage collector that is designed for multi-core architectures with weak memory consistency. The proof explicitly incorporates the relaxed memory semantics of x86 multiprocessors. To our knowledge, this is the first fully machine-checked proof of safety for such a garbage collector. We couch the proof in a framework that system implementers will find appealing, with the fundamental components of the system specified in a simple and intuitive programming language. The abstract model is detailed enough for its correspondence with an assembly language implementation to be straightforward.",
            "Award": ""
        },
        {
            "Title": "Verifying Read-Copy-Update in a Logic for Weak Memory",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-195-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DJoseph+Tassarotti%2C+Derek+Dreyer%2C+and+Viktor+Vafeiadis+%22Verifying+Read-Copy-Update+in+a+Logic+for+Weak+Memory%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737992",
            "PersonsString": "Joseph Tassarotti, Derek Dreyer, and Viktor Vafeiadis",
            "AffiliationsString": "Carnegie Mellon University, USA; MPI-SWS, Germany",
            "Authors": [
                "Joseph Tassarotti @ Carnegie Mellon University, USA",
                "Derek Dreyer @ MPI-SWS, Germany",
                "Viktor Vafeiadis @ MPI-SWS, Germany"
            ],
            "Affiliations": [
                "Carnegie Mellon University, USA",
                "MPI-SWS, Germany",
                "MPI-SWS, Germany"
            ],
            "Abstract": "Read-Copy-Update (RCU) is a technique for letting multiple readers safely access a data structure while a writer concurrently modifies it. It is used heavily in the Linux kernel in situations where fast reads are important and writes are infrequent. Optimized implementations rely only on the weaker memory orderings provided by modern hardware, avoiding the need for expensive synchronization instructions (such as memory barriers) as much as possible. Using GPS, a recently developed program logic for the C/C++11 memory model, we verify an implementation of RCU for a singly-linked list assuming &quot;release-acquire&quot; semantics. Although release-acquire synchronization is stronger than what is required by real RCU implementations, it is nonetheless significantly weaker than the assumption of sequential consistency made in prior work on RCU verification. Ours is the first formal proof of correctness for an implementation of RCU under a weak memory model.",
            "Award": ""
        },
        {
            "Title": "LaminarIR: Compile-Time Queues for Structured Streams",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-197-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DYousun+Ko%2C+Bernd+Burgstaller%2C+and+Bernhard+Scholz+%22LaminarIR%3A+Compile-Time+Queues+for+Structured+Streams%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737994",
            "PersonsString": "Yousun Ko, Bernd Burgstaller, and Bernhard Scholz",
            "AffiliationsString": "Yonsei University, South Korea; University of Sydney, Australia",
            "Authors": [
                "Yousun Ko @ Yonsei University, South Korea",
                "Bernd Burgstaller @ Yonsei University, South Korea",
                "Bernhard Scholz @ University of Sydney, Australia"
            ],
            "Affiliations": [
                "Yonsei University, South Korea",
                "Yonsei University, South Korea",
                "University of Sydney, Australia"
            ],
            "Abstract": "Stream programming languages employ FIFO (first-in, first-out) semantics to model data channels between producers and consumers. A FIFO data channel stores tokens in a buffer that is accessed indirectly via read- and write-pointers. This indirect token-access decouples a producerâ€™s write-operations from the read-operations of the consumer, thereby making dataflow implicit. For a compiler, indirect token-access obscures data-dependencies, which renders standard optimizations ineffective and impacts stream program performance negatively. In this paper we propose a transformation for structured stream programming languages such as StreamIt that shifts FIFO buffer management from run-time to compile-time and eliminates splitters and joiners, whose task is to distribute and merge streams. To show the effectiveness of our lowering transformation, we have implemented a StreamIt to C compilation framework. We have developed our own intermediate representation (IR) called LaminarIR, which facilitates the transformation. We report on the enabling effect of the LaminarIR on LLVMâ€™s optimizations, which required the conversion of several standard StreamIt benchmarks from static to randomized input, to prevent computation of partial results at compile-time. We conducted our experimental evaluation on the Intel i7-2600K, AMD Opteron 6378, Intel Xeon Phi 3120A and ARM Cortex-A15 platforms. Our LaminarIR reduces data-communication on average by 35.9% and achieves platform-specific speedups between 3.73x and 4.98x over StreamIt. We reduce memory accesses by more than 60% and achieve energy savings of up to 93.6% on the Intel i7-2600K.",
            "Award": ""
        },
        {
            "Title": "Optimizing Off-Chip Accesses in Multicores",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-188-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DWei+Ding%2C+Xulong+Tang%2C+Mahmut+Kandemir%2C+Yuanrui+Zhang%2C+and+Emre+Kultursay+%22Optimizing+Off-Chip+Accesses+in+Multicores%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737989",
            "PersonsString": "Wei Ding, Xulong Tang, Mahmut Kandemir, Yuanrui Zhang, and Emre Kultursay",
            "AffiliationsString": "Pennsylvania State University, USA; Intel, USA",
            "Authors": [
                "Wei Ding @ Pennsylvania State University, USA",
                "Xulong Tang @ Pennsylvania State University, USA",
                "Mahmut Kandemir @ Pennsylvania State University, USA",
                "Yuanrui Zhang @ Intel, USA",
                "Emre Kultursay @ Pennsylvania State University, USA"
            ],
            "Affiliations": [
                "Pennsylvania State University, USA",
                "Pennsylvania State University, USA",
                "Pennsylvania State University, USA",
                "Intel, USA",
                "Pennsylvania State University, USA"
            ],
            "Abstract": "In a network-on-chip (NoC) based manycore architecture, an off-chip data access (main memory access) needs to travel through the on-chip network, spending considerable amount of time within the chip (in addition to the memory access latency). In addition, it contends with on-chip (cache) accesses as both use the same NoC resources. In this paper, focusing on data-parallel, multithreaded applications, we propose a compiler-based off-chip data access localization strategy, which places data elements in the memory space such that an off-chip access traverses a minimum number of links (hops) to reach the memory controller that handles this access. This brings three main benefits. First, the network latency of off-chip accesses gets reduced; second, the network latency of on-chip accesses gets reduced; and finally, the memory latency of off-chip accesses improves, due to reduced queue latencies. We present an experimental evaluation of our optimization strategy using a set of 13 multithreaded application programs under both private and shared last-level caches. The results collected emphasize the importance of optimizing the off-chip data accesses.",
            "Award": ""
        },
        {
            "Title": "Improving Compiler Scalability: Optimizing Large Programs at Small Price",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-37-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DSanyam+Mehta+and+Pen-Chung+Yew+%22Improving+Compiler+Scalability%3A+Optimizing+Large+Programs+at+Small+Price%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737954",
            "PersonsString": "Sanyam Mehta and Pen-Chung Yew",
            "AffiliationsString": "University of Minnesota, USA",
            "Authors": [
                "Sanyam Mehta @ University of Minnesota, USA",
                "Pen-Chung Yew @ University of Minnesota, USA"
            ],
            "Affiliations": [
                "University of Minnesota, USA",
                "University of Minnesota, USA"
            ],
            "Abstract": "Compiler scalability is a well known problem: reasoning about the application of useful optimizations over large program scopes consumes too much time and memory during compilation. This problem is exacerbated in polyhedral compilers that use powerful yet costly integer programming algorithms to compose loop optimizations. As a result, the benefits that a polyhedral compiler has to offer to programs such as real scientific applications that contain sequences of loop nests, remain impractical for the common users. In this work, we address this scalability problem in polyhedral compilers. We identify three causes of unscalability, each of which stems from large number of statements and dependences in the program scope. We propose a one-shot solution to the problem by reducing the effective number of statements and dependences as seen by the compiler. We achieve this by representing a sequence of statements in a program by a single super-statement. This set of super-statements exposes the minimum sufficient constraints to the Integer Linear Programming (ILP) solver for finding correct optimizations. We implement our approach in the PLuTo polyhedral compiler and find that it condenses the program statements and program dependences by factors of 4.7x and 6.4x, respectively, averaged over 9 hot regions (ranging from 48 to 121 statements) in 5 real applications. As a result, the improvements in time and memory requirement for compilation are 268x and 20x, respectively, over the latest version of the PLuTo compiler. The final compile times are comparable to the Intel compiler while the performance is 1.92x better on average due to the latterâ€™s conservative approach to loop optimization.",
            "Award": ""
        },
        {
            "Title": "Verification of a Cryptographic Primitive: SHA-256 (Abstract)",
            "Type": "Abstract",
            "Key": "pldi15main-toplaspldi15-1-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DAndrew+W.+Appel+%22Verification+of+a+Cryptographic+Primitive%3A+SHA-256+%28Abstract%29%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2774972",
            "PersonsString": "Andrew W. Appel",
            "AffiliationsString": "Princeton University, USA",
            "Authors": [
                "Andrew W. Appel @ Princeton University, USA"
            ],
            "Affiliations": [
                "Princeton University, USA"
            ],
            "Abstract": "A full formal machine-checked verification of a C program: the OpenSSL implementation of SHA-256. This is an interactive proof of functional correctness in the Coq proof assistant, using the Verifiable C program logic. Verifiable C is a separation logic for the C language, proved sound w.r.t. the operational semantics for C, connected to the CompCert verified optimizing C compiler.",
            "Award": ""
        },
        {
            "Title": "Asynchronous Programming, Analysis and Testing with State Machines",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-205-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DPantazis+Deligiannis%2C+Alastair+F.+Donaldson%2C+Jeroen+Ketema%2C+Akash+Lal%2C+and+Paul+Thomson+%22Asynchronous+Programming%2C+Analysis+and+Testing+with+State+Machines%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737996",
            "PersonsString": "Pantazis Deligiannis, Alastair F. Donaldson, Jeroen Ketema, Akash Lal, and Paul Thomson",
            "AffiliationsString": "Imperial College London, UK; Microsoft Research, India",
            "Authors": [
                "Pantazis Deligiannis @ Imperial College London, UK",
                "Alastair F. Donaldson @ Imperial College London, UK",
                "Jeroen Ketema @ Imperial College London, UK",
                "Akash Lal @ Microsoft Research, India",
                "Paul Thomson @ Imperial College London, UK"
            ],
            "Affiliations": [
                "Imperial College London, UK",
                "Imperial College London, UK",
                "Imperial College London, UK",
                "Microsoft Research, India",
                "Imperial College London, UK"
            ],
            "Abstract": "Programming efficient asynchronous systems is challenging because it can often be hard to express the design declaratively, or to defend against data races and interleaving-dependent assertion violations. Previous work has only addressed these challenges in isolation, by either designing a new declarative language, a new data race detection tool or a new testing technique. We present P#, a language for high-reliability asynchronous programming co-designed with a static data race analysis and systematic concurrency testing infrastructure. We describe our experience using P# to write several distributed protocols and port an industrial-scale system internal to Microsoft, showing that the combined techniques, by leveraging the design of P#, are effective in finding bugs.",
            "Award": ""
        },
        {
            "Title": "Stateless Model Checking Concurrent Programs with Maximal Causality Reduction",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-114-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DJeff+Huang+%22Stateless+Model+Checking+Concurrent+Programs+with+Maximal+Causality+Reduction%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737975",
            "PersonsString": "Jeff Huang",
            "AffiliationsString": "Texas A&M University, USA",
            "Authors": [
                "Jeff Huang @ Texas A&M University, USA"
            ],
            "Affiliations": [
                "Texas A&M University, USA"
            ],
            "Abstract": "We present maximal causality reduction (MCR), a new technique for stateless model checking. MCR systematically explores the state-space of concurrent programs with a provably minimal number of executions. Each execution corresponds to a distinct maximal causal model extracted from a given execution trace, which captures the largest possible set of causally equivalent executions. Moreover, MCR is embarrassingly parallel by shifting the runtime exploration cost to offline analysis. We have designed and implemented MCR using a constraint-based approach and compared with iterative context bounding (ICB) and dynamic partial order reduction (DPOR) on both benchmarks and real-world programs. MCR reduces the number of executions explored by ICB and ICB+DPOR by orders of magnitude, and significantly improves the scalability, efficiency, and effectiveness of the state-of-the-art for both state-space exploration and bug finding. In our experiments, MCR has also revealed several new data races and null pointer dereference errors in frequently studied real-world programs.",
            "Award": ""
        },
        {
            "Title": "Synthesizing Racy Tests",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-231-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DMalavika+Samak%2C+Murali+Krishna+Ramanathan%2C+and+Suresh+Jagannathan+%22Synthesizing+Racy+Tests%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737998",
            "PersonsString": "Malavika Samak, Murali Krishna Ramanathan, and Suresh Jagannathan",
            "AffiliationsString": "Indian Institute of Science, India; Purdue University, USA",
            "Authors": [
                "Malavika Samak @ Indian Institute of Science, India",
                "Murali Krishna Ramanathan @ Indian Institute of Science, India",
                "Suresh Jagannathan @ Purdue University, USA"
            ],
            "Affiliations": [
                "Indian Institute of Science, India",
                "Indian Institute of Science, India",
                "Purdue University, USA"
            ],
            "Abstract": "Subtle concurrency errors in multithreaded libraries that arise because of incorrect or inadequate synchronization are often difficult to pinpoint precisely using only static techniques. On the other hand, the effectiveness of dynamic race detectors is critically dependent on multithreaded test suites whose execution can be used to identify and trigger races. Usually, such multithreaded tests need to invoke a specific combination of methods with objects involved in the invocations being shared appropriately to expose a race. Without a priori knowledge of the race, construction of such tests can be challenging. In this paper, we present a lightweight and scalable technique for synthesizing precisely these kinds of tests. Given a multithreaded library and a sequential test suite, we describe a fully automated analysis that examines sequential execution traces, and produces as its output a concurrent client program that drives shared objects via library method calls to states conducive for triggering a race. Experimental results on a variety of well-tested Java libraries yield 101 synthesized multithreaded tests in less than four minutes. Analyzing the execution of these tests using an off-the-shelf race detector reveals 187 harmful races, including several previously unreported ones. Our implementation, named NARADA, and the results of our experiments are available at http://www.csa.iisc.ernet.in/~sss/tools/narada.",
            "Award": ""
        },
        {
            "Title": "The Push/Pull Model of Transactions",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-199-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DEric+Koskinen+and+Matthew+Parkinson+%22The+Push%2FPull+Model+of+Transactions%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737995",
            "PersonsString": "Eric Koskinen and Matthew Parkinson",
            "AffiliationsString": "IBM Research, USA; Microsoft Research, UK",
            "Authors": [
                "Eric Koskinen @ IBM Research, USA",
                "Matthew Parkinson @ Microsoft Research, UK"
            ],
            "Affiliations": [
                "IBM Research, USA",
                "Microsoft Research, UK"
            ],
            "Abstract": "We present a general theory of serializability, unifying a wide range of transactional algorithms, including some that are yet to come. To this end, we provide a compact semantics in which concurrent transactions PUSH their effects into the shared view (or UNPUSH to recall effects) and PULL the effects of potentially uncommitted concurrent transactions into their local view (or UNPULL to detangle). Each operation comes with simple criteria given in terms of commutativity (Lipton&#039;s left-movers and right-movers). The benefit of this model is that most of the elaborate reasoning (coinduction, simulation, subtle invariants, etc.) necessary for proving the serializability of a transactional algorithm is already proved within the semantic model. Thus, proving serializability (or opacity) amounts simply to mapping the algorithm on to our rules, and showing that it satisfies the rules&#039; criteria.",
            "Award": ""
        },
        {
            "Title": "Efficient Synthesis of Network Updates",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-142-p",
            "URL": "http%3A%2F%2Fwww.jrmcclurg.com%2Fpapers%2Fpldi_2015_paper.pdf",
            "URLvideo": "https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DpLCs8dbytWU",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737980",
            "PersonsString": "Jedidiah McClurg, Hossein Hojjat, Pavol ÄŒernÃ½, and Nate Foster",
            "AffiliationsString": "University of Colorado at Boulder, USA; Cornell University, USA",
            "Authors": [
                "Jedidiah McClurg @ University of Colorado at Boulder, USA",
                "Hossein Hojjat @ Cornell University, USA",
                "Pavol ÄŒernÃ½ @ University of Colorado at Boulder, USA",
                "Nate Foster @ Cornell University, USA"
            ],
            "Affiliations": [
                "University of Colorado at Boulder, USA",
                "Cornell University, USA",
                "University of Colorado at Boulder, USA",
                "Cornell University, USA"
            ],
            "Abstract": "Software-defined networking (SDN) is revolutionizing the networking industry, but current SDN programming platforms do not provide automated mechanisms for updating global configurations on the fly. Implementing updates by hand is challenging for SDN programmers because networks are distributed systems with hundreds or thousands of interacting nodes. Even if initial and final configurations are correct, naively updating individual nodes can lead to incorrect transient behaviors, including loops, black holes, and access control violations. This paper presents an approach for automatically synthesizing updates that are guaranteed to preserve specified properties. We formalize network updates as a distributed programming problem and develop a synthesis algorithm based on counterexample-guided search and incremental model checking. We describe a prototype implementation, and present results from experiments on real-world topologies and properties demonstrating that our tool scales to updates involving over one-thousand nodes.",
            "Award": ""
        },
        {
            "Title": "Efficient Synthesis of Probabilistic Programs",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-150-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DAditya+V.+Nori%2C+Sherjil+Ozair%2C+Sriram+K.+Rajamani%2C+and+Deepak+Vijaykeerthy+%22Efficient+Synthesis+of+Probabilistic+Programs%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737982",
            "PersonsString": "Aditya V. Nori, Sherjil Ozair, Sriram K. Rajamani, and Deepak Vijaykeerthy",
            "AffiliationsString": "Microsoft Research, India; IIT Delhi, India",
            "Authors": [
                "Aditya V. Nori @ Microsoft Research, India",
                "Sherjil Ozair @ IIT Delhi, India",
                "Sriram K. Rajamani @ Microsoft Research, India",
                "Deepak Vijaykeerthy @ Microsoft Research, India"
            ],
            "Affiliations": [
                "Microsoft Research, India",
                "IIT Delhi, India",
                "Microsoft Research, India",
                "Microsoft Research, India"
            ],
            "Abstract": "We show how to automatically synthesize probabilistic programs from real-world datasets. Such a synthesis is feasible due to a combination of two techniques: (1) We borrow the idea of ``sketching&#039;&#039; from synthesis of deterministic programs, and allow the programmer to write a skeleton program with ``holes&#039;&#039;. Sketches enable the programmer to communicate domain-specific intuition about the structure of the desired program and prune the search space, and (2) we design an efficient Markov Chain Monte Carlo (MCMC) based synthesis algorithm to instantiate the holes in the sketch with program fragments. Our algorithm efficiently synthesizes a probabilistic program that is most consistent with the data. A core difficulty in synthesizing probabilistic programs is computing the likelihood L(P | D) of a candidate program P generating data D. We propose an approximate method to compute likelihoods using mixtures of Gaussian distributions, thereby avoiding expensive computation of integrals. The use of such approximations enables us to speed up evaluation of the likelihood of candidate programs by a factor of 1000, and makes Markov Chain Monte Carlo based search feasible. We have implemented our algorithm in a tool called PSKETCH, and our results are encouraging PSKETCH is able to automatically synthesize 16 non-trivial real-world probabilistic programs.",
            "Award": ""
        },
        {
            "Title": "FlashRelate: Extracting Relational Data from Semi-structured Spreadsheets Using Examples",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-9-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DDaniel+W.+Barowy%2C+Sumit+Gulwani%2C+Ted+Hart%2C+and+Benjamin+Zorn+%22FlashRelate%3A+Extracting+Relational+Data+from+Semi-structured+Spreadsheets+Using+Examples%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737952",
            "PersonsString": "Daniel W. Barowy, Sumit Gulwani, Ted Hart, and Benjamin Zorn",
            "AffiliationsString": "University of Massachusetts at Amherst, USA; Microsoft Research, USA",
            "Authors": [
                "Daniel W. Barowy @ University of Massachusetts at Amherst, USA",
                "Sumit Gulwani @ Microsoft Research, USA",
                "Ted Hart @ Microsoft Research, USA",
                "Benjamin Zorn @ Microsoft Research, USA"
            ],
            "Affiliations": [
                "University of Massachusetts at Amherst, USA",
                "Microsoft Research, USA",
                "Microsoft Research, USA",
                "Microsoft Research, USA"
            ],
            "Abstract": "With hundreds of millions of users, spreadsheets are one of the most important end-user applications. Spreadsheets are easy to use and allow users great flexibility in storing data. This flexibility comes at a price: users often treat spreadsheets as a poor man&#039;s database, leading to creative solutions for storing high-dimensional data. The trouble arises when users need to answer queries with their data. Data manipulation tools make strong assumptions about data layouts and cannot read these ad-hoc databases. Converting data into the appropriate layout requires programming skills or a major investment in manual reformatting. The effect is that a vast amount of real-world data is &quot;locked-in&quot; to a proliferation of one-off formats. We introduce FlashRelate, a synthesis engine that lets ordinary users extract structured relational data from spreadsheets without programming. Instead, users extract data by supplying examples of output relational tuples. FlashRelate uses these examples to synthesize a program in Flare. Flare is a novel extraction language that extends regular expressions with geometric constructs. An interactive user interface on top of FlashRelate lets end users extract data by point-and-click. We demonstrate that correct Flare programs can be synthesized in seconds from a small set of examples for 43 real-world scenarios. Finally, our case study demonstrates FlashRelate&#039;s usefulness addressing the widespread problem of data trapped in corporate and government formats.",
            "Award": ""
        },
        {
            "Title": "Synthesizing Data Structure Transformations from Input-Output Examples",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-117-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DJohn+K.+Feser%2C+Swarat+Chaudhuri%2C+and+Isil+Dillig+%22Synthesizing+Data+Structure+Transformations+from+Input-Output+Examples%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737977",
            "PersonsString": "John K. Feser, Swarat Chaudhuri, and Isil Dillig",
            "AffiliationsString": "Rice University, USA; University of Texas at Austin, USA",
            "Authors": [
                "John K. Feser @ Rice University, USA",
                "Swarat Chaudhuri @ Rice University, USA",
                "Isil Dillig @ University of Texas at Austin, USA"
            ],
            "Affiliations": [
                "Rice University, USA",
                "Rice University, USA",
                "University of Texas at Austin, USA"
            ],
            "Abstract": "We present a method for example-guided synthesis of functional programs over recursive data structures. Given a set of input-output examples, our method synthesizes a program in a functional language with higher-order combinators like map and fold. The synthesized program is guaranteed to be the simplest program in the language to fit the examples. Our approach combines three technical ideas: inductive generalization, deduction, and enumerative search. First, we generalize the input-output examples into hypotheses about the structure of the target program. For each hypothesis, we use deduction to infer new input/output examples for the missing subexpressions. This leads to a new subproblem where the goal is to synthesize expressions within each hypothesis. Since not every hypothesis can be realized into a program that fits the examples, we use a combination of best-first enumeration and deduction to search for a hypothesis that meets our needs. We have implemented our method in a tool called Î»2, and we evaluate this tool on a large set of synthesis problems involving lists, trees, and nested data structures. The experiments demonstrate the scalability and broad scope of Î»2. A highlight is the synthesis of a program believed to be the world&#039;s earliest functional pearl.",
            "Award": ""
        },
        {
            "Title": "Composing Concurrency Control",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-102-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DOfri+Ziv%2C+Alex+Aiken%2C+Guy+Golan-Gueta%2C+G.+Ramalingam%2C+and+Mooly+Sagiv+%22Composing+Concurrency+Control%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737970",
            "PersonsString": "Ofri Ziv, Alex Aiken, Guy Golan-Gueta, G. Ramalingam, and Mooly Sagiv",
            "AffiliationsString": "Tel Aviv University, Israel; Stanford University, USA; Microsoft Research, India",
            "Authors": [
                "Ofri Ziv @ Tel Aviv University, Israel",
                "Alex Aiken @ Stanford University, USA",
                "Guy Golan-Gueta @ Tel Aviv University, Israel",
                "G. Ramalingam @ Microsoft Research, India",
                "Mooly Sagiv @ Tel Aviv University, Israel"
            ],
            "Affiliations": [
                "Tel Aviv University, Israel",
                "Stanford University, USA",
                "Tel Aviv University, Israel",
                "Microsoft Research, India",
                "Tel Aviv University, Israel"
            ],
            "Abstract": "Concurrency control poses significant challenges when composing computations over multiple data-structures (objects) with different concurrency-control implementations. We formalize the usually desired requirements (serializability, abort-safety, deadlock-safety, and opacity) as well as stronger versions of these properties that enable composition. We show how to compose protocols satisfying these properties so that the resulting combined protocol also satisfies these properties. Our approach generalizes well-known protocols (such as two-phase-locking and two-phase-commit) and leads to new protocols. We apply this theory to show how we can safely compose optimistic and pessimistic concurrency control. For example, we show how we can execute a transaction that accesses two objects, one controlled by an STM and another by locking.",
            "Award": ""
        },
        {
            "Title": "Dynamic Partial Order Reduction for Relaxed Memory Models",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-51-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DNaling+Zhang%2C+Markus+Kusano%2C+and+Chao+Wang+%22Dynamic+Partial+Order+Reduction+for+Relaxed+Memory+Models%22",
            "URLvideo": "https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D6lnQOXYjvsk",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737956",
            "PersonsString": "Naling Zhang, Markus Kusano, and Chao Wang",
            "AffiliationsString": "Virginia Tech, USA",
            "Authors": [
                "Naling Zhang @ Virginia Tech, USA",
                "Markus Kusano @ Virginia Tech, USA",
                "Chao Wang @ Virginia Tech, USA"
            ],
            "Affiliations": [
                "Virginia Tech, USA",
                "Virginia Tech, USA",
                "Virginia Tech, USA"
            ],
            "Abstract": "Under a relaxed memory model such as TSO or PSO, a concurrent program running on a shared-memory multiprocessor may observe two types of nondeterminism: the nondeterminism in thread scheduling and the nondeterminism in store buffering. Although there is a large body of work on mitigating the scheduling nondeterminism during runtime verification, methods for soundly mitigating the store buffering nondeterminism are lacking. We propose a new dynamic partial order reduction (POR) algorithm for verifying concurrent programs under TSO and PSO. Our method relies on modeling both types of nondeterminism in a unified framework, which allows us to extend existing POR techniques to TSO and PSO without overhauling the verification algorithm. In addition to sound POR, we also propose a buffer-bounding method for more aggressively reducing the state space. We have implemented our new methods in a stateless model checking tool and demonstrated their effectiveness on a set of multithreaded C benchmarks.",
            "Award": ""
        },
        {
            "Title": "Monitoring Refinement via Symbolic Reasoning",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-152-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DMichael+Emmi%2C+Constantin+Enea%2C+and+Jad+Hamza+%22Monitoring+Refinement+via+Symbolic+Reasoning%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737983",
            "PersonsString": "Michael Emmi, Constantin Enea, and Jad Hamza",
            "AffiliationsString": "IMDEA Software Institute, Spain; University of Paris Diderot, France",
            "Authors": [
                "Michael Emmi @ IMDEA Software Institute, Spain",
                "Constantin Enea @ University of Paris Diderot, France",
                "Jad Hamza @ University of Paris Diderot, France"
            ],
            "Affiliations": [
                "IMDEA Software Institute, Spain",
                "University of Paris Diderot, France",
                "University of Paris Diderot, France"
            ],
            "Abstract": "Efficient implementations of concurrent objects such as semaphores, locks, and atomic collections are essential to modern computing. Programming such objects is error prone: in minimizing the synchronization overhead between concurrent object invocations, one risks the conformance to reference implementations â€” or in formal terms, one risks violating observational refinement. Precisely testing this refinement even within a single execution is intractable, limiting existing approaches to executions with very few object invocations. We develop scalable and effective algorithms for detecting refinement violations. Our algorithms are founded on incremental, symbolic reasoning, and exploit foundational insights into the refinement-checking problem. Our approach is sound, in that we detect only actual violations, and scales far beyond existing violation-detection algorithms. Empirically, we find that our approach is practically complete, in that we detect the violations arising in actual executions.",
            "Award": ""
        },
        {
            "Title": "Preventing Glitches and Short Circuits in High-Level Self-Timed Chip Specifications",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-79-p",
            "URL": "http%3A%2F%2Fwww.cs.cornell.edu%2F%7Eross%2Fpublications%2Fchpeffects%2Fchpeffects-pldi15.pdf",
            "URLvideo": "",
            "URLinfo": "http%3A%2F%2Fwww.cs.cornell.edu%2F%7Eross%2Fpublications%2Fchpeffects%2F",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737967",
            "PersonsString": "Stephen Longfield, Brittany Nkounkou, Rajit Manohar, and Ross Tate",
            "AffiliationsString": "Cornell University, USA",
            "Authors": [
                "Stephen Longfield @ Cornell University, USA",
                "Brittany Nkounkou @ Cornell University, USA",
                "Rajit Manohar @ Cornell University, USA",
                "Ross Tate @ Cornell University, USA"
            ],
            "Affiliations": [
                "Cornell University, USA",
                "Cornell University, USA",
                "Cornell University, USA",
                "Cornell University, USA"
            ],
            "Abstract": "Self-timed chip designs are commonly specified in a high-level message-passing language called CHP. This language is closely related to Hoare&#039;s CSP except it admits erroneous behavior due to the necessary limitations of efficient hardware implementations. For example, two processes sending on the same channel at the same time causes glitches and short circuits in the physical chip implementation. If a CHP program maintains certain invariants, such as only one process is sending on any given channel at a time, it can guarantee an error-free execution that behaves much like a CSP program would. In this paper, we present an inferable effect system for ensuring that these invariants hold, drawing from model-checking methodologies while exploiting language-usage patterns and domain-specific specializations to achieve efficiency. This analysis is sound, and is even complete for the common subset of CHP programs without data-sensitive synchronization. We have implemented the analysis and demonstrated that it scales to validate even microprocessors.",
            "Award": ""
        },
        {
            "Title": "DAG Inlining: A Decision Procedure for Reachability-Modulo-Theories in Hierarchical Programs",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-182-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DAkash+Lal+and+Shaz+Qadeer+%22DAG+Inlining%3A+A+Decision+Procedure+for+Reachability-Modulo-Theories+in+Hierarchical+Programs%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737987",
            "PersonsString": "Akash Lal and Shaz Qadeer",
            "AffiliationsString": "Microsoft Research, India; Microsoft Research, USA",
            "Authors": [
                "Akash Lal @ Microsoft Research, India",
                "Shaz Qadeer @ Microsoft Research, USA"
            ],
            "Affiliations": [
                "Microsoft Research, India",
                "Microsoft Research, USA"
            ],
            "Abstract": "A hierarchical program is one with multiple procedures but no loops or recursion. This paper studies the problem of deciding reachability queries in hierarchical programs where individual statements can be encoded in a decidable logic (say in SMT). This problem is fundamental to verification and most directly applicable to doing bounded reachability in programs, i.e., reachability under a bound on the number of loop iterations and recursive calls. The usual method of deciding reachability in hierarchical programs is to first inline all procedures and then do reachability on the resulting single-procedure program. Such inlining unfolds the call graph of the program to a tree and may lead to an exponential increase in the size of the program. We design and evaluate a method called DAG inlining that unfolds the call graph to a directed acyclic graph (DAG) instead of a tree by sharing the bodies of procedures at certain points during inlining. DAG inlining can produce much more compact representations than tree inlining. Empirically, we show that it leads to significant improvements in the running time of a state-of-the-art verifier.",
            "Award": ""
        },
        {
            "Title": "Exploring and Enforcing Security Guarantees via Program Dependence Graphs",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-58-p",
            "URL": "http%3A%2F%2Fpeople.seas.harvard.edu%2F%7Echong%2Fpubs%2Fpldi15-pidgin.pdf",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737957",
            "PersonsString": "Andrew Johnson, Lucas Waye, Scott Moore, and Stephen Chong",
            "AffiliationsString": "Harvard University, USA; MIT Lincoln Laboratory, USA",
            "Authors": [
                "Andrew Johnson @ Harvard University, USA / MIT Lincoln Laboratory, USA",
                "Lucas Waye @ Harvard University, USA",
                "Scott Moore @ Harvard University, USA",
                "Stephen Chong @ Harvard University, USA"
            ],
            "Affiliations": [
                "Harvard University, USA / MIT Lincoln Laboratory, USA",
                "Harvard University, USA",
                "Harvard University, USA",
                "Harvard University, USA"
            ],
            "Abstract": "We present PIDGIN, a program analysis and understanding tool that enables the specification and enforcement of precise application-specific information security guarantees. PIDGIN also allows developers to interactively explore the information flows in their applications to develop policies and investigate counter-examples. PIDGIN combines program dependence graphs (PDGs), which precisely capture the information flows in a whole application, with a custom PDG query language. Queries express properties about the paths in the PDG; because paths in the PDG correspond to information flows in the application, queries can be used to specify global security policies. PIDGIN is scalable. Generating a PDG for a 330k line Java application takes 90 seconds, and checking a policy on that PDG takes under 14 seconds. The query language is expressive, supporting a large class of precise, application-specific security guarantees. Policies are separate from the code and do not interfere with testing or development, and can be used for security regression testing. We describe the design and implementation of PIDGIN and report on using it: (1) to explore information security guarantees in legacy programs; (2) to develop and modify security policies concurrently with application development; and (3) to develop policies based on known vulnerabilities.",
            "Award": ""
        },
        {
            "Title": "Making Numerical Program Analysis Fast",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-236-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DGagandeep+Singh%2C+Markus+P%C3%BCschel%2C+and+Martin+Vechev+%22Making+Numerical+Program+Analysis+Fast%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2738000",
            "PersonsString": "Gagandeep Singh, Markus PÃ¼schel, and Martin Vechev",
            "AffiliationsString": "ETH Zurich, Switzerland",
            "Authors": [
                "Gagandeep Singh @ ETH Zurich, Switzerland",
                "Markus PÃ¼schel @ ETH Zurich, Switzerland",
                "Martin Vechev @ ETH Zurich, Switzerland"
            ],
            "Affiliations": [
                "ETH Zurich, Switzerland",
                "ETH Zurich, Switzerland",
                "ETH Zurich, Switzerland"
            ],
            "Abstract": "Numerical abstract domains are a fundamental component in modern static program analysis and are used in a wide range of scenarios (e.g. computing array bounds, disjointness, etc). However, analysis with these domains can be very expensive, deeply affecting the scalability and practical applicability of the static analysis. Hence, it is critical to ensure that these domains are made highly efficient. In this work, we present a complete approach for optimizing the performance of the Octagon numerical abstract domain, a domain shown to be particularly effective in practice. Our optimization approach is based on two key insights: i) the ability to perform online decomposition of the octagons leading to a massive reduction in operation counts, and ii) leveraging classic performance optimizations from linear algebra such as vectorization, locality of reference, scalar replacement and others, for improving the key bottlenecks of the domain. Applying these ideas, we designed new algorithms for the core Octagon operators with better asymptotic runtime than prior work and combined them with the optimization techniques to achieve high actual performance. We implemented our approach in the Octagon operators exported by the popular APRON C library, thus enabling existing static analyzers using APRON to immediately benefit from our work. To demonstrate the performance benefits of our approach, we evaluated our framework on three published static analyzers showing massive speed-ups for the time spent in Octagon analysis (e.g., up to 146x) as well as significant end-to-end program analysis speed-ups (up to 18.7x). Based on these results, we believe that our framework can serve as a new basis for static analysis with the Octagon numerical domain.",
            "Award": ""
        },
        {
            "Title": "Tree Dependence Analysis",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-107-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DYusheng+Weijiang%2C+Shruthi+Balakrishna%2C+Jianqiao+Liu%2C+and+Milind+Kulkarni+%22Tree+Dependence+Analysis%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737972",
            "PersonsString": "Yusheng Weijiang, Shruthi Balakrishna, Jianqiao Liu, and Milind Kulkarni",
            "AffiliationsString": "Purdue University, USA",
            "Authors": [
                "Yusheng Weijiang @ Purdue University, USA",
                "Shruthi Balakrishna @ Purdue University, USA",
                "Jianqiao Liu @ Purdue University, USA",
                "Milind Kulkarni @ Purdue University, USA"
            ],
            "Affiliations": [
                "Purdue University, USA",
                "Purdue University, USA",
                "Purdue University, USA",
                "Purdue University, USA"
            ],
            "Abstract": "We develop a new framework for analyzing recursive methods that perform traversals over trees, called tree dependence analysis. This analysis translates dependence analysis techniques for regular programs to the irregular space, identifying the structure of dependences within a recursive method that traverses trees. We develop a dependence test that exploits the dependence structure of such programs, and can prove that several locality- and parallelism- enhancing transformations are legal. In addition, we extend our analysis with a novel path-dependent, conditional analysis to refine the dependence test and prove the legality of transformations for a wider range of algorithms. We then use these analyses to show that several common algorithms that manipulate trees recursively are amenable to several locality- and parallelism-enhancing transformations. This work shows that classical dependence analysis techniques, which have largely been confined to nested loops over array data structures, can be extended and translated to work for complex, recursive programs that operate over pointer-based data structures.",
            "Award": ""
        },
        {
            "Title": "A Formal C Memory Model Supporting Integer-Pointer Casts",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-267-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DJeehoon+Kang%2C+Chung-Kil+Hur%2C+William+Mansky%2C+Dmitri+Garbuzov%2C+Steve+Zdancewic%2C+and+Viktor+Vafeiadis+%22A+Formal+C+Memory+Model+Supporting+Integer-Pointer+Casts%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2738005",
            "PersonsString": "Jeehoon Kang, Chung-Kil Hur, William Mansky, Dmitri Garbuzov, Steve Zdancewic, and Viktor Vafeiadis",
            "AffiliationsString": "Seoul National University, South Korea; University of Pennsylvania, USA; MPI-SWS, Germany",
            "Authors": [
                "Jeehoon Kang @ Seoul National University, South Korea",
                "Chung-Kil Hur @ Seoul National University, South Korea",
                "William Mansky @ University of Pennsylvania, USA",
                "Dmitri Garbuzov @ University of Pennsylvania, USA",
                "Steve Zdancewic @ University of Pennsylvania, USA",
                "Viktor Vafeiadis @ MPI-SWS, Germany"
            ],
            "Affiliations": [
                "Seoul National University, South Korea",
                "Seoul National University, South Korea",
                "University of Pennsylvania, USA",
                "University of Pennsylvania, USA",
                "University of Pennsylvania, USA",
                "MPI-SWS, Germany"
            ],
            "Abstract": "The ISO C standard does not specify the semantics of many valid programs that use non-portable idioms such as integer-pointer casts. Recent efforts at formal definitions and verified implementation of the C language inherit this feature. By adopting high-level abstract memory models, they validate common optimizations. On the other hand, this prevents reasoning about much low-level code relying on the behavior of common implementations, where formal verification has many applications. We present the first formal memory model that allows many common optimizations and fully supports operations on the representation of pointers. All arithmetic operations are well-defined for pointers that have been cast to integers. Crucially, our model is also simple to understand and program with. All our results are fully formalized in Coq.",
            "Award": ""
        },
        {
            "Title": "Defining the Undefinedness of C",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-134-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DChris+Hathhorn%2C+Chucky+Ellison%2C+and+Grigore+Ro%C5%9Fu+%22Defining+the+Undefinedness+of+C%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737979",
            "PersonsString": "Chris Hathhorn, Chucky Ellison, and Grigore RoÅŸu",
            "AffiliationsString": "University of Missouri, USA; University of Illinois at Urbana-Champaign, USA",
            "Authors": [
                "Chris Hathhorn @ University of Missouri, USA",
                "Chucky Ellison @ University of Illinois at Urbana-Champaign, USA",
                "Grigore RoÅŸu @ University of Illinois at Urbana-Champaign, USA"
            ],
            "Affiliations": [
                "University of Missouri, USA",
                "University of Illinois at Urbana-Champaign, USA",
                "University of Illinois at Urbana-Champaign, USA"
            ],
            "Abstract": "We present a ``negative&#039;&#039; semantics of the C11 language---a semantics that does not just give meaning to correct programs, but also rejects undefined programs. We investigate undefined behavior in C and discuss the techniques and special considerations needed for formally specifying it. We have used these techniques to modify and extend a semantics of C into one that captures undefined behavior. The amount of semantic infrastructure and effort required to achieve this was unexpectedly high, in the end nearly doubling the size of the original semantics. From our semantics, we have automatically extracted an undefinedness checker, which we evaluate against other popular analysis tools, using our own test suite in addition to a third-party test suite. Our checker is capable of detecting examples of all 77 categories of core language undefinedness appearing in the C11 standard, more than any other tool we considered. Based on this evaluation, we argue that our work is the most comprehensive and complete semantic treatment of undefined behavior in C, and thus of the C language itself.",
            "Award": ""
        },
        {
            "Title": "KJS: A Complete Formal Semantics of JavaScript",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-194-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DDaejun+Park%2C+Andrei+Stef%C4%83nescu%2C+and+Grigore+Ro%C5%9Fu+%22KJS%3A+A+Complete+Formal+Semantics+of+JavaScript%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737991",
            "PersonsString": "Daejun Park, Andrei StefÄƒnescu, and Grigore RoÅŸu",
            "AffiliationsString": "University of Illinois at Urbana-Champaign, USA",
            "Authors": [
                "Daejun Park @ University of Illinois at Urbana-Champaign, USA",
                "Andrei StefÄƒnescu @ University of Illinois at Urbana-Champaign, USA",
                "Grigore RoÅŸu @ University of Illinois at Urbana-Champaign, USA"
            ],
            "Affiliations": [
                "University of Illinois at Urbana-Champaign, USA",
                "University of Illinois at Urbana-Champaign, USA",
                "University of Illinois at Urbana-Champaign, USA"
            ],
            "Abstract": "This paper presents KJS, the most complete and throughly tested formal semantics of JavaScript to date. Being executable, KJS has been tested against the ECMAScript 5.1 conformance test suite, and passes all 2,782 core language tests. Among the existing implementations of JavaScript, only Chrome V8&#039;s passes all the tests, and no other semantics passes more than 90%. In addition to a reference implementation for JavaScript, KJS also yields a simple coverage metric for a test suite: the set of semantic rules it exercises. Our semantics revealed that the ECMAScript 5.1 conformance test suite fails to cover several semantic rules. Guided by the semantics, we wrote tests to exercise those rules. The new tests revealed bugs both in production JavaScript engines (Chrome V8, Safari WebKit, Firefox SpiderMonkey) and in other semantics. KJS is symbolically executable, thus it can be used for formal analysis and verification of JavaScript programs. We verified non-trivial programs and found a known security vulnerability.",
            "Award": ""
        },
        {
            "Title": "Verdi: A Framework for Implementing and Formally Verifying Distributed Systems",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-60-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DJames+R.+Wilcox%2C+Doug+Woos%2C+Pavel+Panchekha%2C+Zachary+Tatlock%2C+Xi+Wang%2C+Michael+D.+Ernst%2C+and+Thomas+Anderson+%22Verdi%3A+A+Framework+for+Implementing+and+Formally+Verifying+Distributed+Systems%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737958",
            "PersonsString": "James R. Wilcox, Doug Woos, Pavel Panchekha, Zachary Tatlock, Xi Wang, Michael D. Ernst, and Thomas Anderson",
            "AffiliationsString": "University of Washington, USA",
            "Authors": [
                "James R. Wilcox @ University of Washington, USA",
                "Doug Woos @ University of Washington, USA",
                "Pavel Panchekha @ University of Washington, USA",
                "Zachary Tatlock @ University of Washington, USA",
                "Xi Wang @ University of Washington, USA",
                "Michael D. Ernst @ University of Washington, USA",
                "Thomas Anderson @ University of Washington, USA"
            ],
            "Affiliations": [
                "University of Washington, USA",
                "University of Washington, USA",
                "University of Washington, USA",
                "University of Washington, USA",
                "University of Washington, USA",
                "University of Washington, USA",
                "University of Washington, USA"
            ],
            "Abstract": "Distributed systems are difficult to implement correctly because they must handle both concurrency and failures: machines may crash at arbitrary points and networks may reorder, drop, or duplicate packets. Further, their behavior is often too complex to permit exhaustive testing. Bugs in these systems have led to the loss of critical data and unacceptable service outages. We present Verdi, a framework for implementing and formally verifying distributed systems in Coq. Verdi formalizes various network semantics with different faults, and the developer chooses the most appropriate fault model when verifying their implementation. Furthermore, Verdi eases the verification burden by enabling the developer to first verify their system under an idealized fault model, then transfer the resulting correctness guarantees to a more realistic fault model without any additional proof burden. To demonstrate Verdi&#039;s utility, we present the first mechanically checked proof of linearizability of the Raft state machine replication algorithm, as well as verified implementations of a primary-backup replication system and a key-value store. These verified systems provide similar performance to unverified equivalents.",
            "Award": ""
        },
        {
            "Title": "Static Detection of Asymptotic Performance Bugs in Collection Traversals",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-78-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DOswaldo+Olivo%2C+Isil+Dillig%2C+and+Calvin+Lin+%22Static+Detection+of+Asymptotic+Performance+Bugs+in+Collection+Traversals%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737966",
            "PersonsString": "Oswaldo Olivo, Isil Dillig, and Calvin Lin",
            "AffiliationsString": "University of Texas at Austin, USA",
            "Authors": [
                "Oswaldo Olivo @ University of Texas at Austin, USA",
                "Isil Dillig @ University of Texas at Austin, USA",
                "Calvin Lin @ University of Texas at Austin, USA"
            ],
            "Affiliations": [
                "University of Texas at Austin, USA",
                "University of Texas at Austin, USA",
                "University of Texas at Austin, USA"
            ],
            "Abstract": "This paper identifies and formalizes a prevalent class of asymptotic performance bugs called redundant traversal bugs and presents a novel static analysis for automatically detecting them. We evaluate our technique by implementing it in a tool called CLARITY and applying it to widely-used software packages such as the Google Core Collections Library, the Apache Common Collections, and the Apache Ant build tool. Across 1.6M lines of Java code, CLARITY finds 92 instances of redundant traversal bugs, including 72 that have never been previously reported, with just 5 false positives. To evaluate the performance impact of these bugs, we manually repair these programs and find that for an input size of 50,000, all repaired programs are at least 2.45 faster than their original code.",
            "Award": ""
        },
        {
            "Title": "Autotuning Algorithmic Choice for Input Sensitivity",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-100-p",
            "URL": "http%3A%2F%2Fpeople.engr.ncsu.edu%2Fxshen5%2FPublications%2Fpldi15.pdf",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737969",
            "PersonsString": "Yufei Ding, Jason Ansel, Kalyan Veeramachaneni, Xipeng Shen, Una-May Oâ€™Reilly, and Saman Amarasinghe",
            "AffiliationsString": "North Carolina State University, USA; Massachusetts Institute of Technology, USA",
            "Authors": [
                "Yufei Ding @ North Carolina State University, USA",
                "Jason Ansel @ Massachusetts Institute of Technology, USA",
                "Kalyan Veeramachaneni @ Massachusetts Institute of Technology, USA",
                "Xipeng Shen @ North Carolina State University, USA",
                "Una-May Oâ€™Reilly @ Massachusetts Institute of Technology, USA",
                "Saman Amarasinghe @ Massachusetts Institute of Technology, USA"
            ],
            "Affiliations": [
                "North Carolina State University, USA",
                "Massachusetts Institute of Technology, USA",
                "Massachusetts Institute of Technology, USA",
                "North Carolina State University, USA",
                "Massachusetts Institute of Technology, USA",
                "Massachusetts Institute of Technology, USA"
            ],
            "Abstract": "A daunting challenge faced by program performance autotuning is input sensitivity, where the best autotuned configuration may vary with different input sets. This paper presents a novel two-level input learning algorithm to tackle the challenge for an important class of autotuning problems, algorithmic autotuning. The new approach uses a two-level input clustering method to automatically refine input grouping, feature selection, and classifier construction. Its design solves a series of open issues that are particularly essential to algorithmic autotuning, including the enormous optimization space, complex influence by deep input features, high cost in feature extraction, and variable accuracy of algorithmic choices. Experimental results show that the new solution yields up to a 3x speedup over using a single configuration for all inputs, and a 34x speedup over a traditional one-level method for addressing input sensitivity in program optimizations.",
            "Award": ""
        },
        {
            "Title": "Helium: Lifting High-Performance Stencil Kernels from Stripped x86 Binaries to Halide DSL Code",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-113-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DCharith+Mendis%2C+Jeffrey+Bosboom%2C+Kevin+Wu%2C+Shoaib+Kamil%2C+Jonathan+Ragan-Kelley%2C+Sylvain+Paris%2C+Qin+Zhao%2C+and+Saman+Amarasinghe+%22Helium%3A+Lifting+High-Performance+Stencil+Kernels+from+Stripped+x86+Binaries+to+Halide+DSL+Code%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737974",
            "PersonsString": "Charith Mendis, Jeffrey Bosboom, Kevin Wu, Shoaib Kamil, Jonathan Ragan-Kelley, Sylvain Paris, Qin Zhao, and Saman Amarasinghe",
            "AffiliationsString": "Massachusetts Institute of Technology, USA; Stanford University, USA; Adobe, USA; Google, USA",
            "Authors": [
                "Charith Mendis @ Massachusetts Institute of Technology, USA",
                "Jeffrey Bosboom @ Massachusetts Institute of Technology, USA",
                "Kevin Wu @ Massachusetts Institute of Technology, USA",
                "Shoaib Kamil @ Massachusetts Institute of Technology, USA",
                "Jonathan Ragan-Kelley @ Stanford University, USA",
                "Sylvain Paris @ Adobe, USA",
                "Qin Zhao @ Google, USA",
                "Saman Amarasinghe @ Massachusetts Institute of Technology, USA"
            ],
            "Affiliations": [
                "Massachusetts Institute of Technology, USA",
                "Massachusetts Institute of Technology, USA",
                "Massachusetts Institute of Technology, USA",
                "Massachusetts Institute of Technology, USA",
                "Stanford University, USA",
                "Adobe, USA",
                "Google, USA",
                "Massachusetts Institute of Technology, USA"
            ],
            "Abstract": "Highly optimized programs are prone to bit rot, where performance quickly becomes suboptimal in the face of new hardware and compiler techniques. In this paper we show how to automatically lift performance-critical stencil kernels from a stripped x86 binary and generate the corresponding code in the high-level domain-specific language Halide. Using Halideâ€™s state-of-the-art optimizations targeting current hardware, we show that new optimized versions of these kernels can replace the originals to rejuvenate the application for newer hardware. The original optimized code for kernels in stripped binaries is nearly impossible to analyze statically. Instead, we rely on dynamic traces to regenerate the kernels. We perform buffer structure reconstruction to identify input, intermediate and output buffer shapes. We abstract from a forest of concrete dependency trees which contain absolute memory addresses to symbolic trees suitable for high-level code generation. This is done by canonicalizing trees, clustering them based on structure, inferring higher-dimensional buffer accesses and finally by solving a set of linear equations based on buffer accesses to lift them up to simple, high-level expressions. Helium can handle highly optimized, complex stencil kernels with input-dependent conditionals. We lift seven kernels from Adobe Photoshop giving a 75% performance improvement, four kernels from IrfanView, leading to 4.97Ã— performance, and one stencil from the miniGMG multigrid benchmark netting a 4.25Ã— improvement in performance. We manually rejuvenated Photoshop by replacing eleven of Photoshopâ€™s filters with our lifted implementations, giving 1.12Ã— speedup without affecting the user experience.",
            "Award": ""
        },
        {
            "Title": "Profile-Guided Meta-Programming",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-193-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DWilliam+J.+Bowman%2C+Swaha+Miller%2C+Vincent+St-Amour%2C+and+R.+Kent+Dybvig+%22Profile-Guided+Meta-Programming%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737990",
            "PersonsString": "William J. Bowman, Swaha Miller, Vincent St-Amour, and R. Kent Dybvig",
            "AffiliationsString": "Northeastern University, USA; Cisco Systems, USA",
            "Authors": [
                "William J. Bowman @ Northeastern University, USA / Cisco Systems, USA",
                "Swaha Miller @ Cisco Systems, USA",
                "Vincent St-Amour @ Northeastern University, USA",
                "R. Kent Dybvig @ Cisco Systems, USA"
            ],
            "Affiliations": [
                "Northeastern University, USA / Cisco Systems, USA",
                "Cisco Systems, USA",
                "Northeastern University, USA",
                "Cisco Systems, USA"
            ],
            "Abstract": "Contemporary compiler systems such as GCC, .NET, and LLVM incorporate profile-guided optimizations (PGOs) on low-level intermediate code and basic blocks, with impressive results over purely static heuristics. Recent work shows that profile information is also useful for performing source-to-source optimizations via meta-programming. For example, using profiling information to inform decisions about data structures and algorithms can potentially lead to asymptotic improvements in performance. We present a design for profile-guided meta-programming in a general-purpose meta-programming system. Our design is parametric over the particular profiler and meta-programming system. We implement this design in two different meta-programming systems---the syntactic extensions systems of Chez Scheme and Racket---and provide several profile-guided meta-programs as usability case studies.",
            "Award": ""
        },
        {
            "Title": "Declarative Programming over Eventually Consistent Data Stores",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-143-p",
            "URL": "http%3A%2F%2Fkcsrk.info%2Fpapers%2Fquelea_pldi15.pdf",
            "URLvideo": "",
            "URLinfo": "http%3A%2F%2Fkcsrk.info%2FQuelea%2F",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737981",
            "PersonsString": "KC Sivaramakrishnan, Gowtham Kaki, and Suresh Jagannathan",
            "AffiliationsString": "University of Cambridge, UK; Purdue University, USA",
            "Authors": [
                "KC Sivaramakrishnan @ University of Cambridge, UK",
                "Gowtham Kaki @ Purdue University, USA",
                "Suresh Jagannathan @ Purdue University, USA"
            ],
            "Affiliations": [
                "University of Cambridge, UK",
                "Purdue University, USA",
                "Purdue University, USA"
            ],
            "Abstract": "User-facing online services utilize geo-distributed data stores to minimize latency and tolerate partial failures, with the intention of providing a fast, always-on experience. However, geo-distribution does not come for free; application developers have to contend with weak consistency behaviors, and the lack of abstractions to composably construct high-level replicated data types, necessitating the need for complex application logic and invariably exposing inconsistencies to the user. Some commercial distributed data stores and several academic proposals provide a lattice of consistency levels, with stronger consistency guarantees incurring increased latency and throughput costs. However, correctly assigning the right consistency level for an operation requires subtle reasoning and is often an error-prone task. In this paper, we present QUELEA, a declarative programming model for eventually consistent data stores (ECDS), equipped with a contract language, capable of specifying fine-grained application - level consistency properties. A contract enforcement system analyses contracts, and automatically generates the appropriate consistency protocol for the method protected by the contract. We describe an implementation of QUELEA on top of an off-the-shelf ECDS that provides support for coordination-free transactions. Several benchmarks including two large web applications, illustrate the effectiveness of our approach.",
            "Award": ""
        },
        {
            "Title": "Blame and Coercion: Together Again for the First Time",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-92-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DJeremy+Siek%2C+Peter+Thiemann%2C+and+Philip+Wadler+%22Blame+and+Coercion%3A+Together+Again+for+the+First+Time%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737968",
            "PersonsString": "Jeremy Siek, Peter Thiemann, and Philip Wadler",
            "AffiliationsString": "Indiana University, USA; University of Freiburg, Germany; University of Edinburgh, UK",
            "Authors": [
                "Jeremy Siek @ Indiana University, USA",
                "Peter Thiemann @ University of Freiburg, Germany",
                "Philip Wadler @ University of Edinburgh, UK"
            ],
            "Affiliations": [
                "Indiana University, USA",
                "University of Freiburg, Germany",
                "University of Edinburgh, UK"
            ],
            "Abstract": "C#, Dart, Pyret, Racket, TypeScript, VB: many recent languages integrate dynamic and static types via gradual typing. We systematically develop three calculi for gradual typing and the relations between them, building on and strengthening previous work. The calculi are: Î»B, based on the blame calculus of Wadler and Findler (2009); Î»C, inspired by the coercion calculus of Henglein (1994); Î»S inspired by the space-efficient calculus of Herman, Tomb, and Flanagan (2006) and the threesome calculus of Siek and Wadler (2010). While Î»B is little changed from previous work, Î»C and Î»S are new. Together, Î»B, Î»C, and Î»S provide a coherent foundation for design, implementation, and optimisation of gradual types. We define translations from Î»B to Î»C and from Î»C to Î»S. Much previous work lacked proofs of correctness or had weak correctness criteria; here we demonstrate the strongest correctness criterion one could hope for, that each of the translations is fully abstract. Each of the calculi reinforces the design of the others: Î»C has a particularly simple definition, and the subtle definition of blame safety for Î»B is justified by the simple definition of blame safety for Î»C. Our calculus Î»S is implementation-ready: the first space-efficient calculus that is both straightforward to implement and easy to understand. We give two applications: first, using full abstraction from Î»C to Î»S to validate the challenging part of full abstraction between Î»B and Î»C; and, second, using full abstraction from Î»B to Î»S to easily establish the Fundamental Property of Casts, which required a custom bisimulation and six lemmas in earlier work.",
            "Award": ""
        },
        {
            "Title": "Lightweight, Flexible Object-Oriented Generics",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-309-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DYizhou+Zhang%2C+Matthew+C.+Loring%2C+Guido+Salvaneschi%2C+Barbara+Liskov%2C+and+Andrew+C.+Myers+%22Lightweight%2C+Flexible+Object-Oriented+Generics%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2738008",
            "PersonsString": "Yizhou Zhang, Matthew C. Loring, Guido Salvaneschi, Barbara Liskov, and Andrew C. Myers",
            "AffiliationsString": "Cornell University, USA; TU Darmstadt, Germany; Massachusetts Institute of Technology, USA",
            "Authors": [
                "Yizhou Zhang @ Cornell University, USA",
                "Matthew C. Loring @ Cornell University, USA",
                "Guido Salvaneschi @ TU Darmstadt, Germany",
                "Barbara Liskov @ Massachusetts Institute of Technology, USA",
                "Andrew C. Myers @ Cornell University, USA"
            ],
            "Affiliations": [
                "Cornell University, USA",
                "Cornell University, USA",
                "TU Darmstadt, Germany",
                "Massachusetts Institute of Technology, USA",
                "Cornell University, USA"
            ],
            "Abstract": "The support for generic programming in modern object-oriented programming languages is awkward and lacks desirable expressive power. We introduce an expressive genericity mechanism that adds expressive power and strengthens static checking, while remaining lightweight and simple in common use cases. Like type classes and concepts, the mechanism allows existing types to model type constraints retroactively. For expressive power, we expose models as named constructs that can be defined and selected explicitly to witness constraints; in common uses of genericity, however, types implicitly witness constraints without additional programmer effort. Models are integrated into the object-oriented style, with features like model generics, model-dependent types, model enrichment, model multimethods, constraint entailment, model inheritance, and existential quantification further extending expressive power in an object-oriented setting. We introduce the new genericity features and show that common generic programming idioms, including current generic libraries, can be expressed more precisely and concisely. The static semantics of the mechanism and a proof of a key decidability property can be found in an associated technical report.",
            "Award": ""
        },
        {
            "Title": "Relatively Complete Counterexamples for Higher-Order Programs",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-103-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DPh%C3%BAc+C.+Nguy%E1%BB%85n+and+David+Van+Horn+%22Relatively+Complete+Counterexamples+for+Higher-Order+Programs%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737971",
            "PersonsString": "PhÃºc C. Nguyá»…n and David Van Horn",
            "AffiliationsString": "University of Maryland, USA",
            "Authors": [
                "PhÃºc C. Nguyá»…n @ University of Maryland, USA",
                "David Van Horn @ University of Maryland, USA"
            ],
            "Affiliations": [
                "University of Maryland, USA",
                "University of Maryland, USA"
            ],
            "Abstract": "In this paper, we study the problem of generating inputs to a higher-order program causing it to error. We first approach the problem in the setting of PCF, a typed, core functional language and contribute the first relatively complete method for constructing counterexamples for PCF programs. The method is relatively complete with respect to a first-order solver over the base types of PCF. In practice, this means an SMT solver can be used for the effective, automated generation of higher-order counterexamples for a large class of programs. We achieve this result by employing a novel form of symbolic execution for higher-order programs. The remarkable aspect of this symbolic execution is that even though symbolic higher-order inputs and values are considered, the path condition remains a first-order formula. Our handling of symbolic function application enables the reconstruction of higher-order counterexamples from this first-order formula. After establishing our main theoretical results, we sketch how to apply the approach to untyped, higher-order, stateful languages with first-class contracts and show how counterexample generation can be used to detect contract violations in this setting. To validate our approach, we implement a tool generating counterexamples for erroneous modules written in Racket.",
            "Award": ""
        },
        {
            "Title": "Automatic Induction Proofs of Data-Structures in Imperative Programs",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-155-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DDuc-Hiep+Chu%2C+Joxan+Jaffar%2C+and+Minh-Thai+Trinh+%22Automatic+Induction+Proofs+of+Data-Structures+in+Imperative+Programs%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737984",
            "PersonsString": "Duc-Hiep Chu, Joxan Jaffar, and Minh-Thai Trinh",
            "AffiliationsString": "National University of Singapore, Singapore",
            "Authors": [
                "Duc-Hiep Chu @ National University of Singapore, Singapore",
                "Joxan Jaffar @ National University of Singapore, Singapore",
                "Minh-Thai Trinh @ National University of Singapore, Singapore"
            ],
            "Affiliations": [
                "National University of Singapore, Singapore",
                "National University of Singapore, Singapore",
                "National University of Singapore, Singapore"
            ],
            "Abstract": "We consider the problem of automated reasoning about dynamically manipulated data structures. Essential properties are encoded as predicates whose definitions are formalized via user-defined recursive rules. Traditionally, proving relationships between such properties is limited to the unfold-and-match (U+M) paradigm which employs systematic transformation steps of folding/unfolding the rules. A proof, using U+M, succeeds when we find a sequence of transformations that produces a final formula which is obviously provable by simply matching terms. Our contribution here is the addition of the fundamental principle of induction to this automated process. We first show that some proof obligations that are dynamically generated in the process can be used as induction hypotheses in the future, and then we show how to use these hypotheses in an induction step which generates a new proof obligation aside from those obtained by using the fold/unfold operations. While the adding of induction is an obvious need in general, no automated method has managed to include this in a systematic and general way. The main reason for this is the problem of avoiding circular reasoning. We overcome this with a novel checking condition. In summary, our contribution is a proof method which â€“ beyond U+M â€“ performs automatic formula re-writing by treating previously encountered obligations in each proof path as possible induction hypotheses. In the practical evaluation part of this paper, we show how the commonly used technique of using unproven lemmas can be avoided, using realistic benchmarks. This not only removes the current burden of coming up with the appropriate lemmas, but also significantly boosts up the verification process, since lemma applications, coupled with unfolding, often induce a large search space. In the end, our method can automatically reason about a new class of formulas arising from practical program verification.",
            "Award": ""
        },
        {
            "Title": "Compositional Certified Resource Bounds",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-41-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DQuentin+Carbonneaux%2C+Jan+Hoffmann%2C+and+Zhong+Shao+%22Compositional+Certified+Resource+Bounds%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737955",
            "PersonsString": "Quentin Carbonneaux, Jan Hoffmann, and Zhong Shao",
            "AffiliationsString": "Yale University, USA",
            "Authors": [
                "Quentin Carbonneaux @ Yale University, USA",
                "Jan Hoffmann @ Yale University, USA",
                "Zhong Shao @ Yale University, USA"
            ],
            "Affiliations": [
                "Yale University, USA",
                "Yale University, USA",
                "Yale University, USA"
            ],
            "Abstract": "This paper presents a new approach for automatically deriving worst-case resource bounds for C programs. The described technique combines ideas from amortized analysis and abstract interpretation in a unified framework to address four challenges for state-of-the-art techniques: compositionality, user interaction, generation of proof certificates, and scalability. Compositionality is achieved by incorporating the potential method of amortized analysis. It enables the derivation of global whole-program bounds with local derivation rules by naturally tracking size changes of variables in sequenced loops and function calls. The resource consumption of functions is described abstractly and a function call can be analyzed without access to the function body. User interaction is supported with a new mechanism that clearly separates qualitative and quantitative verification. A user can guide the analysis to derive complex non-linear bounds by using auxiliary variables and assertions. The assertions are separately proved using established qualitative techniques such as abstract interpretation or Hoare logic. Proof certificates are automatically generated from the local derivation rules. A soundness proof of the derivation system with respect to a formal cost semantics guarantees the validity of the certificates. Scalability is attained by an efficient reduction of bound inference to a linear optimization problem that can be solved by off-the-shelf LP solvers. The analysis framework is implemented in the publicly-available tool C4B. An experimental evaluation demonstrates the advantages of the new technique with a comparison of C4B with existing tools on challenging micro benchmarks and the analysis of more than 2900 lines of C code from the cBench benchmark suite.",
            "Award": ""
        },
        {
            "Title": "Peer-to-Peer Affine Commitment using Bitcoin",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-227-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DKarl+Crary+and+Michael+J.+Sullivan+%22Peer-to-Peer+Affine+Commitment+using+Bitcoin%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737997",
            "PersonsString": "Karl Crary and Michael J. Sullivan",
            "AffiliationsString": "Carnegie Mellon University, USA",
            "Authors": [
                "Karl Crary @ Carnegie Mellon University, USA",
                "Michael J. Sullivan @ Carnegie Mellon University, USA"
            ],
            "Affiliations": [
                "Carnegie Mellon University, USA",
                "Carnegie Mellon University, USA"
            ],
            "Abstract": "The power of linear and affine logic lies in their ability to model state change. However, in a trustless, peer-to-peer setting, it is difficult to force principals to commit to state changes. We show how to solve the peer-to-peer affine commitment problem using a generalization of Bitcoin in which transactions deal in types rather than numbers. This has applications to proof-carrying authorization and mechanically executable contracts. Importantly, our system can be---and is---implemented on top of the existing Bitcoin network, so there is no need to recruit computing power to a new protocol.",
            "Award": ""
        },
        {
            "Title": "Termination and Non-termination Specification Inference",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-196-p",
            "URL": "http%3A%2F%2Floris-7.ddns.comp.nus.edu.sg%2F%7Eproject%2Fhiptnt%2Fplus%2Fsrc%2FHipTNT_Plus.pdf",
            "URLvideo": "",
            "URLinfo": "http%3A%2F%2Floris-7.ddns.comp.nus.edu.sg%2F%7Eproject%2Fhiptnt%2Fplus%2F",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737993",
            "PersonsString": "Ton Chanh Le, Shengchao Qin, and Wei-Ngan Chin",
            "AffiliationsString": "National University of Singapore, Singapore; Teesside University, UK; Shenzhen University, China",
            "Authors": [
                "Ton Chanh Le @ National University of Singapore, Singapore",
                "Shengchao Qin @ Teesside University, UK / Shenzhen University, China",
                "Wei-Ngan Chin @ National University of Singapore, Singapore"
            ],
            "Affiliations": [
                "National University of Singapore, Singapore",
                "Teesside University, UK / Shenzhen University, China",
                "National University of Singapore, Singapore"
            ],
            "Abstract": "Techniques for proving termination and non-termination of imperative programs are usually considered as orthogonal mechanisms. In this paper, we propose a novel mechanism that analyzes and proves both program termination and non-termination at the same time. We first introduce the concept of second-order termination constraints and accumulate a set of relational assumptions on them via a Hoare-style verification. We then solve these assumptions with case analysis to determine the (conditional) termination and non- termination scenarios expressed in some specification logic form. In contrast to current approaches, our technique can construct a summary of terminating and non-terminating behaviors for each method. This enables modularity and reuse for our termination and non-termination proving processes. We have tested our tool on sample programs from a recent termination competition, and compared favorably against state-of-the-art termination analyzers.",
            "Award": ""
        },
        {
            "Title": "Celebrating Diversity: A Mixture of Experts Approach for Runtime Mapping in Dynamic Environments",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-235-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DMurali+Krishna+Emani+and+Michael+O%27Boyle+%22Celebrating+Diversity%3A+A+Mixture+of+Experts+Approach+for+Runtime+Mapping+in+Dynamic+Environments%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737999",
            "PersonsString": "Murali Krishna Emani and Michael O'Boyle",
            "AffiliationsString": "University of Edinburgh, UK",
            "Authors": [
                "Murali Krishna Emani @ University of Edinburgh, UK",
                "Michael O'Boyle @ University of Edinburgh, UK"
            ],
            "Affiliations": [
                "University of Edinburgh, UK",
                "University of Edinburgh, UK"
            ],
            "Abstract": "Matching program parallelism to platform parallelism using thread selection is difficult when the environment and available resources dynamically change. Existing compiler or runtime approaches are typically based on a one-size fits all policy. There is little ability to either evaluate or adapt the policy when encountering new external workloads or hardware resources. This paper focuses on selecting the best number of threads for a parallel application in dynamic environments. It develops a new scheme based on a mixture of experts approach. It learns online which, of a number of existing policies, or experts, is best suited for a particular environment without having to try out each policy. It does this by using a novel environment predictor as a proxy for the quality of an expert thread selection policy. Additional expert policies can easily be added and are selected only when appropriate. We evaluate our scheme in environments with varying external workloads and hardware resources.We then consider the case when workloads use affinity scheduling or are themselves adaptive and show that our approach, in all cases, outperforms existing schemes and surprisingly improves workload performance. On average, we improve 1.66x over OpenMP default, 1.34x over an online scheme, 1.25x over an offline policy and 1.2x over a state-of-art analytic model. Determining the right number and type of experts is an open problem and our initial analysis shows that adding more experts improves accuracy and performance.",
            "Award": ""
        },
        {
            "Title": "Efficient Execution of Recursive Programs on Commodity Vector Hardware",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-252-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DBin+Ren%2C+Youngjoon+Jo%2C+Sriram+Krishnamoorthy%2C+Kunal+Agrawal%2C+and+Milind+Kulkarni+%22Efficient+Execution+of+Recursive+Programs+on+Commodity+Vector+Hardware%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2738004",
            "PersonsString": "Bin Ren, Youngjoon Jo, Sriram Krishnamoorthy, Kunal Agrawal, and Milind Kulkarni",
            "AffiliationsString": "Pacific Northwest National Laboratory, USA; Purdue University, USA; Washington University at St. Louis, USA",
            "Authors": [
                "Bin Ren @ Pacific Northwest National Laboratory, USA",
                "Youngjoon Jo @ Purdue University, USA",
                "Sriram Krishnamoorthy @ Pacific Northwest National Laboratory, USA",
                "Kunal Agrawal @ Washington University at St. Louis, USA",
                "Milind Kulkarni @ Purdue University, USA"
            ],
            "Affiliations": [
                "Pacific Northwest National Laboratory, USA",
                "Purdue University, USA",
                "Pacific Northwest National Laboratory, USA",
                "Washington University at St. Louis, USA",
                "Purdue University, USA"
            ],
            "Abstract": "The pursuit of computational efficiency has led to the proliferation of throughput-oriented hardware, from GPUs to increasingly wide vector units on commodity processors and accelerators. This hardware is designed to efficiently execute data-parallel computations in a vectorized manner. However, many algorithms are more naturally expressed as divide-and-conquer, recursive, task-parallel computations. In the absence of data parallelism, it seems that such algorithms are not well suited to throughput-oriented architectures. This paper presents a set of novel code transformations that expose the data parallelism latent in recursive, task-parallel programs. These transformations facilitate straightforward vectorization of task-parallel programs on commodity hardware. We also present scheduling policies that maintain high utilization of vector resources while limiting space usage. Across several task-parallel benchmarks, we demonstrate both efficient vector resource utilization and substantial speedup on chips using Intelâ€™s SSE4.2 vector units, as well as accelerators using Intelâ€™s AVX512 units.",
            "Award": ""
        },
        {
            "Title": "Loop and Data Transformations for Sparse Matrix Code",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-249-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DAnand+Venkat%2C+Mary+Hall%2C+and+Michelle+Strout+%22Loop+and+Data+Transformations+for+Sparse+Matrix+Code%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2738003",
            "PersonsString": "Anand Venkat, Mary Hall, and Michelle Strout",
            "AffiliationsString": "University of Utah, USA; Colorado State University, USA",
            "Authors": [
                "Anand Venkat @ University of Utah, USA",
                "Mary Hall @ University of Utah, USA",
                "Michelle Strout @ Colorado State University, USA"
            ],
            "Affiliations": [
                "University of Utah, USA",
                "University of Utah, USA",
                "Colorado State University, USA"
            ],
            "Abstract": "This paper introduces three new compiler transformations for representing and transforming sparse matrix computations and their data representations. In cooperation with run-time inspection, our compiler derives transformed matrix representations and associated transformed code to implement a variety of representations targeting different architecture platforms. This systematic approach to combining code and data transformations on sparse computations, which extends a polyhedral transformation and code generation framework, permits the compiler to compose these transformations with other transformations to generate code that is on average within 5% and often exceeds manually-tuned, high-performance sparse matrix libraries CUSP and OSKI. Additionally, the compiler-generated inspector codes are on average 1.5 faster than OSKI and perform comparably to CUSP, respectively.",
            "Award": ""
        },
        {
            "Title": "Synthesizing Parallel Graph Programs via Automated Planning",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-30-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DDimitrios+Prountzos%2C+Roman+Manevich%2C+and+Keshav+Pingali+%22Synthesizing+Parallel+Graph+Programs+via+Automated+Planning%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737953",
            "PersonsString": "Dimitrios Prountzos, Roman Manevich, and Keshav Pingali",
            "AffiliationsString": "University of Texas at Austin, USA; Ben-Gurion University of the Negev, Israel",
            "Authors": [
                "Dimitrios Prountzos @ University of Texas at Austin, USA",
                "Roman Manevich @ Ben-Gurion University of the Negev, Israel",
                "Keshav Pingali @ University of Texas at Austin, USA"
            ],
            "Affiliations": [
                "University of Texas at Austin, USA",
                "Ben-Gurion University of the Negev, Israel",
                "University of Texas at Austin, USA"
            ],
            "Abstract": "We describe a system that uses automated planning to synthesize correct and efficient parallel graph programs from high-level algorithmic specifications. Automated planning allows us to use constraints to declaratively encode program transformations such as scheduling, implementation selection, and insertion of synchronization. Each plan emitted by the planner satisfies all constraints simultaneously, and corresponds to a composition of these transformations. In this way, we obtain an integrated compilation approach for a very challenging problem domain. We have used this system to synthesize parallel programs for four graph problems: triangle counting, maximal independent set computation, preflow-push maxflow, and connected components. Experiments on a variety of inputs show that the synthesized implementations perform competitively with hand-written, highly-tuned code.",
            "Award": ""
        },
        {
            "Title": "Zero-Overhead Metaprogramming: Reflection and Metaobject Protocols Fast and without Compromises",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-71-p",
            "URL": "http%3A%2F%2Fstefan-marr.de%2Fdownloads%2Fpldi15-marr-et-al-zero-overhead-metaprogramming.pdf",
            "URLvideo": "",
            "URLinfo": "http%3A%2F%2Fstefan-marr.de%2Fpapers%2Fpldi-marr-et-al-zero-overhead-metaprogramming%2F",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737963",
            "PersonsString": "Stefan Marr, Chris Seaton, and StÃ©phane Ducasse",
            "AffiliationsString": "INRIA, France; Oracle Labs, USA; University of Manchester, UK",
            "Authors": [
                "Stefan Marr @ INRIA, France",
                "Chris Seaton @ Oracle Labs, USA / University of Manchester, UK",
                "StÃ©phane Ducasse @ INRIA, France"
            ],
            "Affiliations": [
                "INRIA, France",
                "Oracle Labs, USA / University of Manchester, UK",
                "INRIA, France"
            ],
            "Abstract": "Runtime metaprogramming enables many useful applications and is often a convenient solution to solve problems in a generic way, which makes it widely used in frameworks, middleware, and domain-specific languages. However, powerful metaobject protocols are rarely supported and even common concepts such as reflective method invocation or dynamic proxies are not optimized. Solutions proposed in literature either restrict the metaprogramming capabilities or require application or library developers to apply performance improving techniques. For overhead-free runtime metaprogramming, we demonstrate that dispatch chains, a generalized form of polymorphic inline caches common to self-optimizing interpreters, are a simple optimization at the language-implementation level. Our evaluation with self-optimizing interpreters shows that unrestricted metaobject protocols can be realized for the first time without runtime overhead, and that this optimization is applicable for just-in-time compilation of interpreters based on meta-tracing as well as partial evaluation. In this context, we also demonstrate that optimizing common reflective operations can lead to significant performance improvements for existing applications.",
            "Award": ""
        },
        {
            "Title": "Finding Counterexamples from Parsing Conflicts",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-66-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DChinawat+Isradisaikul+and+Andrew+C.+Myers+%22Finding+Counterexamples+from+Parsing+Conflicts%22",
            "URLvideo": "",
            "URLinfo": "https%3A%2F%2Fgithub.com%2Fpolyglot-compiler%2Fpolyglot%2Ftree%2Fmaster%2Ftools%2Fjava_cup",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737961",
            "PersonsString": "Chinawat Isradisaikul and Andrew C. Myers",
            "AffiliationsString": "Cornell University, USA",
            "Authors": [
                "Chinawat Isradisaikul @ Cornell University, USA",
                "Andrew C. Myers @ Cornell University, USA"
            ],
            "Affiliations": [
                "Cornell University, USA",
                "Cornell University, USA"
            ],
            "Abstract": "Writing a parser remains remarkably painful. Automatic parser generators offer a powerful and systematic way to parse complex grammars, but debugging conflicts in grammars can be time-consuming even for experienced language designers. Better tools for diagnosing parsing conflicts will alleviate this difficulty. This paper proposes a practical algorithm that generates compact, helpful counterexamples for LALR grammars. For each parsing conflict in a grammar, a counterexample demonstrating the conflict is constructed. When the grammar in question is ambiguous, the algorithm usually generates a compact counterexample illustrating the ambiguity. This algorithm has been implemented as an extension to the CUP parser generator. The results from applying this implementation to a diverse collection of faulty grammars show that the algorithm is practical, effective, and suitable for inclusion in other LALR parser generators.",
            "Award": ""
        },
        {
            "Title": "Interactive Parser Synthesis by Example",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-248-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DAlan+Leung%2C+John+Sarracino%2C+and+Sorin+Lerner+%22Interactive+Parser+Synthesis+by+Example%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2738002",
            "PersonsString": "Alan Leung, John Sarracino, and Sorin Lerner",
            "AffiliationsString": "University of California at San Diego, USA",
            "Authors": [
                "Alan Leung @ University of California at San Diego, USA",
                "John Sarracino @ University of California at San Diego, USA",
                "Sorin Lerner @ University of California at San Diego, USA"
            ],
            "Affiliations": [
                "University of California at San Diego, USA",
                "University of California at San Diego, USA",
                "University of California at San Diego, USA"
            ],
            "Abstract": "Despite decades of research on parsing, the construction of parsers remains a painstaking, manual process prone to subtle bugs and pitfalls. We present a programming-by-example framework called Parsify that is able to synthesize a parser from input/output examples. The user does not write a single line of code. To achieve this, Parsify provides: (a) an iterative algorithm for synthesizing and refining a grammar one example at a time, (b) an interface that provides immediate visual feedback in response to changes in the grammar being refined, and (c) a graphical mechanism for specifying example parse trees using only textual selections. We empirically demonstrate the viability of our approach by using Parsify to construct parsers for source code drawn from Verilog, SQL, Apache, and Tiger.",
            "Award": ""
        },
        {
            "Title": "A Simpler, Safer Programming and Execution Model for Intermittent Systems",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-130-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DBrandon+Lucia+and+Benjamin+Ransford+%22A+Simpler%2C+Safer+Programming+and+Execution+Model+for+Intermittent+Systems%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737978",
            "PersonsString": "Brandon Lucia and Benjamin Ransford",
            "AffiliationsString": "Carnegie Mellon University, USA; University of Washington, USA",
            "Authors": [
                "Brandon Lucia @ Carnegie Mellon University, USA",
                "Benjamin Ransford @ University of Washington, USA"
            ],
            "Affiliations": [
                "Carnegie Mellon University, USA",
                "University of Washington, USA"
            ],
            "Abstract": "Energy harvesting enables novel devices and applications without batteries, but intermittent operation under energy harvesting poses new challenges to memory consistency that threaten to leave applications in failed states not reachable in continuous execution. This paper presents analytical models that aid in reasoning about intermittence. Using these, we develop DINO (Death Is Not an Option), a programming and execution model that simplifies programming for intermittent systems and ensures volatile and nonvolatile data consistency despite near-constant interruptions. DINO is the first system to address these consistency problems in the context of intermittent execution. We evaluate DINO on three energy-harvesting hardware platforms running different applications. The applications fail and exhibit error without DINO, but run correctly with DINOâ€™s modest 1.8â€“2.7Ã— run-time overhead. DINO also dramatically simplifies programming, reducing the set of possible failure- related control transfers by 5â€“9Ã—.",
            "Award": ""
        },
        {
            "Title": "Concurrency Debugging with Differential Schedule Projections",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-109-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DNuno+Machado%2C+Brandon+Lucia%2C+and+Lu%C3%ADs+Rodrigues+%22Concurrency+Debugging+with+Differential+Schedule+Projections%22",
            "URLvideo": "https%3A%2F%2Fyoutu.be%2F06rqL2QKEU4",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737973",
            "PersonsString": "Nuno Machado, Brandon Lucia, and LuÃ­s Rodrigues",
            "AffiliationsString": "Universidade de Lisboa, Portugal; Carnegie Mellon University, USA",
            "Authors": [
                "Nuno Machado @ Universidade de Lisboa, Portugal",
                "Brandon Lucia @ Carnegie Mellon University, USA",
                "LuÃ­s Rodrigues @ Universidade de Lisboa, Portugal"
            ],
            "Affiliations": [
                "Universidade de Lisboa, Portugal",
                "Carnegie Mellon University, USA",
                "Universidade de Lisboa, Portugal"
            ],
            "Abstract": "We present Symbiosis: a concurrency debugging technique based on novel differential schedule projections (DSPs). A DSP shows the small set of memory operations and data-flows responsible for a failure, as well as a reordering of those elements that avoids the failure. To build a DSP, Symbiosis first generates a full, failing, multithreaded schedule via thread path profiling and symbolic constraint solving. Symbiosis selectively reorders events in the failing schedule to produce a non-failing, alternate schedule. A DSP reports the ordering and data-flow differences between the failing and non-failing schedules. Our evaluation on buggy real-world software and benchmarks shows that, in practical time, Symbiosis generates DSPs that both isolate the small fraction of event orders and data-flows responsible for the failure, and show which event reorderings prevent failing. In our experiments, DSPs contain 81% fewer events and 96% less data-flows than the full failure-inducing schedules. Moreover, by allowing developers to focus on only a few events, DSPs reduce the amount of time required to find a valid fix.",
            "Award": ""
        },
        {
            "Title": "Synthesis of Machine Code from Semantics",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-64-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DVenkatesh+Srinivasan+and+Thomas+Reps+%22Synthesis+of+Machine+Code+from+Semantics%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737960",
            "PersonsString": "Venkatesh Srinivasan and Thomas Reps",
            "AffiliationsString": "University of Wisconsin-Madison, USA; GrammaTech, USA",
            "Authors": [
                "Venkatesh Srinivasan @ University of Wisconsin-Madison, USA",
                "Thomas Reps @ University of Wisconsin-Madison, USA / GrammaTech, USA"
            ],
            "Affiliations": [
                "University of Wisconsin-Madison, USA",
                "University of Wisconsin-Madison, USA / GrammaTech, USA"
            ],
            "Abstract": "In this paper, we present a technique to synthesize machine-code instructions from a semantic specification, given as a Quantifier-Free Bit-Vector (QFBV) logic formula. Our technique uses an instantiation of the Counter-Example Guided Inductive Synthesis (CEGIS) framework, in combination with search-space pruning heuristics to synthesize instruction-sequences. To counter the exponential cost inherent in enumerative synthesis, our technique uses a divide-and-conquer strategy to break the input QFBV formula into independent sub-formulas, and synthesize instructions for the sub-formulas. Synthesizers created by our technique could be used to create semantics-based binary rewriting tools such as optimizers, partial evaluators, program obfuscators/de-obfuscators, etc. Our experiments for Intel&#039;s IA-32 instruction set show that, in comparison to our baseline algorithm, our search-space pruning heuristics reduce the synthesis time by a factor of 473, and our divide-and-conquer strategy reduces the synthesis time by a further 3 to 5 orders of magnitude.",
            "Award": ""
        },
        {
            "Title": "Synthesis of Ranking Functions using Extremal Counterexamples",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-115-p",
            "URL": "http%3A%2F%2Fscholar.google.com%2Fscholar%3Fq%3DLaure+Gonnord%2C+David+Monniaux%2C+and+Gabriel+Radanne+%22Synthesis+of+Ranking+Functions+using+Extremal+Counterexamples%22",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2737976",
            "PersonsString": "Laure Gonnord, David Monniaux, and Gabriel Radanne",
            "AffiliationsString": "Claude Bernard University Lyon 1, France; LIP, France; University of Grenoble, France; VERIMAG, France; University of Paris Diderot, France",
            "Authors": [
                "Laure Gonnord @ Claude Bernard University Lyon 1, France / LIP, France",
                "David Monniaux @ University of Grenoble, France / VERIMAG, France",
                "Gabriel Radanne @ University of Paris Diderot, France"
            ],
            "Affiliations": [
                "Claude Bernard University Lyon 1, France / LIP, France",
                "University of Grenoble, France / VERIMAG, France",
                "University of Paris Diderot, France"
            ],
            "Abstract": "We present a complete method for synthesizing lexicographic linear ranking functions (and thus proving termination), supported by inductive invariants, in the case where the transition relation of the program includes disjunctions and existentials (large block encoding of control flow). Previous work would either synthesize a ranking function at every basic block head, not just loop headers, which reduces the scope of programs that may be proved to be terminating, or expand large block transitions including tests into (exponentially many) elementary transitions, prior to computing the ranking function, resulting in a very large global constraint system. In contrast, our algorithm incrementally refines a global linear constraint system according to extremal counterexamples: only constraints that exclude spurious solutions are included. Experiments with our tool Termite show marked performance and scalability improvements compared to other systems.",
            "Award": ""
        },
        {
            "Title": "Type-and-Example-Directed Program Synthesis",
            "Type": "Full Paper",
            "Key": "pldi15main-mainpldi15-288-p",
            "URL": "http%3A%2F%2Fwww.cis.upenn.edu%2F%7Eposera%2Fpapers%2Fosera-pldi-2015-preprint.pdf",
            "URLvideo": "",
            "URLinfo": "",
            "DOI": "http%3A%2F%2Fdx.doi.org%2F10.1145%2F2737924.2738007",
            "PersonsString": "Peter-Michael Osera and Steve Zdancewic",
            "AffiliationsString": "University of Pennsylvania, USA",
            "Authors": [
                "Peter-Michael Osera @ University of Pennsylvania, USA",
                "Steve Zdancewic @ University of Pennsylvania, USA"
            ],
            "Affiliations": [
                "University of Pennsylvania, USA",
                "University of Pennsylvania, USA"
            ],
            "Abstract": "This paper presents an algorithm for synthesizing recursive functions that process algebraic datatypes. It is founded on proof-theoretic techniques that exploit both type information and inputâ€“output examples to prune the search space. The algorithm uses refinement trees, a data structure that succinctly represents constraints on the shape of generated code. We evaluate the algorithm by using a prototype implementation to synthesize more than 40 benchmarks and several non-trivial larger examples. Our results demonstrate that the approach meets or outperforms the state-of-the-art for this domain, in terms of synthesis time or attainable size of the generated programs.",
            "Award": ""
        }
    ],
    "Sessions": [
        {
            "Id": "oom0lah2Wu",
            "Title": "Distinguished Papers",
            "ShortTitle": "Distinguished Papers",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-15 09:00 Distinguished Papers",
            "Day": "2015-06-15",
            "Time": "09:00 - 11:00",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Steve Blackburn",
            "Chairs": [
                "Steve Blackburn @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-61-p",
                "pldi15main-mainpldi15-312-p",
                "pldi15main-mainpldi15-74-p"
            ]
        },
        {
            "Id": "miolu9Fohv",
            "Title": "Verification",
            "ShortTitle": "Verification",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-15 14:00 Verification",
            "Day": "2015-06-15",
            "Time": "14:00 - 15:40",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Nate Foster",
            "Chairs": [
                "Nate Foster @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-73-p",
                "pldi15main-mainpldi15-68-p",
                "pldi15main-mainpldi15-279-p",
                "pldi15main-mainpldi15-195-p"
            ]
        },
        {
            "Id": "ooSo1jeinu",
            "Title": "Correctness",
            "ShortTitle": "Correctness",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-15 14:00 Correctness",
            "Day": "2015-06-15",
            "Time": "14:00 - 15:40",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Jens Palsberg",
            "Chairs": [
                "Jens Palsberg @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-172-p",
                "pldi15main-mainpldi15-186-p",
                "pldi15main-mainpldi15-245-p",
                "pldi15main-mainpldi15-181-p"
            ]
        },
        {
            "Id": "aej9elaeDi",
            "Title": "Concurrency I",
            "ShortTitle": "Concurrency I",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-15 16:00 Concurrency I",
            "Day": "2015-06-15",
            "Time": "16:00 - 17:40",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Santosh Nagarakatte",
            "Chairs": [
                "Santosh Nagarakatte @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-205-p",
                "pldi15main-mainpldi15-114-p",
                "pldi15main-mainpldi15-231-p",
                "pldi15main-mainpldi15-199-p"
            ]
        },
        {
            "Id": "eQu4thu7ej",
            "Title": "Optimization",
            "ShortTitle": "Optimization",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-15 16:00 Optimization",
            "Day": "2015-06-15",
            "Time": "16:00 - 17:15",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Michelle Mills Strout",
            "Chairs": [
                "Michelle Mills Strout @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-197-p",
                "pldi15main-mainpldi15-188-p",
                "pldi15main-mainpldi15-37-p"
            ]
        },
        {
            "Id": "Chah9beimo",
            "Title": "TOPLAS",
            "ShortTitle": "TOPLAS",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-15 17:15 TOPLAS",
            "Day": "2015-06-15",
            "Time": "17:15 - 17:40",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Michelle Mills Strout",
            "Chairs": [
                "Michelle Mills Strout @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-toplaspldi15-1-p"
            ]
        },
        {
            "Id": "ahng9Eifa1",
            "Title": "One Minute Madness",
            "ShortTitle": "One Minute Madness",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-16 08:45 One Minute Madness",
            "Day": "2015-06-16",
            "Time": "08:45 - 09:10",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "",
            "Chairs": [
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15",
            "URL": "",
            "Abstract": ""
        },
        {
            "Id": "ahLodoh2ie",
            "Title": "Concurrency II",
            "ShortTitle": "Concurrency II",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-16 09:15 Concurrency II",
            "Day": "2015-06-16",
            "Time": "09:15 - 10:55",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Suresh Jagannathan",
            "Chairs": [
                "Suresh Jagannathan @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-102-p",
                "pldi15main-mainpldi15-51-p",
                "pldi15main-mainpldi15-152-p",
                "pldi15main-mainpldi15-79-p"
            ]
        },
        {
            "Id": "Ahthe0phee",
            "Title": "Synthesis I",
            "ShortTitle": "Synthesis I",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-16 09:15 Synthesis I",
            "Day": "2015-06-16",
            "Time": "09:15 - 10:55",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Kathleen Fisher",
            "Chairs": [
                "Kathleen Fisher @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-142-p",
                "pldi15main-mainpldi15-150-p",
                "pldi15main-mainpldi15-9-p",
                "pldi15main-mainpldi15-117-p"
            ]
        },
        {
            "Id": "Eih5hiepuh",
            "Title": "Analysis",
            "ShortTitle": "Analysis",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-16 14:00 Analysis",
            "Day": "2015-06-16",
            "Time": "14:00 - 15:40",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Yannis Smaragdakis",
            "Chairs": [
                "Yannis Smaragdakis @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-182-p",
                "pldi15main-mainpldi15-58-p",
                "pldi15main-mainpldi15-236-p",
                "pldi15main-mainpldi15-107-p"
            ]
        },
        {
            "Id": "OhyahT0ier",
            "Title": "Semantics I",
            "ShortTitle": "Semantics I",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-16 14:00 Semantics I",
            "Day": "2015-06-16",
            "Time": "14:00 - 15:40",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Hans-J. Boehm",
            "Chairs": [
                "Hans-J. Boehm @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-267-p",
                "pldi15main-mainpldi15-134-p",
                "pldi15main-mainpldi15-194-p",
                "pldi15main-mainpldi15-60-p"
            ]
        },
        {
            "Id": "hie2ohJ2OY",
            "Title": "One Minute Madness",
            "ShortTitle": "One Minute Madness",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-17 08:30 One Minute Madness",
            "Day": "2015-06-17",
            "Time": "08:30 - 09:00",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "",
            "Chairs": [
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15",
            "URL": "",
            "Abstract": ""
        },
        {
            "Id": "coon2wahLi",
            "Title": "Student Research Competition Awards",
            "ShortTitle": "Student Research Competition Awards",
            "Type": "Student Research Competition",
            "ShortType": "Student Research Competition",
            "Key": "2015-06-17 09:00 Student Research Competition Awards",
            "Day": "2015-06-17",
            "Time": "09:00 - 09:15",
            "Location": "",
            "LocationIndex": "1",
            "ChairsString": "",
            "Chairs": [
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15",
            "URL": "",
            "Abstract": ""
        },
        {
            "Id": "phaiC0pio2",
            "Title": "Performance",
            "ShortTitle": "Performance",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-17 09:15 Performance",
            "Day": "2015-06-17",
            "Time": "09:15 - 10:55",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Mary Hall",
            "Chairs": [
                "Mary Hall @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-78-p",
                "pldi15main-mainpldi15-100-p",
                "pldi15main-mainpldi15-113-p",
                "pldi15main-mainpldi15-193-p"
            ]
        },
        {
            "Id": "uuseiGh5Ah",
            "Title": "Semantics II",
            "ShortTitle": "Semantics II",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-17 09:15 Semantics II",
            "Day": "2015-06-17",
            "Time": "09:15 - 10:55",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Robby Findler",
            "Chairs": [
                "Robby Findler @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-143-p",
                "pldi15main-mainpldi15-92-p",
                "pldi15main-mainpldi15-309-p",
                "pldi15main-mainpldi15-103-p"
            ]
        },
        {
            "Id": "mu8aeshieV",
            "Title": "Logic",
            "ShortTitle": "Logic",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-17 14:00 Logic",
            "Day": "2015-06-17",
            "Time": "14:00 - 15:40",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Madhusudan Parthasarathy",
            "Chairs": [
                "Madhusudan Parthasarathy @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-155-p",
                "pldi15main-mainpldi15-41-p",
                "pldi15main-mainpldi15-227-p",
                "pldi15main-mainpldi15-196-p"
            ]
        },
        {
            "Id": "pah5nuseiK",
            "Title": "Parallelism",
            "ShortTitle": "Parallelism",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-17 14:00 Parallelism",
            "Day": "2015-06-17",
            "Time": "14:00 - 15:40",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Sara Baghsorkhi",
            "Chairs": [
                "Sara Baghsorkhi @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-235-p",
                "pldi15main-mainpldi15-252-p",
                "pldi15main-mainpldi15-249-p",
                "pldi15main-mainpldi15-30-p"
            ]
        },
        {
            "Id": "eeD0thudae",
            "Title": "Synthesis II",
            "ShortTitle": "Synthesis II",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-17 16:00 Synthesis II",
            "Day": "2015-06-17",
            "Time": "16:00 - 17:40",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Isil Dillig",
            "Chairs": [
                "Isil Dillig @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-109-p",
                "pldi15main-mainpldi15-64-p",
                "pldi15main-mainpldi15-115-p",
                "pldi15main-mainpldi15-288-p"
            ]
        },
        {
            "Id": "oochoh4Ye8",
            "Title": "Potpourri",
            "ShortTitle": "Potpourri",
            "Type": "Research Papers",
            "ShortType": "Research Papers",
            "Key": "2015-06-17 16:00 Potpourri",
            "Day": "2015-06-17",
            "Time": "16:00 - 17:40",
            "Location": "",
            "LocationIndex": "0",
            "ChairsString": "Tiark Rompf",
            "Chairs": [
                "Tiark Rompf @"
            ],
            "SponsoredBy": "",
            "Workshop": false,
            "Comment": "PLDI15MAIN",
            "URL": "",
            "Abstract": "",
            "Items": [
                "pldi15main-mainpldi15-71-p",
                "pldi15main-mainpldi15-66-p",
                "pldi15main-mainpldi15-248-p",
                "pldi15main-mainpldi15-130-p"
            ]
        }
    ],
    "People": [
        {
            "Name": "Kunal Agrawal",
            "Affiliation": "Washington University at St. Louis, USA",
            "Key": "Kunal Agrawal @ Washington University at St. Louis, USA",
            "Id": "5b8e6c8532",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Alex Aiken",
            "Affiliation": "Stanford University, USA",
            "Key": "Alex Aiken @ Stanford University, USA",
            "Id": "398b80bb9d",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Saman Amarasinghe",
            "Affiliation": "Massachusetts Institute of Technology, USA",
            "Key": "Saman Amarasinghe @ Massachusetts Institute of Technology, USA",
            "Id": "0e243909bf",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Thomas Anderson",
            "Affiliation": "University of Washington, USA",
            "Key": "Thomas Anderson @ University of Washington, USA",
            "Id": "95a261c1c2",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Jason Ansel",
            "Affiliation": "Massachusetts Institute of Technology, USA",
            "Key": "Jason Ansel @ Massachusetts Institute of Technology, USA",
            "Id": "45024634df",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Andrew W. Appel",
            "Affiliation": "Princeton University, USA",
            "Key": "Andrew W. Appel @ Princeton University, USA",
            "Id": "856cb64163",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Sara Baghsorkhi",
            "Affiliation": "",
            "Key": "Sara Baghsorkhi @",
            "Id": "93f73af905",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Shruthi Balakrishna",
            "Affiliation": "Purdue University, USA",
            "Key": "Shruthi Balakrishna @ Purdue University, USA",
            "Id": "032f2d560f",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Anindya Banerjee",
            "Affiliation": "IMDEA Software Institute, Spain",
            "Key": "Anindya Banerjee @ IMDEA Software Institute, Spain",
            "Id": "c5603f684f",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Daniel W. Barowy",
            "Affiliation": "University of Massachusetts at Amherst, USA",
            "Key": "Daniel W. Barowy @ University of Massachusetts at Amherst, USA",
            "Id": "4c0f7c9aa2",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Michael Bauer",
            "Affiliation": "NVIDIA Research, USA",
            "Key": "Michael Bauer @ NVIDIA Research, USA",
            "Id": "c67eab1aa2",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Steve Blackburn",
            "Affiliation": "",
            "Key": "Steve Blackburn @",
            "Id": "18b646d163",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Hans-J. Boehm",
            "Affiliation": "",
            "Key": "Hans-J. Boehm @",
            "Id": "ebb1feb81f",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Jeffrey Bosboom",
            "Affiliation": "Massachusetts Institute of Technology, USA",
            "Key": "Jeffrey Bosboom @ Massachusetts Institute of Technology, USA",
            "Id": "240b9944d6",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "William J. Bowman",
            "Affiliation": "Northeastern University, USA / Cisco Systems, USA",
            "Key": "William J. Bowman @ Northeastern University, USA / Cisco Systems, USA",
            "Id": "94397e45b6",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Bernd Burgstaller",
            "Affiliation": "Yonsei University, South Korea",
            "Key": "Bernd Burgstaller @ Yonsei University, South Korea",
            "Id": "cb508624c5",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Quentin Carbonneaux",
            "Affiliation": "Yale University, USA",
            "Key": "Quentin Carbonneaux @ Yale University, USA",
            "Id": "1ce5cbdd7a",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Pavol ÄŒernÃ½",
            "Affiliation": "University of Colorado at Boulder, USA",
            "Key": "Pavol ÄŒernÃ½ @ University of Colorado at Boulder, USA",
            "Id": "c62923094a",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Swarat Chaudhuri",
            "Affiliation": "Rice University, USA",
            "Key": "Swarat Chaudhuri @ Rice University, USA",
            "Id": "1df83f016e",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Wei-Ngan Chin",
            "Affiliation": "National University of Singapore, Singapore",
            "Key": "Wei-Ngan Chin @ National University of Singapore, Singapore",
            "Id": "7490eee05b",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Olaf Chitil",
            "Affiliation": "University of Kent, UK",
            "Key": "Olaf Chitil @ University of Kent, UK",
            "Id": "3f272542da",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Nathan Chong",
            "Affiliation": "University College London, UK",
            "Key": "Nathan Chong @ University College London, UK",
            "Id": "969d8b2c77",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Stephen Chong",
            "Affiliation": "Harvard University, USA",
            "Key": "Stephen Chong @ Harvard University, USA",
            "Id": "b33c146b9f",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Duc-Hiep Chu",
            "Affiliation": "National University of Singapore, Singapore",
            "Key": "Duc-Hiep Chu @ National University of Singapore, Singapore",
            "Id": "6068644f28",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Karl Crary",
            "Affiliation": "Carnegie Mellon University, USA",
            "Key": "Karl Crary @ Carnegie Mellon University, USA",
            "Id": "e5196797f5",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Pantazis Deligiannis",
            "Affiliation": "Imperial College London, UK",
            "Key": "Pantazis Deligiannis @ Imperial College London, UK",
            "Id": "6e4ab4376b",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Isil Dillig",
            "Affiliation": "",
            "Key": "Isil Dillig @",
            "Id": "48a637852d",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Isil Dillig",
            "Affiliation": "University of Texas at Austin, USA",
            "Key": "Isil Dillig @ University of Texas at Austin, USA",
            "Id": "717bfabc09",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Wei Ding",
            "Affiliation": "Pennsylvania State University, USA",
            "Key": "Wei Ding @ Pennsylvania State University, USA",
            "Id": "2cab49c105",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Yufei Ding",
            "Affiliation": "North Carolina State University, USA",
            "Key": "Yufei Ding @ North Carolina State University, USA",
            "Id": "ad9385d812",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Alastair F. Donaldson",
            "Affiliation": "Imperial College London, UK",
            "Key": "Alastair F. Donaldson @ Imperial College London, UK",
            "Id": "1818776a31",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Derek Dreyer",
            "Affiliation": "MPI-SWS, Germany",
            "Key": "Derek Dreyer @ MPI-SWS, Germany",
            "Id": "dd29c66ea7",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "StÃ©phane Ducasse",
            "Affiliation": "INRIA, France",
            "Key": "StÃ©phane Ducasse @ INRIA, France",
            "Id": "317f529c33",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "R. Kent Dybvig",
            "Affiliation": "Cisco Systems, USA",
            "Key": "R. Kent Dybvig @ Cisco Systems, USA",
            "Id": "f7f92a29cc",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Chucky Ellison",
            "Affiliation": "University of Illinois at Urbana-Champaign, USA",
            "Key": "Chucky Ellison @ University of Illinois at Urbana-Champaign, USA",
            "Id": "7bd1d2c172",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Murali Krishna Emani",
            "Affiliation": "University of Edinburgh, UK",
            "Key": "Murali Krishna Emani @ University of Edinburgh, UK",
            "Id": "4f1f875a3f",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Michael Emmi",
            "Affiliation": "IMDEA Software Institute, Spain",
            "Key": "Michael Emmi @ IMDEA Software Institute, Spain",
            "Id": "4a3103f511",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Constantin Enea",
            "Affiliation": "University of Paris Diderot, France",
            "Key": "Constantin Enea @ University of Paris Diderot, France",
            "Id": "671ffeeac2",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Kai Engelhardt",
            "Affiliation": "UNSW, Australia / NICTA, Australia",
            "Key": "Kai Engelhardt @ UNSW, Australia / NICTA, Australia",
            "Id": "8eda5724a7",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Michael D. Ernst",
            "Affiliation": "University of Washington, USA",
            "Key": "Michael D. Ernst @ University of Washington, USA",
            "Id": "59f317f35f",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Maarten Faddegon",
            "Affiliation": "University of Kent, UK",
            "Key": "Maarten Faddegon @ University of Kent, UK",
            "Id": "28c0746beb",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "John K. Feser",
            "Affiliation": "Rice University, USA",
            "Key": "John K. Feser @ Rice University, USA",
            "Id": "bbf9302e01",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Robby Findler",
            "Affiliation": "",
            "Key": "Robby Findler @",
            "Id": "ae9a2cd528",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Kathleen Fisher",
            "Affiliation": "",
            "Key": "Kathleen Fisher @",
            "Id": "307a561bc6",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Nate Foster",
            "Affiliation": "",
            "Key": "Nate Foster @",
            "Id": "2b0a995304",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Nate Foster",
            "Affiliation": "Cornell University, USA",
            "Key": "Nate Foster @ Cornell University, USA",
            "Id": "b053980e5b",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Peter Gammie",
            "Affiliation": "NICTA, Australia",
            "Key": "Peter Gammie @ NICTA, Australia",
            "Id": "0c77fcc642",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Dmitri Garbuzov",
            "Affiliation": "University of Pennsylvania, USA",
            "Key": "Dmitri Garbuzov @ University of Pennsylvania, USA",
            "Id": "5508e50c88",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Guy Golan-Gueta",
            "Affiliation": "Tel Aviv University, Israel",
            "Key": "Guy Golan-Gueta @ Tel Aviv University, Israel",
            "Id": "8877d40f16",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Laure Gonnord",
            "Affiliation": "Claude Bernard University Lyon 1, France / LIP, France",
            "Key": "Laure Gonnord @ Claude Bernard University Lyon 1, France / LIP, France",
            "Id": "5bbc72f728",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Sumit Gulwani",
            "Affiliation": "Microsoft Research, USA",
            "Key": "Sumit Gulwani @ Microsoft Research, USA",
            "Id": "4d1b090561",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Mary Hall",
            "Affiliation": "",
            "Key": "Mary Hall @",
            "Id": "81c9af8aee",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Mary Hall",
            "Affiliation": "University of Utah, USA",
            "Key": "Mary Hall @ University of Utah, USA",
            "Id": "143d16def0",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Jad Hamza",
            "Affiliation": "University of Paris Diderot, France",
            "Key": "Jad Hamza @ University of Paris Diderot, France",
            "Id": "9e177f39f4",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Ted Hart",
            "Affiliation": "Microsoft Research, USA",
            "Key": "Ted Hart @ Microsoft Research, USA",
            "Id": "9ecc3d6ec3",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Chris Hathhorn",
            "Affiliation": "University of Missouri, USA",
            "Key": "Chris Hathhorn @ University of Missouri, USA",
            "Id": "8413005a15",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Jan Hoffmann",
            "Affiliation": "Yale University, USA",
            "Key": "Jan Hoffmann @ Yale University, USA",
            "Id": "58a0784a43",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Hossein Hojjat",
            "Affiliation": "Cornell University, USA",
            "Key": "Hossein Hojjat @ Cornell University, USA",
            "Id": "7acd5afc5b",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Antony L. Hosking",
            "Affiliation": "Purdue University, USA / NICTA, Australia",
            "Key": "Antony L. Hosking @ Purdue University, USA / NICTA, Australia",
            "Id": "d85dce8aaf",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Jeff Huang",
            "Affiliation": "Texas A&M University, USA",
            "Key": "Jeff Huang @ Texas A&M University, USA",
            "Id": "d8fc3f65c8",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Chung-Kil Hur",
            "Affiliation": "Seoul National University, South Korea",
            "Key": "Chung-Kil Hur @ Seoul National University, South Korea",
            "Id": "6b95d00674",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Chinawat Isradisaikul",
            "Affiliation": "Cornell University, USA",
            "Key": "Chinawat Isradisaikul @ Cornell University, USA",
            "Id": "88dff9b0ff",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Joxan Jaffar",
            "Affiliation": "National University of Singapore, Singapore",
            "Key": "Joxan Jaffar @ National University of Singapore, Singapore",
            "Id": "c15ba1e308",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Suresh Jagannathan",
            "Affiliation": "",
            "Key": "Suresh Jagannathan @",
            "Id": "0c5c6036d4",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Suresh Jagannathan",
            "Affiliation": "Purdue University, USA",
            "Key": "Suresh Jagannathan @ Purdue University, USA",
            "Id": "3ffafe2c26",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Youngjoon Jo",
            "Affiliation": "Purdue University, USA",
            "Key": "Youngjoon Jo @ Purdue University, USA",
            "Id": "b7d8f5e205",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Andrew Johnson",
            "Affiliation": "Harvard University, USA / MIT Lincoln Laboratory, USA",
            "Key": "Andrew Johnson @ Harvard University, USA / MIT Lincoln Laboratory, USA",
            "Id": "982055b78f",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Gowtham Kaki",
            "Affiliation": "Purdue University, USA",
            "Key": "Gowtham Kaki @ Purdue University, USA",
            "Id": "df14ba1efc",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Shoaib Kamil",
            "Affiliation": "Massachusetts Institute of Technology, USA",
            "Key": "Shoaib Kamil @ Massachusetts Institute of Technology, USA",
            "Id": "4112f3cc5d",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Mahmut Kandemir",
            "Affiliation": "Pennsylvania State University, USA",
            "Key": "Mahmut Kandemir @ Pennsylvania State University, USA",
            "Id": "b39d4034dc",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Jeehoon Kang",
            "Affiliation": "Seoul National University, South Korea",
            "Key": "Jeehoon Kang @ Seoul National University, South Korea",
            "Id": "371a3b7969",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Jeroen Ketema",
            "Affiliation": "Imperial College London, UK",
            "Key": "Jeroen Ketema @ Imperial College London, UK",
            "Id": "0bf6d29489",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Yousun Ko",
            "Affiliation": "Yonsei University, South Korea",
            "Key": "Yousun Ko @ Yonsei University, South Korea",
            "Id": "29b0eecda5",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Eric Koskinen",
            "Affiliation": "IBM Research, USA",
            "Key": "Eric Koskinen @ IBM Research, USA",
            "Id": "b30c855ddd",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Sriram Krishnamoorthy",
            "Affiliation": "Pacific Northwest National Laboratory, USA",
            "Key": "Sriram Krishnamoorthy @ Pacific Northwest National Laboratory, USA",
            "Id": "06cb25e929",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Milind Kulkarni",
            "Affiliation": "Purdue University, USA",
            "Key": "Milind Kulkarni @ Purdue University, USA",
            "Id": "4a3f039da1",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Emre Kultursay",
            "Affiliation": "Pennsylvania State University, USA",
            "Key": "Emre Kultursay @ Pennsylvania State University, USA",
            "Id": "6847505680",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Markus Kusano",
            "Affiliation": "Virginia Tech, USA",
            "Key": "Markus Kusano @ Virginia Tech, USA",
            "Id": "91b8da8249",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Eric Lahtinen",
            "Affiliation": "Massachusetts Institute of Technology, USA",
            "Key": "Eric Lahtinen @ Massachusetts Institute of Technology, USA",
            "Id": "3bf2bbbc25",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Akash Lal",
            "Affiliation": "Microsoft Research, India",
            "Key": "Akash Lal @ Microsoft Research, India",
            "Id": "e6f780e4ed",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Andrei Lascu",
            "Affiliation": "Imperial College London, UK",
            "Key": "Andrei Lascu @ Imperial College London, UK",
            "Id": "bcd8948eed",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Ton Chanh Le",
            "Affiliation": "National University of Singapore, Singapore",
            "Key": "Ton Chanh Le @ National University of Singapore, Singapore",
            "Id": "cd84f5c3ba",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Sorin Lerner",
            "Affiliation": "University of California at San Diego, USA",
            "Key": "Sorin Lerner @ University of California at San Diego, USA",
            "Id": "f67a2577c1",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Alan Leung",
            "Affiliation": "University of California at San Diego, USA",
            "Key": "Alan Leung @ University of California at San Diego, USA",
            "Id": "7b8d7cbe02",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Christopher Lidbury",
            "Affiliation": "Imperial College London, UK",
            "Key": "Christopher Lidbury @ Imperial College London, UK",
            "Id": "23f48cae7e",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Calvin Lin",
            "Affiliation": "University of Texas at Austin, USA",
            "Key": "Calvin Lin @ University of Texas at Austin, USA",
            "Id": "ee29779306",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Barbara Liskov",
            "Affiliation": "Massachusetts Institute of Technology, USA",
            "Key": "Barbara Liskov @ Massachusetts Institute of Technology, USA",
            "Id": "83f0675da2",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Jianqiao Liu",
            "Affiliation": "Purdue University, USA",
            "Key": "Jianqiao Liu @ Purdue University, USA",
            "Id": "531888ad79",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Peng Liu",
            "Affiliation": "Purdue University, USA",
            "Key": "Peng Liu @ Purdue University, USA",
            "Id": "43f0d6d1ed",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Fan Long",
            "Affiliation": "Massachusetts Institute of Technology, USA",
            "Key": "Fan Long @ Massachusetts Institute of Technology, USA",
            "Id": "f568e57b75",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Stephen Longfield",
            "Affiliation": "Cornell University, USA",
            "Key": "Stephen Longfield @ Cornell University, USA",
            "Id": "6d693da071",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Nuno P. Lopes",
            "Affiliation": "Microsoft Research, UK",
            "Key": "Nuno P. Lopes @ Microsoft Research, UK",
            "Id": "8e56b4f3c9",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Matthew C. Loring",
            "Affiliation": "Cornell University, USA",
            "Key": "Matthew C. Loring @ Cornell University, USA",
            "Id": "8254abd07a",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Brandon Lucia",
            "Affiliation": "Carnegie Mellon University, USA",
            "Key": "Brandon Lucia @ Carnegie Mellon University, USA",
            "Id": "d2d584193f",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Nuno Machado",
            "Affiliation": "Universidade de Lisboa, Portugal",
            "Key": "Nuno Machado @ Universidade de Lisboa, Portugal",
            "Id": "85ecd1d254",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Roman Manevich",
            "Affiliation": "Ben-Gurion University of the Negev, Israel",
            "Key": "Roman Manevich @ Ben-Gurion University of the Negev, Israel",
            "Id": "58cc630667",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Rajit Manohar",
            "Affiliation": "Cornell University, USA",
            "Key": "Rajit Manohar @ Cornell University, USA",
            "Id": "9e231d79df",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "William Mansky",
            "Affiliation": "University of Pennsylvania, USA",
            "Key": "William Mansky @ University of Pennsylvania, USA",
            "Id": "fcd015f151",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Stefan Marr",
            "Affiliation": "INRIA, France",
            "Key": "Stefan Marr @ INRIA, France",
            "Id": "f4e8764019",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Jedidiah McClurg",
            "Affiliation": "University of Colorado at Boulder, USA",
            "Key": "Jedidiah McClurg @ University of Colorado at Boulder, USA",
            "Id": "520c32c9cd",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Sanyam Mehta",
            "Affiliation": "University of Minnesota, USA",
            "Key": "Sanyam Mehta @ University of Minnesota, USA",
            "Id": "961d6aaf36",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Charith Mendis",
            "Affiliation": "Massachusetts Institute of Technology, USA",
            "Key": "Charith Mendis @ Massachusetts Institute of Technology, USA",
            "Id": "011d950a83",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "David Menendez",
            "Affiliation": "Rutgers University, USA",
            "Key": "David Menendez @ Rutgers University, USA",
            "Id": "af8a19305a",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Swaha Miller",
            "Affiliation": "Cisco Systems, USA",
            "Key": "Swaha Miller @ Cisco Systems, USA",
            "Id": "32c87cca6a",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "David Monniaux",
            "Affiliation": "University of Grenoble, France / VERIMAG, France",
            "Key": "David Monniaux @ University of Grenoble, France / VERIMAG, France",
            "Id": "afc58bf5e9",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Scott Moore",
            "Affiliation": "Harvard University, USA",
            "Key": "Scott Moore @ Harvard University, USA",
            "Id": "0d88c71df9",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Andrew C. Myers",
            "Affiliation": "Cornell University, USA",
            "Key": "Andrew C. Myers @ Cornell University, USA",
            "Id": "f1fabff8ae",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Santosh Nagarakatte",
            "Affiliation": "",
            "Key": "Santosh Nagarakatte @",
            "Id": "d1a2cc39e9",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Santosh Nagarakatte",
            "Affiliation": "Rutgers University, USA",
            "Key": "Santosh Nagarakatte @ Rutgers University, USA",
            "Id": "f4d7723247",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Aleksandar Nanevski",
            "Affiliation": "IMDEA Software Institute, Spain",
            "Key": "Aleksandar Nanevski @ IMDEA Software Institute, Spain",
            "Id": "dbd6f00cfa",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "PhÃºc C. Nguyá»…n",
            "Affiliation": "University of Maryland, USA",
            "Key": "PhÃºc C. Nguyá»…n @ University of Maryland, USA",
            "Id": "368ed4b907",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Brittany Nkounkou",
            "Affiliation": "Cornell University, USA",
            "Key": "Brittany Nkounkou @ Cornell University, USA",
            "Id": "07c98ba5f8",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Aditya V. Nori",
            "Affiliation": "Microsoft Research, India",
            "Key": "Aditya V. Nori @ Microsoft Research, India",
            "Id": "64c8d6e309",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Michael O'Boyle",
            "Affiliation": "University of Edinburgh, UK",
            "Key": "Michael O'Boyle @ University of Edinburgh, UK",
            "Id": "2c27976d1e",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Oswaldo Olivo",
            "Affiliation": "University of Texas at Austin, USA",
            "Key": "Oswaldo Olivo @ University of Texas at Austin, USA",
            "Id": "53eaaf29e3",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Una-May Oâ€™Reilly",
            "Affiliation": "Massachusetts Institute of Technology, USA",
            "Key": "Una-May Oâ€™Reilly @ Massachusetts Institute of Technology, USA",
            "Id": "5548347485",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Peter-Michael Osera",
            "Affiliation": "University of Pennsylvania, USA",
            "Key": "Peter-Michael Osera @ University of Pennsylvania, USA",
            "Id": "0746fcb8b9",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Sherjil Ozair",
            "Affiliation": "IIT Delhi, India",
            "Key": "Sherjil Ozair @ IIT Delhi, India",
            "Id": "d0ff65a900",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Jens Palsberg",
            "Affiliation": "",
            "Key": "Jens Palsberg @",
            "Id": "55414d930a",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Pavel Panchekha",
            "Affiliation": "University of Washington, USA",
            "Key": "Pavel Panchekha @ University of Washington, USA",
            "Id": "ba8f8a87d4",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Sylvain Paris",
            "Affiliation": "Adobe, USA",
            "Key": "Sylvain Paris @ Adobe, USA",
            "Id": "f3c481c045",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Daejun Park",
            "Affiliation": "University of Illinois at Urbana-Champaign, USA",
            "Key": "Daejun Park @ University of Illinois at Urbana-Champaign, USA",
            "Id": "ecbbbf496d",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Matthew Parkinson",
            "Affiliation": "Microsoft Research, UK",
            "Key": "Matthew Parkinson @ Microsoft Research, UK",
            "Id": "35eb026b8d",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Madhusudan Parthasarathy",
            "Affiliation": "",
            "Key": "Madhusudan Parthasarathy @",
            "Id": "40978397b1",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Simon Peyton-Jones",
            "Affiliation": "Microsoft Research, UK",
            "Key": "Simon Peyton-Jones @ Microsoft Research, UK",
            "Id": "e479c2fa0c",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Keshav Pingali",
            "Affiliation": "University of Texas at Austin, USA",
            "Key": "Keshav Pingali @ University of Texas at Austin, USA",
            "Id": "1b94c1dbd0",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Dimitrios Prountzos",
            "Affiliation": "University of Texas at Austin, USA",
            "Key": "Dimitrios Prountzos @ University of Texas at Austin, USA",
            "Id": "98d505e9fe",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Markus PÃ¼schel",
            "Affiliation": "ETH Zurich, Switzerland",
            "Key": "Markus PÃ¼schel @ ETH Zurich, Switzerland",
            "Id": "0421e3639d",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Shaz Qadeer",
            "Affiliation": "Microsoft Research, USA",
            "Key": "Shaz Qadeer @ Microsoft Research, USA",
            "Id": "75d00e4de0",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Shengchao Qin",
            "Affiliation": "Teesside University, UK / Shenzhen University, China",
            "Key": "Shengchao Qin @ Teesside University, UK / Shenzhen University, China",
            "Id": "12362f3425",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Gabriel Radanne",
            "Affiliation": "University of Paris Diderot, France",
            "Key": "Gabriel Radanne @ University of Paris Diderot, France",
            "Id": "5a490b1070",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Jonathan Ragan-Kelley",
            "Affiliation": "Stanford University, USA",
            "Key": "Jonathan Ragan-Kelley @ Stanford University, USA",
            "Id": "af3f9ddc38",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Sriram K. Rajamani",
            "Affiliation": "Microsoft Research, India",
            "Key": "Sriram K. Rajamani @ Microsoft Research, India",
            "Id": "dbc6f93559",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "G. Ramalingam",
            "Affiliation": "Microsoft Research, India",
            "Key": "G. Ramalingam @ Microsoft Research, India",
            "Id": "cdf0f403a5",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Murali Krishna Ramanathan",
            "Affiliation": "Indian Institute of Science, India",
            "Key": "Murali Krishna Ramanathan @ Indian Institute of Science, India",
            "Id": "5584f97f17",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Benjamin Ransford",
            "Affiliation": "University of Washington, USA",
            "Key": "Benjamin Ransford @ University of Washington, USA",
            "Id": "bc1bb37be1",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "John Regehr",
            "Affiliation": "University of Utah, USA",
            "Key": "John Regehr @ University of Utah, USA",
            "Id": "1e8ad95818",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Bin Ren",
            "Affiliation": "Pacific Northwest National Laboratory, USA",
            "Key": "Bin Ren @ Pacific Northwest National Laboratory, USA",
            "Id": "30a5e41dbc",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Thomas Reps",
            "Affiliation": "University of Wisconsin-Madison, USA / GrammaTech, USA",
            "Key": "Thomas Reps @ University of Wisconsin-Madison, USA / GrammaTech, USA",
            "Id": "f21dec6b43",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Martin Rinard",
            "Affiliation": "Massachusetts Institute of Technology, USA",
            "Key": "Martin Rinard @ Massachusetts Institute of Technology, USA",
            "Id": "19f6157c90",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "LuÃ­s Rodrigues",
            "Affiliation": "Universidade de Lisboa, Portugal",
            "Key": "LuÃ­s Rodrigues @ Universidade de Lisboa, Portugal",
            "Id": "e55b71d92a",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Tiark Rompf",
            "Affiliation": "",
            "Key": "Tiark Rompf @",
            "Id": "1248e53bfe",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Grigore RoÅŸu",
            "Affiliation": "University of Illinois at Urbana-Champaign, USA",
            "Key": "Grigore RoÅŸu @ University of Illinois at Urbana-Champaign, USA",
            "Id": "98cad17f12",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Mooly Sagiv",
            "Affiliation": "Tel Aviv University, Israel",
            "Key": "Mooly Sagiv @ Tel Aviv University, Israel",
            "Id": "32623c4016",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Guido Salvaneschi",
            "Affiliation": "TU Darmstadt, Germany",
            "Key": "Guido Salvaneschi @ TU Darmstadt, Germany",
            "Id": "b2391d3783",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Malavika Samak",
            "Affiliation": "Indian Institute of Science, India",
            "Key": "Malavika Samak @ Indian Institute of Science, India",
            "Id": "075cee41d1",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Alex Sanchez-Stern",
            "Affiliation": "University of Washington, USA",
            "Key": "Alex Sanchez-Stern @ University of Washington, USA",
            "Id": "36989c07b2",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "John Sarracino",
            "Affiliation": "University of California at San Diego, USA",
            "Key": "John Sarracino @ University of California at San Diego, USA",
            "Id": "95136ae343",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Bernhard Scholz",
            "Affiliation": "University of Sydney, Australia",
            "Key": "Bernhard Scholz @ University of Sydney, Australia",
            "Id": "086dbfc7cc",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Chris Seaton",
            "Affiliation": "Oracle Labs, USA / University of Manchester, UK",
            "Key": "Chris Seaton @ Oracle Labs, USA / University of Manchester, UK",
            "Id": "d2ddcc270a",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Ilya Sergey",
            "Affiliation": "IMDEA Software Institute, Spain",
            "Key": "Ilya Sergey @ IMDEA Software Institute, Spain",
            "Id": "a2ad27b7b6",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Zhong Shao",
            "Affiliation": "Yale University, USA",
            "Key": "Zhong Shao @ Yale University, USA",
            "Id": "f4e0a75e2f",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Rahul Sharma",
            "Affiliation": "Stanford University, USA",
            "Key": "Rahul Sharma @ Stanford University, USA",
            "Id": "f93167c22a",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Xipeng Shen",
            "Affiliation": "North Carolina State University, USA",
            "Key": "Xipeng Shen @ North Carolina State University, USA",
            "Id": "3ccff2b058",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Stelios Sidiroglou-Douskos",
            "Affiliation": "Massachusetts Institute of Technology, USA",
            "Key": "Stelios Sidiroglou-Douskos @ Massachusetts Institute of Technology, USA",
            "Id": "c652a007a5",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Jeremy Siek",
            "Affiliation": "Indiana University, USA",
            "Key": "Jeremy Siek @ Indiana University, USA",
            "Id": "c3c8ff1ece",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Gagandeep Singh",
            "Affiliation": "ETH Zurich, Switzerland",
            "Key": "Gagandeep Singh @ ETH Zurich, Switzerland",
            "Id": "7324b840ca",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "KC Sivaramakrishnan",
            "Affiliation": "University of Cambridge, UK",
            "Key": "KC Sivaramakrishnan @ University of Cambridge, UK",
            "Id": "28d005d298",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Yannis Smaragdakis",
            "Affiliation": "",
            "Key": "Yannis Smaragdakis @",
            "Id": "63f83fb17c",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Venkatesh Srinivasan",
            "Affiliation": "University of Wisconsin-Madison, USA",
            "Key": "Venkatesh Srinivasan @ University of Wisconsin-Madison, USA",
            "Id": "a3959c72e0",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Vincent St-Amour",
            "Affiliation": "Northeastern University, USA",
            "Key": "Vincent St-Amour @ Northeastern University, USA",
            "Id": "46f126c55b",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Andrei StefÄƒnescu",
            "Affiliation": "University of Illinois at Urbana-Champaign, USA",
            "Key": "Andrei StefÄƒnescu @ University of Illinois at Urbana-Champaign, USA",
            "Id": "5ca3920318",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Michelle Strout",
            "Affiliation": "Colorado State University, USA",
            "Key": "Michelle Strout @ Colorado State University, USA",
            "Id": "275bae03ff",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Michelle Mills Strout",
            "Affiliation": "",
            "Key": "Michelle Mills Strout @",
            "Id": "27f0873eea",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Michael J. Sullivan",
            "Affiliation": "Carnegie Mellon University, USA",
            "Key": "Michael J. Sullivan @ Carnegie Mellon University, USA",
            "Id": "c03ef00899",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Xulong Tang",
            "Affiliation": "Pennsylvania State University, USA",
            "Key": "Xulong Tang @ Pennsylvania State University, USA",
            "Id": "e792c49ec5",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Joseph Tassarotti",
            "Affiliation": "Carnegie Mellon University, USA",
            "Key": "Joseph Tassarotti @ Carnegie Mellon University, USA",
            "Id": "58ee6ff08c",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Ross Tate",
            "Affiliation": "Cornell University, USA",
            "Key": "Ross Tate @ Cornell University, USA",
            "Id": "b6b4a4f37b",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Zachary Tatlock",
            "Affiliation": "University of Washington, USA",
            "Key": "Zachary Tatlock @ University of Washington, USA",
            "Id": "34eeb1910f",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Peter Thiemann",
            "Affiliation": "University of Freiburg, Germany",
            "Key": "Peter Thiemann @ University of Freiburg, Germany",
            "Id": "513f80c923",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Paul Thomson",
            "Affiliation": "Imperial College London, UK",
            "Key": "Paul Thomson @ Imperial College London, UK",
            "Id": "45665a8359",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Minh-Thai Trinh",
            "Affiliation": "National University of Singapore, Singapore",
            "Key": "Minh-Thai Trinh @ National University of Singapore, Singapore",
            "Id": "1cf19edbc3",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Omer Tripp",
            "Affiliation": "IBM Research, USA",
            "Key": "Omer Tripp @ IBM Research, USA",
            "Id": "0a12a0119e",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Viktor Vafeiadis",
            "Affiliation": "MPI-SWS, Germany",
            "Key": "Viktor Vafeiadis @ MPI-SWS, Germany",
            "Id": "1157c3a7c1",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "David Van Horn",
            "Affiliation": "University of Maryland, USA",
            "Key": "David Van Horn @ University of Maryland, USA",
            "Id": "9ca3888be4",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Martin Vechev",
            "Affiliation": "ETH Zurich, Switzerland",
            "Key": "Martin Vechev @ ETH Zurich, Switzerland",
            "Id": "34f4227aeb",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Kalyan Veeramachaneni",
            "Affiliation": "Massachusetts Institute of Technology, USA",
            "Key": "Kalyan Veeramachaneni @ Massachusetts Institute of Technology, USA",
            "Id": "4e20fccbc6",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Anand Venkat",
            "Affiliation": "University of Utah, USA",
            "Key": "Anand Venkat @ University of Utah, USA",
            "Id": "0c951c4b67",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Deepak Vijaykeerthy",
            "Affiliation": "Microsoft Research, India",
            "Key": "Deepak Vijaykeerthy @ Microsoft Research, India",
            "Id": "d082aa2dc8",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Dimitrios Vytiniotis",
            "Affiliation": "Microsoft Research, UK",
            "Key": "Dimitrios Vytiniotis @ Microsoft Research, UK",
            "Id": "1e86e5795b",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Philip Wadler",
            "Affiliation": "University of Edinburgh, UK",
            "Key": "Philip Wadler @ University of Edinburgh, UK",
            "Id": "bca0f2be5c",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Chao Wang",
            "Affiliation": "Virginia Tech, USA",
            "Key": "Chao Wang @ Virginia Tech, USA",
            "Id": "13bfb1daa3",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Xi Wang",
            "Affiliation": "University of Washington, USA",
            "Key": "Xi Wang @ University of Washington, USA",
            "Id": "7d6563e65e",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Lucas Waye",
            "Affiliation": "Harvard University, USA",
            "Key": "Lucas Waye @ Harvard University, USA",
            "Id": "4680d7d471",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Yusheng Weijiang",
            "Affiliation": "Purdue University, USA",
            "Key": "Yusheng Weijiang @ Purdue University, USA",
            "Id": "0a21ca4bec",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "James R. Wilcox",
            "Affiliation": "University of Washington, USA",
            "Key": "James R. Wilcox @ University of Washington, USA",
            "Id": "111b83cfd3",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Doug Woos",
            "Affiliation": "University of Washington, USA",
            "Key": "Doug Woos @ University of Washington, USA",
            "Id": "47e2c954e9",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Kevin Wu",
            "Affiliation": "Massachusetts Institute of Technology, USA",
            "Key": "Kevin Wu @ Massachusetts Institute of Technology, USA",
            "Id": "1a10004334",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Pen-Chung Yew",
            "Affiliation": "University of Minnesota, USA",
            "Key": "Pen-Chung Yew @ University of Minnesota, USA",
            "Id": "4f441c0104",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Steve Zdancewic",
            "Affiliation": "University of Pennsylvania, USA",
            "Key": "Steve Zdancewic @ University of Pennsylvania, USA",
            "Id": "cbd9825a8c",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Danfeng Zhang",
            "Affiliation": "Cornell University, USA",
            "Key": "Danfeng Zhang @ Cornell University, USA",
            "Id": "036ae9221c",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Naling Zhang",
            "Affiliation": "Virginia Tech, USA",
            "Key": "Naling Zhang @ Virginia Tech, USA",
            "Id": "cb292e8182",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Xiangyu Zhang",
            "Affiliation": "Purdue University, USA",
            "Key": "Xiangyu Zhang @ Purdue University, USA",
            "Id": "8e3ec59fd4",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Yizhou Zhang",
            "Affiliation": "Cornell University, USA",
            "Key": "Yizhou Zhang @ Cornell University, USA",
            "Id": "864ee3f1ea",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Yuanrui Zhang",
            "Affiliation": "Intel, USA",
            "Key": "Yuanrui Zhang @ Intel, USA",
            "Id": "7bbebfbc50",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Qin Zhao",
            "Affiliation": "Google, USA",
            "Key": "Qin Zhao @ Google, USA",
            "Id": "a7f18309bd",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Yunhui Zheng",
            "Affiliation": "IBM Research, USA",
            "Key": "Yunhui Zheng @ IBM Research, USA",
            "Id": "e681831c6e",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Ofri Ziv",
            "Affiliation": "Tel Aviv University, Israel",
            "Key": "Ofri Ziv @ Tel Aviv University, Israel",
            "Id": "902fad2bda",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        },
        {
            "Name": "Benjamin Zorn",
            "Affiliation": "Microsoft Research, USA",
            "Key": "Benjamin Zorn @ Microsoft Research, USA",
            "Id": "7cbe48dd34",
            "Bio": "",
            "URL": "",
            "URLphoto": "",
            "URLmsa": "",
            "URLgs": ""
        }
    ]
}
 


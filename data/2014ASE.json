{
	"DataRevision": 1,
	"Event": "ASE2014",
	"Name": "29th IEEE/ACM International Conference on Automated Software Engineering (ASE 2014)",
	"Description": "",
	"Location": "Vasteras, Sweden",
	"Sponsors": "IEEE, ACM",
	"URL": "http://ase2014.org/",
	"MultiTrack": false,
	"Organization" : 
	{
    	"General Chairs": ["Ivica Crnkovic"],
        "PC Chairs": ["Marsha Chechik", "Paul Grunbacher"],
        "Tool Demonstration Chairs": ["Arie Gurfinkel", "Gabriele Taentzer"],
        "Tutorial Chairs": ["Elisabetta Di Nitto", "Michel Chaudron"],
        "Workshop Chairs": ["Lars Grunske", "Mats Heimdahl"],
        "Publicity Chairs": ["Yuanfang Cai", "Mehrdad Sabetzadeh", "Henry Muccini"],
        "Proceedings Chairs": ["Hongyu Pei-Breivold"],
        "Web Chairs": ["Huseyin Aysan", "Josip Maras"],
        "Local Chairs": ["Malin Rosqvist"],
        "Local Organizing Team": ["Aneta Vulgarakis", "Antonio Cicchetti", "Federico Ciccozzi", "Juraj Feljan"],
        "Mobile Chairs": ["Reid Holmes"],
        "Program Committee": ["Benoit Baudry", "Nelly Bencomo", "Christian Bird", "Yuriy Brun", "Tevfik Bultan", "Jordi Cabot", "Yuanfang Cai", "Radu Calinescu", "Michel Chaudron", "Jane Cleland-Huang", "Myra Cohen", "Vittorio Cortellessa", "Elisabetta Di Nitto", "Massimiliano Di Penta", "Danny Dig", "Schahram Dustdar", "Bernd Fischer", "Robert France", "Gordon Fraser", "Diego Garbervetsky", "Michael Goedicke", "Lars Grunske", "Arie Gurfinkel", "Robert Hall", "Reiko Heckel", "Mats Heimdahl", "John G. Hosking", "Christian Kaestner", "David Lo", "Shahar Maoz", "Henry Muccini", "Shiva Nejati", "Tien N. Nguyen", "Jocelyn Simmonds", "Tetsuo Tamai", "Lin Tan", "Daniel Varro", "Michael Whalen", "Andreas Zeller"],
        "Expert Review Panel": ["Jamie Andrews", "Sven Apel", "Alexander Egyed", "Harald Gall", "Dimitra Giannakopoulou", "John Grundy", "Mark Harman", "Paola Inverardi", "Andrew Ireland", "Sarfraz Khurshid", "Akash Lal", "Axel Legay", "Emmanuel Letier", "Darko Marinov", "Tim Menzies", "Martin Naedele", "Corina Pasareanu", "Charles Pecheur", "Lori Pollock", "Abhik Roychoudhury", "Motoshi Saeki", "Gabriele Taentzer", "Nikolai Tillmann", "Paolo Tonella", "Willem Visser", "Tao Xie", "Thomas Zimmermann", "Andrea Zisman"],
        "Organizing Committee": ["Malin Rosqvist", "Aneta Vulgarakis", "Antonio Cicchetti", "Federico Ciccozzi", "Juraj Feljan"]
    },

    "SocialFeeds" : 
    [
        {
            "Name": "Twitter",
            "Keywords": ["ase", "ASEConf2014"],
            "URL": "https://twitter.com/ASEConf2014"
        },
        {
            "Name": "Facebook",
            "URL": "https://www.facebook.com/aseconf"
        }
    ],

    "VenueInfo": 
    {
        "Name": "Aros Congress Center, Vasteras",
        "GPS": 
        {
            "Latitude": 59.609526,
            "Longitude": 16.549235
        }
    },

    "InfoPage": 
    {
        "xaml": "foo",
        "Elements": 
        [
            {
                "XamlName": "ConferenceCenterMap",
                "Type": "Map",
                "GPS": {
                    "Latitude": 59.609526,
                    "Longitude": 16.549235
                },
                "MapLabel": "Aros Congress Center"
            },
            {
                "XamlName": "LicenseButton",
                "Type": "WebLink",
                "URL": "http://research.microsoft.com/en-US/projects/confapp/terms.aspx"
            },
            {
                "XamlName": "PrivacyButton",
                "Type": "WebLink",
                "URL": "http://privacy.microsoft.com/en-us/default.msp"
            }
        ]
    },

    "SessionPriorities": 
    [
        "Award",
        "Invited Talk",
        "Other",


        "Technical",
        "New Idea",
        "Experience"
    ],

    "Items":
    [
    	{
            "Title": "Keynote Talk: The Logic of Information Design",
            "Type": "Invited Talk",
            "Key": "p1",
            "URL": "http://scholar.google.com/scholar?hl=en&q=Keynote Talk: The Logic of Information Design",
            "PersonsString": "Luciano Floridi",
            "AffiliationsString": "University of Oxford, UK",
            "Authors": [ "Luciano Floridi"],
            "Affiliations": [ "University of Oxford, UK"],
            "Abstract": "At least since the sixties, there have been many attempts to understand the logic of design, when the latter is broadly  understood as a purposeful way of realizing an artefact. In this  talk, I shall explore current methodologies to see how they may  be adapted to cases in which what is being designed is  information, in the sense of both a semantic artefact (e.g. a train  timetable) and a communication process (e.g. the announcement  that a specific train is leaving from particular platform)."
    	},

    	{
            "Title": "Keynote Talk: EasyChair",
            "Type": "Invited Talk",
            "Key": "p3",
            "URL": "http://scholar.google.com/scholar?hl=en&q=Keynote Talk: EasyChair",
            "PersonsString": "Andrei Voronkov",
            "AffiliationsString": "University of Manchester, UK",
            "Authors": [ "Andrei Voronkov"],
            "Affiliations": [ "University of Manchester, UK"],
            "Abstract": "EasyChair started in 2002 as a small collection of scripts helping the author to organise submission and reviewing for the  conferences LPAR and CADE. Since then it has served over  30,000 conferences and 1,100,000 users. The system has over  240,000 lines of source code and automates paper submission,  reviewing, proceedings generation, publishing, conference  registration and conference programme generation. Several new  modules are under development.  The design and architecture of every very large Web service is  unique, and EasyChair is not an exception. This talk overviews  design features of EasyChair."
    	},

    	{
            "Title": "Keynote Talk: Experiences From Developing Industrial Software Systems with Long Lifecycles",
            "Type": "Invited Talk",
            "Key": "p5",
            "URL": "http://scholar.google.com/scholar?hl=en&q=Keynote Talk: Experiences From Developing Industrial Software Systems with Long Lifecycles",
            "PersonsString": "Magnus Larsson",
            "AffiliationsString": "India Development Center",
            "Authors": [ "Magnus Larsson"],
            "Affiliations": [ "India Development Center"],
            "Abstract": "Industrial systems very often control critical infrastructure like power plants or factories. A failure can have huge impact on the  production from such a plant and impact both companies as well  as society. Since the investment in industrial control systems for  a plant or factory is big it is expected and requested that the  systems can stay operational for a time period very often  exceeding a decade or more. This talk highlights experiences  from the research and development of such systems. Especially  we look at automation of software engineering tasks to enhance  developer productivity and how quality can be assured. The talk  will also highlight the importance of understanding the domain  and customer in order to make the best possible industrial software"
    	},

    	{
            "Title": "Automated Analysis of Multithreaded Programs for Performance Modeling ",
            "Type": "Technical",
            "Key": "p7",
            "URL": "http://scholar.google.com/scholar?hl=en&q=Automated Analysis of Multithreaded Programs for Performance Modeling ",
            "PersonsString": "Alexander Tarvo, Steven P. Reiss",
            "AffiliationsString": "Brown University",
            "Authors": [ "Alexander Tarvo", "Steven P. Reiss"],
            "Affiliations": [ "Brown University"],
            "Abstract": "The behavior of multithreaded programs is often difficult to understand and predict. Synchronization operations and limited computational resources combine to produce complex non-linear dependencies between a program’s configuration parameters and its performance. Performance models are used to understand these dependencies. Such models are complex, and constructing them requires a solid understanding of the program’s behavior. As a result, building models of complex applications manually is extremely timeconsuming and error-prone. In this paper we demonstrate that such models can be built automatically. This paper presents our approach for automatically modeling multithreaded programs. Our framework uses a combination of static and dynamic analyses of a single representative run of a system to build a model that can then be explored under a variety of configurations. We show how the models are constructed and show they accurately predict the performance of various multithreaded programs, including complex industrial applications."
    	},
		{
		    "Title": "Behavioral Resource-Aware Model Inference",
		    "Type": "Technical",
		    "Key": "p19",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Behavioral Resource-Aware Model Inference",
		    "PersonsString": "Tony Ohmann, Michael Herzberg, Sebastian Fiss, Armand Halbert, Marc Palyart, Ivan Beschastnikh, Yuriy Brun",
		    "Authors": ["Tony Ohmann", "Michael Herzberg", "Sebastian Fiss", "Armand Halbert", "Marc Palyart", "Ivan Beschastnikh", "Yuriy Brun"],
		    "Affiliations": ["University of Massachusetts", "University of Massachusetts", "University of Massachusetts", "University of Massachusetts", "University of British Columbia", "University of British Columbia", "University of Massachusetts"],
		    "AffiliationsString": "University of Massachusetts, University of British Columbia",
		    "Abstract": "Software bugs often arise because of differences between what developers think their system does and what the system actually does. These differences frustrate debugging and comprehension efforts. We describe Perfume, an automated approach for inferring behavioral, resource-aware models of software systems from logs of their executions. These finite state machine models ease understanding of system behavior and resource use. Perfume improves on the state of the art in model inference by differentiating behaviorally similar executions that differ in resource consumption. For example, Perfume separates otherwise identical requests that hit a cache from those that miss it, which can aid understanding how the cache affects system behavior and removing cache-related bugs. A small user study demonstrates that using Perfume is more effective than using logs and another model inference tool for system comprehension. A case study on the TCP protocol demonstrates that Perfume models can help understand non-trivial protocol behavior. Perfume models capture key system properties and improve system comprehension, while being reasonably robust to noise likely to occur in real-world executions."
		}, 
		{
		    "Title": "Targeted Test Input Generation Using Symbolic-Concrete Backward Execution",
		    "Type": "New Idea",
		    "Key": "p31",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Targeted Test Input Generation Using Symbolic-Concrete Backward Execution",
		    "PersonsString": "Peter Dinges, Gul Agha",
		    "Authors": ["Peter Dinges", "Gul Agha"],
		    "Affiliations": ["University of Illinois", "University of Illinois"],
		    "AffiliationsString": "University of Illinois",
		    "Abstract": "Knowing inputs that cover a specific branch or statement in a program is useful for debugging and regression testing. Symbolic backward execution (SBE) is a natural approach to find such targeted inputs. However, SBE struggles with complicated arithmetic, external method calls, and datadependent loops that occur in many real-world programs. We propose symcretic execution, a novel combination of SBE and concrete forward execution that can efficiently find targeted inputs despite these challenges. An evaluation of our approach on a range of test cases shows that symcretic execution finds inputs in more cases than concolic testing tools while exploring fewer path segments. Integration of our approach will allow test generation tools to fill coverage gaps and static bug detectors to verify candidate bugs with concrete test cases."
		}, 
		{
		    "Title": "Discriminating Influences Among Instructions in a Dynamic Slice",
		    "Type": "New Idea",
		    "Key": "p37",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Discriminating Influences Among Instructions in a Dynamic Slice",
		    "PersonsString": "Vijay Krishna Palepu, James A. Jones",
		    "Authors": ["Vijay Krishna Palepu", "James A. Jones"],
		    "Affiliations": ["University of California, Irvine", "University of California, Irvine"],
		    "AffiliationsString": "University of California, Irvine",
		    "Abstract": "Dynamic slicing is an analysis that operates on program execution models (e.g., dynamic dependence graphs) to support the interpreation of program-execution traces. Given an execution event of interest (i.e., the slicing criterion), it solves for all instruction-execution events that either affect or are affected by that slicing criterion, and thereby reduces the search space to find influences within execution traces. Unfortunately, the resulting dynamic slices are still often prohibitively large for many uses. Despite this reduction search space, the dynamic slices are often still prohibitively large for many uses, and moreover, are provided without guidance of which and to what degree those influences are exerted. In this work, we present a novel approach to quantify the relevance of each instruction-execution event within a dynamic slice by its degree of relative influence on the slicing criterion. As such, we augment the dynamic slice with dynamic-relevance measures for each event in the slice, which can be used to guide and prioritize inspection of the events in the slice. We conducted an experiment that evaluates the ability of existing dynamic slicing and our approach, using dynamic relevance, to correctly identify sources of execution influence and state propagation. The results of the experiment show that inspections that were guided by traditional dynamic slicing to find the root cause for a failure reduced the search space by, on average, 61.3%. Further, inspections guided with the assistance of the new dynamic relevance reduced the search space by 96.2%"
		}, 
		{
		    "Title": "Dompletion: DOM-Aware JavaScript Code Completion",
		    "Type": "Technical",
		    "Key": "p43",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Dompletion: DOM-Aware JavaScript Code Completion",
		    "PersonsString": "Kartik Bajaj, Karthik Pattabiraman, Ali Mesbah",
		    "Authors": ["Kartik Bajaj", "Karthik Pattabiraman", "Ali Mesbah"],
		    "Affiliations": ["University of British Columbia", "University of British Columbia", "University of British Columbia"],
		    "AffiliationsString": "University of British Columbia",
		    "Abstract": "JavaScript is a scripting language that plays a prominent role in modern web applications. It is dynamic in nature and interacts heavily with the Document Object Model (DOM) at runtime. These characteristics make providing code completion support to JavaScript programmers particularly challenging. We propose an automated technique that reasons about existing DOM structures, dynamically analyzes the JavaScript code, and provides code completion suggestions for JavaScript code that interacts with the DOM through its APIs. Our automated code completion scheme is implemented in an open source tool called DOMPLETION. The results of our empirical evaluation indicate that (1) DOM structures exhibit patterns, which can be extracted and reasoned about in the context of code completion suggestions; (2) D OMPLETION can provide code completion suggestions with a recall of 89%, precision of 90%, and an average time of 2.8 seconds."
		}, 
		{
		    "Title": "Continuous Test Generation: Enhancing Continuous Integration with Automated Test Generation",
		    "Type": "Technical",
		    "Key": "p55",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Continuous Test Generation: Enhancing Continuous Integration with Automated Test Generation",
		    "PersonsString": "Jose Campos, Andrea Arcuri, Gordon Fraser, Rui Abreu",
		    "Authors": ["Jose Campos", "Andrea Arcuri", "Gordon Fraser", "Rui Abreu"],
		    "Affiliations": ["University of Sheffield", "Simula Research Laboratory", "University of Sheffield", "University of Porto"],
		    "AffiliationsString": "University of Sheffield, Simula Research Laboratory, University of Porto",
		    "Abstract": "In object oriented software development, automated unit test generation tools typically target one class at a time. A class, however, is usually part of a software project consisting of more than one class, and these are subject to changes over time. This context of a class offers significant potential to improve test generation for individual classes. In this paper, we introduce Continuous Test Generation (CTG), which includes automated unit test generation during continuous integration (i.e., infrastructure that regularly builds and tests software projects). CTG offers several benefits: First, it answers the question of how much time to spend on each class in a project. Second, it helps to decide in which order to test them. Finally, it answers the question of which classes should be subjected to test generation in the first place. We have implemented CTG using the E VOSUITE unit test generation tool, and performed experiments using eight of the most popular open source projects available on GitHub, ten randomly selected projects from the SF100 corpus, and five industrial projects. Our experiments demonstrate improvements of up to +58% for branch coverage and up to +69% for thrown undeclared exceptions, while reducing the time spent on test generation by up to +83%."
		}, 
		{
		    "Title": "Leveraging Existing Tests in Automated Test Generation for Web Applications",
		    "Type": "Technical",
		    "Key": "p67",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Leveraging Existing Tests in Automated Test Generation for Web Applications",
		    "PersonsString": "Amin Milani Fard, Mehdi Mirzaaghaei, Ali Mesbah",
		    "Authors": ["Amin Milani Fard", "Mehdi Mirzaaghaei", "Ali Mesbah"],
		    "Affiliations": ["University of British Columbia", "University of British Columbia", "University of British Columbia"],
		    "AffiliationsString": "University of British Columbia",
		    "Abstract": "To test web applications, developers currently write test cases in frameworks such as Selenium. On the other hand, most web test generation techniques rely on a crawler to explore the dynamic states of the application. The first approach requires much manual effort, but benefits from the domain knowledge of the developer writing the test cases. The second one is automated and systematic, but lacks the domain knowledge required to be as effective. We believe combining the two can be advantageous. In this paper, we propose to (1) mine the human knowledge present in the form of input values, event sequences, and assertions, in the human-written test suites, (2) combine that inferred knowledge with the power of automated crawling, and (3) extend the test suite for uncovered/unchecked portions of the web application under test. Our approach is implemented in a tool called Testilizer. An evaluation of our approach indicates that Testilizer (1) outperforms a random test generator, and (2) on average, can generate test suites with improvements of up to 150% in fault detection rate and up to 30% in code coverage, compared to the original test suite"
		}, 
		{
		    "Title": "Automated Unit Test Generation for Classes with Environment Dependencies",
		    "Type": "Technical",
		    "Key": "p79",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Automated Unit Test Generation for Classes with Environment Dependencies",
		    "PersonsString": "Andrea Arcuri, Gordon Fraser, Juan Pablo Galeotti",
		    "Authors": ["Andrea Arcuri", "Gordon Fraser", "Juan Pablo Galeotti"],
		    "Affiliations": ["Simula Research Laboratory", "University of Sheffield", "Saarland University"],
		    "AffiliationsString": "Simula Research Laboratory, University of Sheffield, Saarland University",
		    "Abstract": "Automated test generation for object-oriented software typically consists of producing sequences of calls aiming at high code coverage. In practice, the success of this process may be inhibited when classes interact with their environment, such as the file system, network, user-interactions, etc. This leads to two major problems: First, code that depends on the environment can sometimes not be fully covered simply by generating sequences of calls to a class under test, for example when execution of a branch depends on the contents of a file. Second, even if code that is environmentdependent can be covered, the resulting tests may be unstable, i.e., they would pass when first generated, but then may fail when executed in a different environment. For example, tests on classes that make use of the system time may have failing assertions if the tests are executed at a different time than when they were generated. In this paper, we apply bytecode instrumentation to automatically separate code from its environmental dependencies, and extend the E VOSUITE Java test generation tool such that it can explicitly set the state of the environment as part of the sequences of calls it generates. Using a prototype implementation, which handles a wide range of environmental interactions such as the file system, console inputs and many non-deterministic functions of the Java virtual machine (JVM), we performed experiments on 100 Java projects randomly selected from SourceForge (the SF100 corpus). The results show significantly improved code coverage — in some cases even in the order of +80%/+90%. Furthermore, our techniques reduce the number of unstable tests by more than 50%."
		}, 
		{
		    "Title": "Finding HTML Presentation Failures Using Image Comparison Techniques",
		    "Type": "New Idea",
		    "Key": "p91",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Finding HTML Presentation Failures Using Image Comparison Techniques",
		    "PersonsString": "Sonal Mahajan, William G. J. Halfond",
		    "Authors": ["Sonal Mahajan", "William G. J. Halfond"],
		    "Affiliations": ["University of Southern California", "University of Southern California"],
		    "AffiliationsString": "University of Southern California",
		    "Abstract": "Presentation failures in web applications can negatively affect an application’s usability and user experience. To find such failures, testers must visually inspect the output of a web application or exhaustively specify invariants to automatically check a page’s correctness. This makes finding presentation failures labor intensive and error prone. In this paper, we present a new automated approach for detecting and localizing presentation failures in web pages. To detect presentation failures, our approach uses image processing techniques to compare a web page and its oracle. Then, to localize the failures, our approach analyzes the page with respect to its visual layout and identifies the HTML elements likely to be responsible for the failure. We evaluated our approach on a set of real-world web applications and found that the approach was able to accurately detect failures and identify the faulty HTML elements."
		}, 
		{
		    "Title": "Accelerated Test Execution Using GPUs",
		    "Type": "New Idea",
		    "Key": "p97",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Accelerated Test Execution Using GPUs",
		    "PersonsString": "Ajitha Rajan, Subodh Sharma, Peter Schrammel, Daniel Kroening",
		    "Authors": ["Ajitha Rajan", "Subodh Sharma", "Peter Schrammel", "Daniel Kroening"],
		    "Affiliations": ["University of Edinburgh", "University of Oxford", "University of Oxford", "University of Oxford"],
		    "AffiliationsString": "University of Edinburgh, University of Oxford",
		    "Abstract": "As product life-cycles become shorter and the scale and complexity of systems increase, accelerating the execution of large test suites gains importance. Existing research has primarily focussed on techniques that reduce the size of the test suite. By contrast, we propose a technique that accelerates test execution, allowing test suites to run in a fraction of the original time, by parallel execution with a Graphics Processing Unit (GPU). Program testing, which is in essence execution of the same program with multiple sets of test data, naturally exhibits the kind of data parallelism that can be exploited with GPUs. Our approach simultaneously executes the program with one test case per GPU thread. GPUs have severe limitations, and we discuss these in the context of our approach and define the scope of our applications. We observe speed-ups up to a factor of 27 compared to single-core execution on conventional CPUs with embedded systems benchmark programs."
		}, 
		{
		    "Title": "Seeking the User Interface",
		    "Type": "Technical",
		    "Key": "p103",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Seeking the User Interface",
		    "PersonsString": "Steven P. Reiss",
		    "Authors": ["Steven P. Reiss"],
		    "Affiliations": ["Brown University"],
		    "AffiliationsString": "Brown University",
		    "Abstract": "User interface design and coding can be complex and messy. We describe a system that uses code search to simplify and automate the generation of such code. We start with a simple sketch of the desired interface along with a set of keywords describing the application context. We then use existing code search engines to find results based on the keywords. We look for potential Javabased user interface solutions within those results and apply a series of code transformations to the solutions to generate derivative solutions, aiming to get solutions that constitute only the user interface and that will compile and run. We run the resultant solutions and compare the generated interfaces to the user’s sketches. Finally, we let programmers interact with the matched solutions and return the running code for the solutions they choose. The system can be used not only for generating initial user interface code for an application, but also for exploring alternative interfaces and for looking at the user interfaces in a code repository."
		}, 
		{
		    "Title": "Interrogative-Guided Re-Ranking for Question-Oriented Software Text Retrieval",
		    "Type": "New Idea",
		    "Key": "p115",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Interrogative-Guided Re-Ranking for Question-Oriented Software Text Retrieval",
		    "PersonsString": "Ting Ye, Bing Xie, Yanzhen Zou, Xiuzhao Chen",
		    "Authors": ["Ting Ye", "Bing Xie", "Yanzhen Zou", "Xiuzhao Chen"],
		    "Affiliations": ["Peking University & Ministry of Education", "Peking University & Ministry of Education", "Peking University & Ministry of Education", "Peking University"],
		    "AffiliationsString": "Peking University & Ministry of Education, Peking University",
		    "Abstract": "In many software engineering tasks, question-oriented text retrieval is often used to help developers search for software artifacts. In this paper, we propose an interrogativeguided re-ranking approach for question-oriented software text retrieval. Since different interrogatives usually indicate users’ different search focuses, we firstly label 9 kinds of question-answer pairs according to the common interrogatives. Then, we train document classifiers by using 1,826 questions along with 2,460 answers from StackOverflow, apply the classifiers to our document repository and present a re-ranking approach to improve the retrieval precision. In software document classification, our classifiers achieve the average precision, recall and F-measure of 56.2%, 90.9% and 69.4% respectively. Our re-ranking approach presents 9.6% improvement in nDCG@1 upon the baseline, and we also obtain 8.1% improvement in nDCG@10 when more candidates are included."
		}, 
		{
		    "Title": "An Empirical Study on Reducing Omission Errors in Practice",
		    "Type": "New Idea",
		    "Key": "p121",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=An Empirical Study on Reducing Omission Errors in Practice",
		    "PersonsString": "Jihun Park, Miryung Kim, Doo-Hwan Bae",
		    "Authors": ["Jihun Park", "Miryung Kim", "Doo-Hwan Bae"],
		    "Affiliations": ["Korea Advanced Institute of Science and Technology", "The University of Texas at Austin", "Korea Advanced Institute of Science and Technology"],
		    "AffiliationsString": "Korea Advanced Institute of Science and Technology, The University of Texas at Austin",
		    "Abstract": "Since studies based on mining software repositories sparked interests in the field of guiding software changes, many change recommendation techniques have been proposed to reduce omission errors. While these techniques only used existing software commit data sets to evaluate their effectiveness, we use the data set of supplementary patches which correct initial incomplete patches to investigate how much actual omission errors could be prevented in practice. We find that while a single trait is inadequate, combining multiple traits is limited as well for predicting supplementary change locations. Neither does a boosting approach improve accuracy significantly, nor filtering based on developer or package specific information necessarily improves the accuracy. Developers rarely repeat the same mistakes, making the potential value of history-based change prediction less promising. We share our skepticism that omission errors are hard to prevent in practice based on a systematic evaluation of a supplementary patch data set."
		}, 
		{
		    "Title": "Fusion Fault Localizers",
		    "Type": "Technical",
		    "Key": "p127",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Fusion Fault Localizers",
		    "PersonsString": "Lucia, David Lo, Xin Xia",
		    "Authors": ["Lucia", "David Lo", "Xin Xia"],
		    "Affiliations": ["Singapore Management University", "Singapore Management University", "Zhejiang University"],
		    "AffiliationsString": "Singapore Management University, Zhejiang University",
		    "Abstract": "Many spectrum-based fault localization techniques have been proposed to measure how likely each program element is the root cause of a program failure. For various bugs, the best technique to localize the bugs may differ due to the characteristics of the buggy programs and their program spectra. In this paper, we leverage the diversity of existing spectrum-based fault localization techniques to better localize bugs using data fusion methods. Our proposed approach consists of three steps: score normalization, technique selection, and data fusion. We investigate two score normalization methods, two technique selection methods, and five data fusion methods resulting in twenty variants of Fusion Localizer. Our approach is bug specific in which the set of techniques to be fused are adaptively selected for each buggy program based on its spectra. Also, it requires no training data, i.e., execution traces of the past buggy programs. We evaluate our approach on a common benchmark dataset and a dataset consisting of real bugs from three medium to large programs. Our evaluation demonstrates that our approach can significantly improve the effectiveness of existing state-of-the-art fault localization techniques. Compared to these state-of-the-art techniques, the best variants of Fusion Localizer can statistically significantly reduce the amount of code to be inspected to find all bugs. Our best variants can increase the proportion of bugs localized when developers only inspect the top 10% most suspicious program elements by more than 10% and increase the number of bugs that can be successfully localized when developers only inspect up to 10 program blocks by more than 20%."
		}, 
		{
		    "Title": "Automated Variability Analysis and Testing of an E-Commerce Site. An Experience Report",
		    "Type": "Experience",
		    "Key": "p139",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Automated Variability Analysis and Testing of an E-Commerce Site. An Experience Report",
		    "PersonsString": "Sergio Segura, Ana B. Sanchez, Antonio Ruiz-Cortes",
		    "Authors": ["Sergio Segura", "Ana B. Sanchez", "Antonio Ruiz-Cortes"],
		    "Affiliations": ["University of Seville", "University of Seville", "University of Seville"],
		    "AffiliationsString": "University of Seville",
		    "Abstract": "In this paper, we report on our experience on the development of La Hilandera, an e-commerce site selling haberdashery products and craft supplies in Europe. The store has a huge input space where customers can place almost three millions of different orders which made testing an extremely difficult task. To address the challenge, we explored the applicability of some of the practices for variability management in software product lines. First, we used a feature model to represent the store input space which provided us with a variability view easy to understand, share and discuss with all the stakeholders. Second, we used techniques for the automated analysis of feature models for the detection and repair of inconsistent and missing configuration settings. Finally, we used test selection and prioritization techniques for the generation of a manageable and effective set of test cases. Our findings, summarized in a set of lessons learnt, suggest that variability techniques could successfully address many of the challenges found when developing e-commerce sites."
		}, 
		{
		    "Title": "PrefFinder: Getting the Right Preference in Configurable Software Systems",
		    "Type": "Technical",
		    "Key": "p151",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=PrefFinder: Getting the Right Preference in Configurable Software Systems",
		    "PersonsString": "Dongpu Jin, Myra B. Cohen, Xiao Qu, Brian Robinson",
		    "Authors": ["Dongpu Jin", "Myra B. Cohen", "Xiao Qu", "Brian Robinson"],
		    "Affiliations": ["University of Nebraska-Lincoln", "University of Nebraska-Lincoln", "ABB Corporate Research", "ABB Inc"],
		    "AffiliationsString": "University of Nebraska-Lincoln, ABB Corporate Research, ABB Inc",
		    "Abstract": "Highly configurable software, such as web browsers, databases or office applications, have a large number of preferences that the user can customize, but documentation of themmay be scarce or distributed. A user, tester or service technician may have to search through hundreds or thousands ofchoices in multiple documents when trying to identify which preference will modify a particular system behavior. In this paper we present PrefFinder, a natural language framework that finds (and changes) user preferences. It is tied into an application’s preference system and static documentation. We have instantiated PrefFinder as a plugin on two open source applications, and as a stand-alone GUI for an industrial application. PrefFinder finds the correct answer between 76-96% of the time on more than 175 queries. When compared to asking questions on a help forum or through the company’s service center, we can potentially save days or even weeks of time."
		}, 
		{
		    "Title": "MiL Testing of Highly Configurable Continuous Controllers: Scalable Search Using Surrogate Models",
		    "Type": "Technical",
		    "Key": "p163",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=MiL Testing of Highly Configurable Continuous Controllers: Scalable Search Using Surrogate Models",
		    "PersonsString": "Reza Matinnejad, Shiva Nejati, Lionel C. Briand, Thomas Bruckmann",
		    "Authors": ["Reza Matinnejad", "Shiva Nejati", "Lionel C. Briand", "Thomas Bruckmann"],
		    "Affiliations": ["University of Luxembourg", "University of Luxembourg", "University of Luxembourg", "Delphi Automotive Systems"],
		    "AffiliationsString": "University of Luxembourg, Delphi Automotive Systems",
		    "Abstract": "Continuous controllers have been widely used in automotive domain to monitor and control physical components. These controllers are subject to three rounds of testing: Model-in-the-Loop (MiL), Software-in-the-Loop and Hardware-in-the-Loop. In our earlier work, we used meta-heuristic search to automate MiL testing of fixed configurations of continuous controllers. In this paper, we extend our work to support MiL testing of all feasible configurations of continuous controllers. Specifically, we use a combination of dimensionality reduction and surrogate modeling techniques to scale our earlier MiL testing approach to large, multi-dimensional input spaces formed by configuration parameters. We evaluated our approach by applying it to a complex, industrial continuous controller. Our experiment shows that our approach identifies test cases indicating requirements violations. Further, we demonstrate that dimensionally reduction helps generate surrogate models with higher prediction accuracy. Finally, we show that combining our search algorithm with surrogate modelling improves its efficiency for two out of three requirements."
		}, 
		{
		    "Title": "Assertion Guided Abstraction: A Cooperative Optimization for Dynamic Partial Order Reduction",
		    "Type": "Technical",
		    "Key": "p175",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Assertion Guided Abstraction: A Cooperative Optimization for Dynamic Partial Order Reduction",
		    "PersonsString": "Markus Kusano, Chao Wang",
		    "Authors": ["Markus Kusano", "Chao Wang"],
		    "Affiliations": ["Virginia Tech", "Virginia Tech"],
		    "AffiliationsString": "Virginia Tech",
		    "Abstract": "We propose a new method for reducing the interleaving space during stateless model checking of multithreaded C/C++ programs. The problem is challenging because of the exponential growth of possible interleavings between threads. We have developed a new method, called assertion guided abstraction, which leverages both static and dynamic program analyses in a cooperative framework to reduce the interleaving space. Unlike existing methods that consider all interleavings of all conflicting memory accesses in a program, our new method relies on a new notion of predicate dependence based on which we can soundly abstract the interleaving space to only those conflicting memory accesses that may cause assertion violations and/or deadlocks. Our experimental evaluation of assertion guided abstraction on open source benchmarks shows that it is capable of achieving a significant reduction, thereby allowing for the verification of programs that were previously too complex for existing algorithms to handle."
		}, 
		{
		    "Title": "Symbolic State Validation through Runtime Data",
		    "Type": "Technical",
		    "Key": "p187",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Symbolic State Validation through Runtime Data",
		    "PersonsString": "Yueqi Li, Shing Chi Cheung",
		    "Authors": ["Yueqi Li", "Shing Chi Cheung"],
		    "Affiliations": ["Hong Kong University of Science and Technology", "Hong Kong University of Science and Technology"],
		    "AffiliationsString": "Hong Kong University of Science and Technology",
		    "Abstract": "Real  world  programs  are  typically  built  on  top  of  many  library  functions. Symbolic analysisof these programs generally requires  precise  models  of  these  functions’  Application  Programming  Interfaces  (APIs),  which  are  mostly  unavailable  because  these  models  are  costly  to  construct.  A  variant  approach  of  symbolic  analysis  is  to  over-approximate  the  return  values  of  those  APIs  that  have  not  been  modeled.  However,  such  approximation  can  induce many unreachable symbolic states, which are expensive to  validate manually. In this paper, we propose a static approach to  automatically validating the reported anomalous symbolic states.  The validation makes use of the available runtime data of the unmodeled  APIs  collected  from  previous  program  executions.  We  show that the symbolic state validation problem can be cast as a  MAX-SAT problem and solved by existing constraint solvers.  Our approach is motivated by two observations. We may bind the  symbolic  parameters  in  un-modeled  APIs  based  on  observations  made  in  former  executions  by  other  programs.  The  binding  enables  us  to  use  the  corresponding  observed  concrete  return  values  of  APIs  to  validate  the  symbolic  states  arising  from  the  over-approximated return values of the un-modeled APIs. Second,  some symbolic constraints can be accurately evaluated despite the  imprecision of the over-approximated symbolic values.  Our technique found 80 unreported bugs when it was applied to  10 popular programs with a total of 1.5 million lines of code. All  of them can be confirmed by test cases. Our technique presents a  promising  way  to  apply  the  big  data  paradigm  to  software  engineering.  It  provides  a  mechanism  to  validate  the  symbolic  states  of  a  project  by  leveraging  the  many  concrete  input-output  values of APIs collected from other projects."
		}, 
		{
		    "Title": "Verifying Self-Adaptive Applications Suffering Uncertainty",
		    "Type": "Technical",
		    "Key": "p199",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Verifying Self-Adaptive Applications Suffering Uncertainty",
		    "PersonsString": "Wenhua Yang, Chang Xu, Yepang Liu, Chun Cao, Xiaoxing Ma, Jian Lu",
		    "Authors": ["Wenhua Yang", "Chang Xu", "Yepang Liu", "Chun Cao", "Xiaoxing Ma", "Jian Lu"],
		    "Affiliations": ["Nanjing University", "Nanjing University", "The Hong Kong University of Science and Technology", "Nanjing University", "Nanjing University", "Nanjing University"],
		    "AffiliationsString": "Nanjing University, The Hong Kong University of Science and Technology",
		    "Abstract": "Self-adaptive applications address environmental dynamics systematically. They can be faulty and exhibit runtime errors when environmental dynamics are not considered adequately. It becomes more severe when uncertainty exists in their sensing and adaptation to environments. Existing work verifies self-adaptive applications, but does not explicitly consider environmental constraints or uncertainty. This gives rise to inaccurate verification results. In this paper, we address this problem by proposing a novel approach to verifying self-adaptive applications suffering uncertainty in their environmental interactions. It builds Interactive State Machine (ISM) models for such applications and verifies them with explicit consideration of environmental constraints and uncertainty. It then refines verification results by prioritizing counterexamples according to their probabilities. We experimentally evaluated our approach with real-life self-adaptive applications, and the experimental results confirmed its effectiveness. Our approach reported 200-660% more counterexamples than not considering uncertainty, and eliminated all false counterexamples caused by ignoring environmental constraints."
		}, 
		{
		    "Title": "Automated Synthesis and Deployment of Cloud Applications",
		    "Type": "Technical",
		    "Key": "p211",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Automated Synthesis and Deployment of Cloud Applications",
		    "PersonsString": "Roberto Di Cosmo, Michael Lienhardt, Ralf Treinen, Stefano Zacchiroli, Jakub Zwolakowski, Antoine Eiche, Alexis Agahi",
		    "Authors": ["Roberto Di Cosmo", "Michael Lienhardt", "Ralf Treinen", "Stefano Zacchiroli", "Jakub Zwolakowski", "Antoine Eiche", "Alexis Agahi"],
		    "Affiliations": ["Universite Paris Diderot", "Universite Paris Diderot", "Universite Paris Diderot", "Universite Paris Diderot", "Universite Paris Diderot", "Mandriva", "Kyriba Corporation"],
		    "AffiliationsString": "Universite Paris Diderot, Mandriva, Kyriba Corporation",
		    "Abstract": "Complex networked applications are assembled by connecting software components distributed across multiple machines. Building and deploying such systems is a challenging problem which requires a significant amount of expertise: the system architect must ensure that all component dependencies are satisfied, avoid conflicting components, and add the right amount of component replicas to account for quality of service and fault-tolerance. In a cloud environment, one also needs to minimize the virtual resources provisioned upfront, to reduce the cost of operation. Once the full architecture is designed, it is necessary to correctly orchestrate the deployment phase, to ensure all components are started and connected in the right order. We present a toolchain that automates the assembly and deployment of such complex distributed applications. Given as input a high-level specification of the desired system, the set of available components together with their requirements, and the maximal amount of virtual resources to be committed, it synthesizes the full architecture of the system, placing components in an optimal manner using the minimal number of available machines, and automatically deploys the complete system in a cloud environment."
		}, 
		{
		    "Title": "Concurrent Transformation Components Using Contention Context Sensors",
		    "Type": "Technical",
		    "Key": "p223",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Concurrent Transformation Components Using Contention Context Sensors",
		    "PersonsString": "Erik Osterlund, Welf Lowe",
		    "Authors": ["Erik Osterlund", "Welf Lowe"],
		    "Affiliations": ["Linnaeus University", "Linnaeus University"],
		    "AffiliationsString": "Linnaeus University",
		    "Abstract": "Sometimes components are conservatively implemented as thread-safe, while during the actual execution they are only accessed from one thread. In these scenarios, overly conservative assumptions lead to suboptimal performance. The contribution of this paper is a component architecture that combines the benefits of different synchronization mechanisms to implement thread-safe concurrent components. Based on the thread contention monitored at runtime, context-aware composition and optimization select the appropriate mechanism. On changing contention, it revises this decision automatically and transforms the components accordingly. We implemented this architecture for concurrent queues, sets, and ordered sets. In all three cases, experimental evaluation shows close to optimal performance regardless of the actual contention. As a consequence, programmers can focus on the semantics of their systems and, e.g., conservatively use thread-safe components to assure consistency of their data, while deferring implementation and optimization decisions to contentioncontext-aware composition at runtime."
		}, 
		{
		    "Title": "Assigning Time Budgets to Component Functions in the Design of Time-Critical Automotive Systems",
		    "Type": "Technical",
		    "Key": "p235",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Assigning Time Budgets to Component Functions in the Design of Time-Critical Automotive Systems",
		    "PersonsString": "Ernest Wozniak, Marco Di Natale, Haibo Zeng, Chokri Mraidha, Sara Tucci-Piergiovanni, Sebastien Gerard",
		    "Authors": ["Ernest Wozniak", "Marco Di Natale", "Haibo Zeng", "Chokri Mraidha", "Sara Tucci-Piergiovanni", "Sebastien Gerard"],
		    "Affiliations": ["CEA LIST & McGill University", "Scuola Superiore Sant'Anna", "McGill University", "CEA LIST", "CEA LIST", "CEA LIST"],
		    "AffiliationsString": "CEA LIST & McGill University, Scuola Superiore Sant'Anna, McGill University, CEA LIST",
		    "Abstract": "The adoption of AUTOSAR and Model Driven Engineering (MDE) for the design of automotive software architectures allows an early analysis of system properties and the automatic synthesis of architecture and software implementation. To select and configure the architecture with respect to timing constraints, knowledge about the worst case execution times (WCET) of functions is required. An accurate evaluation of the WCET is only possible when reusing legacy functionality or very late in the development and procurement process. To drive the integration of SW components belonging to systems with timing constraints, automotive methodologies propose to assign WCET budgets to functions. This paper presents two solutions to assign budgets, while considering at the same time the problem of SW/HW synthesis. The first solution is a one-step algorithm. The second is an iterative improvement procedure with a staged approach that scales better to very large size systems. Both methods are evaluated on industrial systems to study their effectiveness and scalability"
		}, 
		{
		    "Title": "symMMU: Symbolically Executed Runtime Libraries for Symbolic Memory Access",
		    "Type": "Technical",
		    "Key": "p247",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=symMMU: Symbolically Executed Runtime Libraries for Symbolic Memory Access",
		    "PersonsString": "Anthony Romano, Dawson R. Engler",
		    "Authors": ["Anthony Romano", "Dawson R. Engler"],
		    "Affiliations": ["Stanford University", "Stanford University"],
		    "AffiliationsString": "Stanford University",
		    "Abstract": "Symbolic execution calls for specialized address translation. Unlike a pointer on a traditional machine model, which corresponds to a single address, a symbolic pointer may represent multiple feasible addresses. A symbolic pointer dereference manipulates symbolic state, potentially submitting many theorem prover requests in the process. Hence, design and management of symbolic accesses critically affects symbolic executor performance, complexity, and completeness. We demonstrate a symbolic execution extension, the symMMU, which separates access dispatch mechanism from policy by servicing memory accesses with symbolically executed runtime software handlers. This runtime code concisely represents access policies including pointer concretization, address forking, and symbolic indexing. These policies are competitive with a baseline hard-coded memory policy. Furthermore, the symMMU cleanly supports handlers for profiling, heap analysis, and demand allocated symbolic buffers. In practice, the symMMU flags hardware-validated bugs for over a thousand Linux program binaries."
		},
		{
		    "Title": "Evaluation of String Constraint Solvers in the Context of Symbolic Execution",
		    "Type": "Technical",
		    "Key": "p259",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Evaluation of String Constraint Solvers in the Context of Symbolic Execution",
		    "PersonsString": "Scott Kausler, Elena Sherman",
		    "Authors": ["Scott Kausler", "Elena Sherman"],
		    "Affiliations": ["Boise State University", "Boise State University"],
		    "AffiliationsString": "Boise State University",
		    "Abstract": "Symbolic execution tools query constraint solvers for tasks such as determining the feasibility of program paths. Therefore, the effectiveness of such tools depends on their constraint solvers. Most modern constraint solvers for primitive types are efficient and accurate. However, research on constraint solvers for complex types, such as strings, is less converged. In this paper, we introduce two new solver adequacy criteria, modeling cost and accuracy, to help the user identify an adequate solver. Using these metrics and performance criterion, we evaluate four distinct string constraint solvers in the context of symbolic execution. Our results show that, depending on the needs of the user and composition of the program, one solver might be more appropriate than another. Yet, none of the solvers exhibit the best results for all programs. Hence, if resources permit, the user will benefit the most from executing all solvers in parallel and enabling communication between solvers."
		}, 
		{
		    "Title": "Incremental Symbolic Execution for Automated Test Suite Maintenance",
		    "Type": "New Idea",
		    "Key": "p271",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Incremental Symbolic Execution for Automated Test Suite Maintenance",
		    "PersonsString": "Sarmad Makhdoom, Muhammad Adeel Khan, Junaid Haroon Siddiqui",
		    "Authors": ["Sarmad Makhdoom", "Muhammad Adeel Khan", "Junaid Haroon Siddiqui"],
		    "Affiliations": ["LUMS School of Science and Engineering", "LUMS School of Science and Engineering", "LUMS School of Science and Engineering"],
		    "AffiliationsString": "LUMS School of Science and Engineering",
		    "Abstract": "Scaling software analysis techniques based on source-code, such as symbolic execution and data flow analyses, remains a challenging problem for systematically checking software systems. In this work, we aim to e!ciently apply symbolic execution in increments based on versions of code. Our technique is based entirely on dynamic analysis and patches completely automated test suites based on the code changes. Our key insight is that we can eliminate constraint solving for unchanged code by checking constraints using the test suite of a previous version. Checking constraints is orders of magnitude faster than solving them. This is in contrast to previous techniques that rely on inexact static analysis or cache of previously solved constraints. Our technique identifies ranges of paths, each bounded by two concrete tests from the previous test suite. Exploring these path ranges covers all paths a↵ected by code changes up to a given depth bound. Our experiments show that incremental symbolic execution based on dynamic analysis is an order of magnitude faster than running complete standard symbolic execution on the new version of code."
		}, 
		{
		    "Title": "Program Analysis for Secure Big Data Processing",
		    "Type": "Technical",
		    "Key": "p277",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Program Analysis for Secure Big Data Processing",
		    "PersonsString": "Julian James Stephen, Savvas Savvides, Russell Seidel, Patrick Eugster",
		    "Authors": ["Julian James Stephen", "Savvas Savvides", "Russell Seidel", "Patrick Eugster"],
		    "Affiliations": ["Purdue University", "Purdue University", "Purdue University", "Purdue University"],
		    "AffiliationsString": "Purdue University",
		    "Abstract": "The ubiquitous nature of computers is driving a massive increase in the amount of data generated by humans and machines. Two natural consequences of this are the increased efforts to a. derive meaningful information from accumulated data and b. ensure that data is not used for unintended purposes. In the direction of analyzing massive amounts of data (a.), tools like MapReduce, Spark, Dryad and higherlevel scripting languages like Pig Latin and DryadLINQ have significantly improved corresponding tasks for software developers. The second, but equally important aspect of ensuring confidentiality (b.), has seen little support emerge for programmers: while advances in cryptographic techniques allow us to process directly on encrypted data, programmerfriendly and efficient ways of programming such data analysis jobs are still missing. This paper presents novel data flow analyses and program transformations for Pig Latin, that automatically enable the execution of corresponding scripts on encrypted data. We avoid fully homomorphic encryption because of its prohibitively high cost; instead, in some cases, we rely on a minimal set of operations performed by the client. We present the algorithms used for this translation, and empirically demonstrate the practical performance of our approach as well as improvements for programmers in terms of the effort required to preserve data confidentiality."
		}, 
		{
		    "Title": "Multi-Objective Optimization in Rule-Based Design Space Exploration",
		    "Type": "Technical",
		    "Key": "p289",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Multi-Objective Optimization in Rule-Based Design Space Exploration",
		    "PersonsString": "Hani Abdeen, Daniel Varro, Houari Sahraoui, Andras Szabolcs Nagy, Abel Hegedus, Akos Horvath, Csaba Debreceni",
		    "Authors": ["Hani Abdeen", "Daniel Varro", "Houari Sahraoui", "Andras Szabolcs Nagy", "Abel Hegedus", "Akos Horvath", "Csaba Debreceni"],
		    "Affiliations": ["Universite de Montreal", "Budapest University of Technology and Economics", "Universite de Montreal", "Budapest University of Technology and Economics", "Budapest University of Technology and Economics", "Budapest University of Technology and Economics", "Budapest University of Technology and Economics"],
		    "AffiliationsString": "Universite de Montreal, Budapest University of Technology and Economics",
		    "Abstract": "Design space exploration (DSE) aims to find optimal design candidates of a domain with respect to different objectives where design candidates are constrained by complex structural and numerical restrictions. Rule-based DSE [10,14,18] aims to find such candidates that are reachable from an initial model by applying a sequence of exploration rules. Solving a rule-based DSE problem is a difficult challenge due to the inherently dynamic nature of the problem. In the current paper, we propose to integrate multi-objective optimization techniques by using Non-dominated Sorting Genetic Algorithms (NSGA) to drive rule-based design space exploration. For this purpose, finite populations of the most promising design candidates are maintained wrt. different optimization criteria. In our context, individuals of a generation are defined as a sequence of rule applications leading from an initial model to a candidate model. Populations evolve by mutation and crossover operations which manipulate (change, extend or combine) rule execution sequences to yield new individuals. Our multi-objective optimization approach for rule-based DSE is domain independent and it is automated by tooling built on the Eclipse framework. The main added value is to seamlessly lift multi-objective optimization techniques to the exploration process preserving both domain independence and a high-level of abstraction. Design candidates will still be represented as models and the evolution of these models as rule execution sequences. Constraints are captured by model queries while objectives can be derived both from models or rule applications"
		}, 
		{
		    "Title": "Understanding Performance Stairs: Elucidating Heuristics",
		    "Type": "Technical",
		    "Key": "p301",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Understanding Performance Stairs: Elucidating Heuristics",
		    "PersonsString": "Bryan Marker, Don Batory, Robert van de Geijn",
		    "Authors": ["Bryan Marker", "Don Batory", "Robert van de Geijn"],
		    "Affiliations": ["The University of Texas at Austin", "The University of Texas at Austin", "The University of Texas at Austin"],
		    "AffiliationsString": "The University of Texas at Austin",
		    "Abstract": "How do experts navigate the huge space of implementations for a given specification to find an efficient choice with minimal searching? Answer: They use “heuristics” – rules of thumb that are more street wisdom than scientific fact. We provide a scientific justification for Dense Linear Algebra (DLA) heuristics by showing that only a few decisions (out of many possible) are critical to performance; once these decisions are made, the die is cast and only relatively minor performance improvements are possible. The (implementation × performance) space of DLA is stair-stepped. Each stair is a set of implementations with very similar performance and (surprisingly) share key design decision(s). High-performance stairs align with heuristics that prescribe certain decisions in a particular context. Stairs also tell us how to tailor the search engine of a DLA code generator to reduce the time it needs to find implementations that are as good or better than those crafted by experts."
		}, 
		{
		    "Title": "Fine-Grained and Accurate Source Code Differencing",
		    "Type": "Technical",
		    "Key": "p313",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Fine-Grained and Accurate Source Code Differencing",
		    "PersonsString": "Jean-Remy Falleri, Floreal Morandat, Xavier Blanc, Matias Martinez, Martin Montperrus",
		    "Authors": ["Jean-Remy Falleri", "Floreal Morandat", "Xavier Blanc", "Matias Martinez", "Martin Montperrus"],
		    "Affiliations": ["Universite Bordeaux", "Universite Bordeaux", "Universite Bordeaux", "INRIA & University of Lille", "INRIA & University of Lille"],
		    "AffiliationsString": "Universite Bordeaux, INRIA & University of Lille",
		    "Abstract": "At the heart of software evolution is a sequence of edit actions, called an edit script, made to a source code file. Since software systems are stored version by version, the edit script has to be computed from these versions, which is known as a complex task. Existing approaches usually compute edit scripts at the text granularity with only add line and delete line actions. However, inferring syntactic changes from such an edit script is hard. Since moving code is a frequent action performed when editing code, it should also be taken into account. In this paper, we tackle these issues by introducing an algorithm computing edit scripts at the abstract syntax tree granularity including move actions. Our objective is to compute edit scripts that are short and close to the original developer intent. Our algorithm is implemented in a freely-available and extensible tool that has been intensively validated."
		}, 
		{
		    "Title": "Combining Rule-based and Information Retrieval Techniques to Assign Software Change Requests",
		    "Type": "New Idea",
		    "Key": "p325",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Combining Rule-based and Information Retrieval Techniques to Assign Software Change Requests",
		    "PersonsString": "Yguarata Cerqueira Cavalcanti, Ivan do Carmo Machado, Paulo A. da Mota S. Neto, Eduardo Santana de Almeida, Silvio Romero de Lemos Meira",
		    "Authors": ["Yguarata Cerqueira Cavalcanti", "Ivan do Carmo Machado", "Paulo A. da Mota S. Neto", "Eduardo Santana de Almeida", "Silvio Romero de Lemos Meira"],
		    "Affiliations": ["Brazilian Federal Data Processing Service & Federal University of Pernambuco", "Federal University of Bahia", "Federal University of Pernambuco", "Federal University of Bahia", "Federal University of Pernambuco"],
		    "AffiliationsString": "Federal University of Pernambuco, Federal University of Bahia",
		    "Abstract": "Change Requests (CRs) are key elements to software maintenance and evolution. Finding the appropriate developer to a CR is crucial for obtaining the lowest, economically feasible, fixing time. Nevertheless, assigning CRs is a laborintensive and time consuming task. In this paper, we present a semi-automated CR assignment approach which combines rule-based and information retrieval techniques. The approach emphasizes the use of contextual information, essential to effective assignments, and puts the development team in control of the assignment rules, toward making its adoption easier. Results of an empirical evaluation showed that the approach is up to 46,5% more accurate than approaches which rely solely on machine learning techniques."
		}, 
		{
		    "Title": "Recommendation System for Software Refactoring Using Innovization and Interactive Dynamic Optimization",
		    "Type": "New Idea",
		    "Key": "p331",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Recommendation System for Software Refactoring Using Innovization and Interactive Dynamic Optimization",
		    "PersonsString": "Wiem Mkaouer, Marouane Kessentini, Slim Bechikh, Kalyanmoy Deb, Mel O Cinneide",
		    "Authors": ["Wiem Mkaouer", "Marouane Kessentini", "Slim Bechikh", "Kalyanmoy Deb", "Mel O Cinneide"],
		    "Affiliations": ["University of Michigan", "University of Michigan", "University of Michigan", "Michigan State University", "University College Dublin"],
		    "AffiliationsString": "University of Michigan, Michigan State University, University College Dublin",
		    "Abstract": "We propose a novel recommendation tool for software refactoring  that dynamically adapts and suggests refactorings to developers  interactively based on their feedback and introduced code  changes. Our approach starts by finding upfront a set of nondominated refactoring solutions using NSGA-II to improve  software quality, reduce the number of refactorings and increase  semantic coherence. The generated non-dominated refactoring  solutions are analyzed using our innovization component to  extract some interesting common features between them. Based  on this analysis, the suggested refactorings are ranked and  suggested to the developer one by one. The developer can  approve, modify or reject each suggested refactoring, and this  feedback is used to update the ranking of the suggested  refactorings. After a number of introduced code changes, a local  search is performed to update and adapt the set of refactoring  solutions suggested by NSGA-II. Weevaluated this tool on four  large open source systems and one industrial project provided by  our partner. Statistical analysisof our experiments over 31 runs  shows that the dynamic refactoring approach performed  significantly better than three other search-based refactoring  techniques, manual refactorings,  and one refactoring tool not  based on heuristic search."
		}, 
		{
		    "Title": "Recommending Refactorings Based on Team Co-Maintenance Patterns",
		    "Type": "New Idea",
		    "Key": "p337",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Recommending Refactorings Based on Team Co-Maintenance Patterns",
		    "PersonsString": "Gabriele Bavota, Sebastiano Panichella, Nikolaos Tsantalis, Massimiliano Di Penta, Rocco Oliveto, Gerardo Canfora",
		    "Authors": ["Gabriele Bavota", "Sebastiano Panichella", "Nikolaos Tsantalis", "Massimiliano Di Penta", "Rocco Oliveto", "Gerardo Canfora"],
		    "Affiliations": ["University of Sannio", "University of Sannio", "Concordia University", "University of Sannio", "University of Molise", "University of Sannio"],
		    "AffiliationsString": "University of Sannio, Concordia University, University of Molise",
		    "Abstract": "Refactoring aims at restructuring existing source code when undisciplined development activities have deteriorated its comprehensibility and maintainability. There exist various approaches for suggesting refactoring opportunities, based on different sources of information, e.g., structural, semantic, and historical. In this paper we claim that an additional source of information for identifying refactoring opportunities, sometimes orthogonal to the ones mentioned above, is team development activity. When the activity of a team working on common modules is not aligned with the current design structure of a system, it would be possible to recommend appropriate refactoring operations—e.g., extract class/method/package—to adjust the design according to the teams’ activity patterns. Results of a preliminary study—conducted in the context of extract class refactoring— show the feasibility of the approach, and also suggest that this new refactoring dimension can be complemented with others to build better refactoring recommendation tools."
		}, 
		{
		    "Title": "DIVER: Precise Dynamic Impact Analysis Using Dependence-Based Trace Pruning",
		    "Type": "New Idea",
		    "Key": "p343",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=DIVER: Precise Dynamic Impact Analysis Using Dependence-Based Trace Pruning",
		    "PersonsString": "Haipeng Cai, Raul Santelices",
		    "Authors": ["Haipeng Cai", "Raul Santelices"],
		    "Affiliations": ["University of Notre Dame", "University of Notre Dame"],
		    "AffiliationsString": "University of Notre Dame",
		    "Abstract": "Impact analysis determines the effects that the behavior of program entities, or changes to them, can have on the rest of the system. Dynamic impact analysis is one practical form that computes smaller impact sets than static alternatives for concrete sets of executions. However, existing dynamic approaches can still produce impact sets that are too large to be useful. To address this problem, we present a novel dynamic impact analysis called D IVER that exploits static dependencies to identify runtime impacts much more precisely without reducing safety and at acceptable costs. Our preliminary empirical evaluation shows that DIVER can significantly increase the precision of dynamic impact analysis."
		}, 
		{
		    "Title": "Automating Regression Verification",
		    "Type": "Technical",
		    "Key": "p349",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Automating Regression Verification",
		    "PersonsString": "Dennis Felsing, Sarah Grebing, Vladimir Klebanov, Philipp Rummer, Mattias Ulbrich",
		    "Authors": ["Dennis Felsing", "Sarah Grebing", "Vladimir Klebanov", "Philipp Rummer", "Mattias Ulbrich"],
		    "Affiliations": ["Karlsruhe Institute of Technology", "Karlsruhe Institute of Technology", "Karlsruhe Institute of Technology", "Uppsala University", "Karlsruhe Institute of Technology"],
		    "AffiliationsString": "Karlsruhe Institute of Technology, Uppsala University",
		    "Abstract": "Regression verification is an approach complementing regression testing with formal verification. The goal is to formally prove that two versions of a program behave either equally or differently in a precisely specified way. In this paper, we present a novel automatic approach for regression verification that reduces the equivalence of two related imperative integer programs to Horn constraints over uninterpreted predicates. Subsequently, state-of-the-art SMT solvers are used to solve the constraints. We have implemented the approach, and our experiments show non-trivial integer programs that can now be proved equivalent without further user input."
		}, 
		{
		    "Title": "An Empirical Evaluation and Comparison of Manual and Automated Test Selection",
		    "Type": "Technical",
		    "Key": "p361",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=An Empirical Evaluation and Comparison of Manual and Automated Test Selection",
		    "PersonsString": "Milos Gligoric, Stas Negara, Owolabi Legunsen, Darko Marinov",
		    "Authors": ["Milos Gligoric", "Stas Negara", "Owolabi Legunsen", "Darko Marinov"],
		    "Affiliations": ["University of Illinois at Urbana-Champaign", "University of Illinois at Urbana-Champaign", "University of Illinois at Urbana-Champaign", "University of Illinois at Urbana-Champaign"],
		    "AffiliationsString": "University of Illinois at Urbana-Champaign",
		    "Abstract": "Regression test selection speeds up regression testing by rerunning only the tests that can be affected by the most recent code changes. Much progress has been made on research in automated test selection over the last three decades, but it has not translated into practical tools that are widely adopted. Therefore, developers either re-run all tests after each change or perform manual test selection. Re-running all tests is expensive, while manual test selection is tedious and error-prone. Despite such a big trade-off, no study assessed how developers perform manual test selection and compared it to automated test selection. This paper reports on our study of manual test selection in practice and our comparison of manual and automated test selection. We are the first to conduct a study that (1) analyzes data from manual test selection, collected in real time from 14 developers during a three-month study and (2) compares manual test selection with an automated state-of-the-research test-selection tool for 450 test sessions. Almost all developers in our study performed manual test selection, and they did so in mostly ad-hoc ways. Comparing manual and automated test selection, we found the two approaches to select different tests in each and every one of the 450 test sessions investigated. Manual selection chose more tests than automated selection 73% of the time (potentially wasting time) and chose fewer tests 27% of the time (potentially missing bugs). These results show the need for better automated test-selection techniques that integrate well with developers’ programming environments."
		}, 
		{
		    "Title": "Taming Test Inputs for Separation Assurance",
		    "Type": "Experience",
		    "Key": "p373",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Taming Test Inputs for Separation Assurance",
		    "PersonsString": "Dimitra Giannakopoulou, Falk Howar, Malte Isberner, Todd Lauderdale, Zvonimir Rakamaric, Vishwanath Raman",
		    "Authors": ["Dimitra Giannakopoulou", "Falk Howar", "Malte Isberner", "Todd Lauderdale", "Zvonimir Rakamaric", "Vishwanath Raman"],
		    "Affiliations": ["NASA Ames Research Center", "Carnegie Mellon University Silicon Valley", "TU Dortmund", "NASA Ames Research Center", "University of Utah", "FireEye, Inc."],
		    "AffiliationsString": "NASA Ames Research Center, Carnegie Mellon University Silicon Valley, TU Dortmund, University of Utah, FireEye, Inc.",
		    "Abstract": "The Next Generation Air Transportation System (NextGen) advocates the use of innovative algorithms and software to address the increasing load on air-traffic control. AutoResolver [12] is a large, complex NextGen component that provides separation assurance between multiple airplanes up to 20 minutes ahead of time. Our work targets the development of a light-weight, automated testing environment for AutoResolver. The input space of AutoResolver consists of airplane trajectories, each trajectory being a sequence of hundreds of points in the three-dimensional space. Generating meaningful test cases for AutoResolver that cover its behavioral space to a satisfactory degree is a major challenge. We discuss how we tamed this input space to make it amenable to test case generation techniques, as well as how we developed and validated an extensible testing environment around AutoResolver."
		}, 
		{
		    "Title": "Transferring an Automated Test Generation Tool to Practice: From Pex to Fakes and Code Digger",
		    "Type": "Experience",
		    "Key": "p385",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Transferring an Automated Test Generation Tool to Practice: From Pex to Fakes and Code Digger",
		    "PersonsString": "Nikolai Tillmann, Jonathan de Halleux, Tao Xie",
		    "Authors": ["Nikolai Tillmann", "Jonathan de Halleux", "Tao Xie"],
		    "Affiliations": ["Microsoft Research", "Microsoft Research", "University of Illinois at Urbana-Champaign"],
		    "AffiliationsString": "Microsoft Research, University of Illinois at Urbana-Champaign",
		    "Abstract": "Producing industry impacts has been an important, yet challenging task for the research community. In this paper, we report experiences on successful technology transfer of Pex and its relatives (tools derived from or associated with Pex) from Microsoft Research and lessons learned from more than eight years of research efforts by the Pex team in collaboration with academia. Moles, a tool associated with Pex, was shipped as Fakes with Visual Studio since August 2012, benefiting a huge user base of Visual Studio around the world. The number of download counts of Pex and its lightweight version called Code Digger has reached tens of thousands within one or two years. Pex4Fun (derived from Pex), an educational gaming website released since June 2010, has achieved high educational impacts, reflected by the number of clicks of the “Ask Pex!” button (indicating the attempts made by users to solve games in Pex4Fun) as over 1.5 million till July 2014. Evolved from Pex4Fun, the Code Hunt website has been used in a very large programming competition. In this paper, we discuss the technology background, tool overview, impacts, project timeline, and lessons learned from the project. We hope that our reported experiences can inspire more high-impact technology-transfer research from the research community."
		}, 
		{
		    "Title": "Angels and Monsters: An Empirical Investigation of Potential Test Effectiveness and Efficiency Improvement from Strongly Subsuming Higher Order Mutation",
		    "Type": "Technical",
		    "Key": "p397",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Angels and Monsters: An Empirical Investigation of Potential Test Effectiveness and Efficiency Improvement from Strongly Subsuming Higher Order Mutation",
		    "PersonsString": "Mark Harman, Yue Jia, Pedro Reales Mateo, Macario Polo",
		    "Authors": ["Mark Harman", "Yue Jia", "Pedro Reales Mateo", "Macario Polo"],
		    "Affiliations": ["University College London", "University College London", "University of Castilla-La Mancha", "University of Castilla-La Mancha"],
		    "AffiliationsString": "University College London, University of Castilla-La Mancha",
		    "Abstract": "We study the simultaneous test effectiveness and efficiency improvement achievable by Strongly Subsuming Higher Order Mutants (SSHOMs), constructed from 15,792 first order mutants in four Java programs. Using SSHOMs in place of the first order mutants they subsume yielded a 35%-45% reduction in the number of mutants required, while simultaneously improving test efficiency by 15% and effectiveness by between 5.6% and 12%. Trivial first order faults often combine to form exceptionally non-trivial higher order faults; apparently innocuous angels can combine to breed monsters. Nevertheless, these same monsters can be recruited to improve automated test effectiveness and efficiency."
		}, 
		{
		    "Title": "Scaling Exact Multi-Objective Combinatorial Optimization by Parallelization",
		    "Type": "Technical",
		    "Key": "p409",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Scaling Exact Multi-Objective Combinatorial Optimization by Parallelization",
		    "PersonsString": "Jianmei Guo, Edward Zulkoski, Rafael Olaechea, Derek Rayside, Krzysztof Czarnecki, Sven Apel, Joanne M. Atlee",
		    "Authors": ["Jianmei Guo", "Edward Zulkoski", "Rafael Olaechea", "Derek Rayside", "Krzysztof Czarnecki", "Sven Apel", "Joanne M. Atlee"],
		    "Affiliations": ["University of Waterloo", "University of Waterloo", "University of Waterloo", "University of Waterloo", "University of Waterloo", "University of Passau", "University of Waterloo"],
		    "AffiliationsString": "University of Waterloo, University of Passau",
		    "Abstract": "Multi-Objective Combinatorial Optimization (MOCO) is fundamental to the development and optimization of software systems. We propose five novel parallel algorithms for solving MOCO problems exactly and efficiently. Our algorithms rely on off-the-shelf solvers to search for exact Pareto-optimal solutions, and they parallelize the search via collaborative communication, divide-and-conquer, or both. We demonstrate the feasibility and performance of our algorithms by experiments on three case studies of software-system designs. A key finding is that one algorithm, which we call FS-GIA, achieves substantial (even super-linear) speedups that scale well up to 64 cores. Furthermore, we analyze the performance bottlenecks and opportunities of our parallel algorithms, which facilitates further research on exact, parallel MOCO."
		}, 
		{
		    "Title": "42 Variability Bugs in the Linux Kernel: A Qualitative Analysis",
		    "Type": "Technical",
		    "Key": "p421",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=42 Variability Bugs in the Linux Kernel: A Qualitative Analysis",
		    "PersonsString": "Iago Abal, Claus Brabrand, Andrzej Wasowski",
		    "Authors": ["Iago Abal", "Claus Brabrand", "Andrzej Wasowski"],
		    "Affiliations": ["IT University of Copenhagen", "IT University of Copenhagen", "IT University of Copenhagen"],
		    "AffiliationsString": "IT University of Copenhagen",
		    "Abstract": "Feature-sensitive verification pursues effective analysis of the exponentially many variants of a program family. However, researchers lack examples of concrete bugs induced by variability, occurring in real large-scale systems. Such a collection of bugs is a requirement for goal-oriented research, serving to evaluate tool implementations of feature-sensitive analyses by testing them on real bugs. We present a qualitative study of 42 variability bugs collected from bug-fixing commits to the Linux kernel repository. We analyze each of the bugs, and record the results in a database. In addition, we provide self-contained simplified C99 versions of the bugs, facilitating understanding and tool evaluation. Our study provides insights into the nature and occurrence of variability bugs in a large C software system, and shows in what ways variability affects and increases the complexity of software bugs."
		}, 
		{
		    "Title": "Automating the Formalization of Product Comparison Matrices",
		    "Type": "Technical",
		    "Key": "p433",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Automating the Formalization of Product Comparison Matrices",
		    "PersonsString": "Guillaume Becan, Nicolas Sannier, Mathieu Acher, Olivier Barais, Arnaud Blouin, Benoit Baudry",
		    "Authors": ["Guillaume Becan", "Nicolas Sannier", "Mathieu Acher", "Olivier Barais", "Arnaud Blouin", "Benoit Baudry"],
		    "Affiliations": ["Inria - IRISA", "Inria - IRISA", "Inria - IRISA", "Inria - IRISA", "Inria - IRISA", "Inria - IRISA"],
		    "AffiliationsString": "Inria - IRISA",
		    "Abstract": "Product Comparison Matrices (PCMs) form a rich source of data for comparing a set of related and competing products over numerous features. Despite their apparent simplicity, PCMs contain heterogeneous, ambiguous, uncontrolled and partial information that hinders their efficient exploitations. In this paper, we formalize PCMs through modelbased automated techniques and develop additional tooling to support the edition and re-engineering of PCMs. 20 participants used our editor to evaluate the PCM metamodel and automated transformations. The results over 75 PCMs from Wikipedia show that (1) a significant proportion of the formalization of PCMs can be automated – 93.11% of the 30061 cells are correctly formalized; (2) the rest of the formalization can be realized by using the editor and mapping cells to existing concepts of the metamodel. The automated approach opens avenues for engaging a community in the mining, re-engineering, edition, and exploitation of PCMs that now abound on the Internet."
		}, 
		{
		    "Title": "Tracking Load-time Configuration Options",
		    "Type": "Technical",
		    "Key": "p445",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Tracking Load-time Configuration Options",
		    "PersonsString": "Max Lillack, Christian Kastner, Eric Bodden",
		    "Authors": ["Max Lillack", "Christian Kastner", "Eric Bodden"],
		    "Affiliations": ["University of Leipzig", "Carnegie Mellon University", "Fraunhofer SIT & TU Darmstadt"],
		    "AffiliationsString": "University of Leipzig, Carnegie Mellon University, Fraunhofer SIT & TU Darmstadt",
		    "Abstract": "Highly-configurable software systems are pervasive, although configuration options and their interactions raise complexity of the program and increase maintenance effort. Especially load-time configuration options, such as parameters from command-line options or configuration files, are used with standard programming constructs such as variables and if statements intermixed with the program’s implementation; manually tracking configuration options from the time they are loaded to the point where they may influence controlflow decisions is tedious and error prone. We design and implement Lotrack, an extended static taint analysis to automatically track configuration options. Lotrack derives a configuration map that explains for each code fragment under which configurations it may be executed. An evaluation on Android applications shows that Lotrack yields high accuracy with reasonable performance. We use Lotrack to empirically characterize how much of the implementation of Android apps depends on the platform’s configuration options or interactions of these options."
		}, 
		{
		    "Title": "Statistical Learning Approach for Mining API Usage Mappings for Code Migration",
		    "Type": "Technical",
		    "Key": "p457",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Statistical Learning Approach for Mining API Usage Mappings for Code Migration",
		    "PersonsString": "Anh Tuan Nguyen, Hoan Anh Nguyen, Tung Thanh Nguyen, Tien N. Nguyen",
		    "Authors": ["Anh Tuan Nguyen", "Hoan Anh Nguyen", "Tung Thanh Nguyen", "Tien N. Nguyen"],
		    "Affiliations": ["Iowa State University", "Iowa State University", "Utah State University", "Iowa State University"],
		    "AffiliationsString": "Iowa State University, Utah State University",
		    "Abstract": "The same software product nowadays could appear in multiple platforms and devices. To address business needs, software companies develop a software product in a programming language and then migrate it to another one. To support that process, semi-automatic migration tools have been proposed. However, they require users to manually define the mappings between the respective APIs of the libraries used in two languages. To reduce such manual effort, we introduce StaMiner, a novel data-driven approach that statistically learns the mappings between APIs from the corpus of the corresponding client code of the APIs in two languages Java and C#. Instead of using heuristics on the textual or structural similarity between APIs in two languages to map API methods and classes as in existing mining approaches, StaMiner is based on a statistical model that learns the mappings in such a corpus and provides mappings for APIs with all possible arities. Our empirical evaluation on several projects shows that StaMiner can detect API usage mappings with higher accuracy than a state-of-the-art approach. With the resulting API mappings mined by StaMiner, Java2CSharp, an existing migration tool, could achieve a higher level of accuracy."
		}, 
		{
		    "Title": "Compatibility Testing Using Patterns-based Trace Comparison",
		    "Type": "Experience",
		    "Key": "p469",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Compatibility Testing Using Patterns-based Trace Comparison",
		    "PersonsString": "Venkatesh-Prasad Ranganath, Pradip Vallathol, Pankaj Gupta",
		    "Authors": ["Venkatesh-Prasad Ranganath", "Pradip Vallathol", "Pankaj Gupta"],
		    "Affiliations": ["Kansas State University", "University of Wisconsin-Madison", "Microsoft Corporation"],
		    "AffiliationsString": "Kansas State University, University of Wisconsin-Madison, Microsoft Corporation",
		    "Abstract": "When composing a system from components, we need to ensure that the components are compatible. This is commonly achieved by components interacting only via published and well-defined interfaces. Even so, it is possible for client components to learn about and depend on unpublished yet observable behaviors of components. To identify and support these situations, compatibility testing should uncover such observable behaviors. As a solution, we propose a patterns-based approach to test compatibility between programs in terms of their observable behaviors. The approach compares traces of behaviors observed at identical published interfaces of programs and detects incompatibilities stemming from both the presence of previously unobserved behaviors and the absence of previously observed behaviors. The traces are compared by transforming them into sets of structural and binary linear temporal patterns. During Windows 8 development cycle, we applied this approach to test compatibility between USB 2.0 and USB 3.0 bus drivers. Upon testing 14 USB 2.0 devices that were functioning without errors with both USB bus drivers, we uncovered 25 previously unknown incompatibilities between the bus drivers."
		}, 
		{
		    "Title": "Personas in the Middle: Automated Support for Creating Personas as Focal Points in Feature Gathering Forums",
		    "Type": "New Idea",
		    "Key": "p479",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Personas in the Middle: Automated Support for Creating Personas as Focal Points in Feature Gathering Forums",
		    "PersonsString": "Mona Rahimi, Jane Cleland-Huang",
		    "Authors": ["Mona Rahimi", "Jane Cleland-Huang"],
		    "Affiliations": ["DePaul University", "DePaul University"],
		    "AffiliationsString": "DePaul University",
		    "Abstract": "Many software systems utilize forums to allow a broad set of stakeholders to request features. However the resulting mass of ideas and comments can make prioritization and management of feature requests challenging. In this paper we propose a novel approach for partially automating the creation of personas from a set of feature requests in open forums. Our approach utilizes topic clustering, classification, and association rules to identify meaningful groupings of feature requests and then uses them to guide the construction of personas. Once created, these personas are leveraged to coordinate feature requests, track changes, and to provide stakeholder communication mechanisms. We illustrate our approach with examples taken from the health-insurance domain and then evaluate it against feature requests in the SugarCRM project."
		}, 
		{
		    "Title": "Constructing Adaptive Configuration Dialogs Using Crowd Data",
		    "Type": "New Idea",
		    "Key": "p485",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Constructing Adaptive Configuration Dialogs Using Crowd Data",
		    "PersonsString": "Saeideh Hamidi, Periklis Andritsos, Sotirios Liaskos",
		    "Authors": ["Saeideh Hamidi", "Periklis Andritsos", "Sotirios Liaskos"],
		    "Affiliations": ["York University", "University of Lausanne", "York University"],
		    "AffiliationsString": "York University, University of Lausanne",
		    "Abstract": "As modern software systems grow in size and complexity so do their configuration possibilities. Users are easy to be confused and overwhelmed by the amount of choices they need to make in order to fit their systems to their exact needs. We propose a method to construct adaptive configuration elicitation dialogs through utilizing crowd wisdom. A set of configuration preferences in the form of association rules is first mined from a crowd configuration data set. Possible configuration elicitation dialogs are then modeled through a Markov Decision Process (MDP). Association rules are used to inform the model about configuration decisions that can be automatically inferred from knowledge already elicited earlier in the dialog. This way, an MDP solver can search for elicitation strategies which maximize the expected amount of automated decisions, reducing thereby elicitation effort and increasing user confidence of the result. The method is applied to the privacy configuration of Facebook."
		}, 
		{
		    "Title": "Validating Ajax Applications Using a Delay-Based Mutation Technique",
		    "Type": "Technical",
		    "Key": "p491",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Validating Ajax Applications Using a Delay-Based Mutation Technique",
		    "PersonsString": "Yuta Maezawa, Kazuki Nishiura, Shinichi Honiden, Hironori Washizaki",
		    "Authors": ["Yuta Maezawa", "Kazuki Nishiura", "Shinichi Honiden", "Hironori Washizaki"],
		    "Affiliations": ["The University of Tokyo", "The University of Tokyo", "The University of Tokyo", "Waseda University"],
		    "AffiliationsString": "The University of Tokyo, Waseda University",
		    "Abstract": "The challenge of validating Asynchronous JavaScript and XML (Ajax) applications lies in actual errors exposed in a user environment. Several studies have proposed effective and efficient testing techniques to identify executable faults. However, the applications might have faults that are not executed during testing, but might cause actual errors in a user environment. Although we have investigated static methods for finding “potential faults” that seem to cause actual errors if executed, developers need to confirm whether or not the potential faults are actually executable. Herein, we propose a mutation-based testing method implemented in a tool called JSPreventer. Even if the potential faults are not easily executable in a given environment, our method mutates the applications until they are executable using two delay-based mutation operators to manipulate the timing of the applications handling interactions. Thus, JSPreventer provides executable evidences of the not-easily-executable faults for developers, if it reveals actual errors by testing the mutated applications. We applied our method to real-world applications and found actual errors that developers could debug to improve their reliability. Therefore, JSPreventer can help developers validate reliable real-world Ajax applications."
		}, 
		{
		    "Title": "Static, Lightweight Includes Resolution for PHP",
		    "Type": "Technical",
		    "Key": "p503",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Static, Lightweight Includes Resolution for PHP",
		    "PersonsString": "Mark Hills, Paul Klint, Jurgen J. Vinju",
		    "Authors": ["Mark Hills", "Paul Klint", "Jurgen J. Vinju"],
		    "Affiliations": ["East Carolina University", "Centrum Wiskunde and Information", "Centrum Wiskunde and Information & INRIA Lille Nord Europe"],
		    "AffiliationsString": "East Carolina University, Centrum Wiskunde and Information, Centrum Wiskunde and Information & INRIA Lille Nord Europe",
		    "Abstract": "Dynamic languages include a number of features that are challenging to model properly in static analysis tools. In PHP, one of these features is theincludeexpression, where an arbitrary expression provides the path of the file to include at runtime. In this paper we present two complementary analyses for statically resolving PHP includes, one that works at the level of individual PHP files, and one targeting PHP programs possibly consisting of multiple scripts. To evaluate the effectiveness of these analyses we have applied the first to a corpus of 20 open-source systems, totaling more than 4.5 million lines of PHP, and the second to a number of programs from a subset of these systems. Our results show that, in many cases, includes can be resolved to a specific file or a small subset of possible files, enabling better IDE features and more advanced program analysis tools for PHP."
		}, 
		{
		    "Title": "Information Flows as a Permission Mechanism",
		    "Type": "Technical",
		    "Key": "p515",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Information Flows as a Permission Mechanism",
		    "PersonsString": "Feng Shen, Namita Vishnubhotla, Chirag Todarka, Mohit Arora, Babu Dhandapani, Eric John Lehner, Steven Y. Ko, Lukasz Ziarek",
		    "Authors": ["Feng Shen", "Namita Vishnubhotla", "Chirag Todarka", "Mohit Arora", "Babu Dhandapani", "Eric John Lehner", "Steven Y. Ko", "Lukasz Ziarek"],
		    "Affiliations": ["University at Buffalo, The State University of New York", "University at Buffalo, The State University of New York", "University at Buffalo, The State University of New \n          York", "University at Buffalo, The State University of New York", "University at Buffalo, The State University of New \n          York", "University at Buffalo, The State University of \n          New York", "University at Buffalo, The State University of New \n          York", "University at Buffalo, The State University of New \n          York"],
		    "AffiliationsString": "University at Buffalo, The State University of New York, University at Buffalo, The State University of New York, University at Buffalo, The State University of New \n          York, University at Buffalo, The State University of \n          New York",
		    "Abstract": "This paper proposes Flow Permissions, an extension to the Android permission mechanism. Unlike the existing permission mechanism, our permission mechanism contains semantic information based on information flows. Flow Permissions allow users to examine and grant per-app information flows within an application (e.g., a permission for reading the phone number and sending it over the network) as well as cross-app information flows across multiple applications (e.g., a permission for reading the phone number and sending it to another application already installed on the user’s phone). Our goal with Flow Permissions is to provide visibility into the holistic behavior of the applications installed on a user’s phone. In order to support Flow Permissions on Android, we have developed a static analysis engine that detects flows within an Android application. We have also modified Android’s existing permission mechanism and installation procedure to support Flow Permissions. We evaluate our prototype with 2,992 popular applications and 1,047 malicious applications and show that our design is practical and effective in deriving Flow Permissions. We validate our cross-app flow generation and installation procedure on a Galaxy Nexus smartphone."
		}, 
		{
		    "Title": "Improving the Accuracy of Oracle Verdicts Through Automated Model Steering",
		    "Type": "Technical",
		    "Key": "p527",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Improving the Accuracy of Oracle Verdicts Through Automated Model Steering",
		    "PersonsString": "Gregory Gay, Sanjai Rayadurgam, Mats P. E. Heimdahl",
		    "Authors": ["Gregory Gay", "Sanjai Rayadurgam", "Mats P. E. Heimdahl"],
		    "Affiliations": ["University of Minnesota", "University of Minnesota", "University of Minnesota"],
		    "AffiliationsString": "University of Minnesota",
		    "Abstract": "The oracle—a judge of the correctness of the system under test (SUT)—is a major component of the testing process. Specifying test oracles is challenging for some domains, such as real-time embedded systems, where small changes in timing or sensory input may cause large behavioral differences. Models of such systems, often built for analysis and simulation, are appealing for reuse as oracles. These models, however, typically represent an idealized system, abstracting away certain issues such as non-deterministic timing behavior and sensor noise. Thus, even with the same inputs, the model’s behavior may fail to match an acceptable behavior of the SUT, leading to many false positives reported by the oracle. We propose an automated steering framework that can adjust the behavior of the model to better match the behavior of the SUT to reduce the rate of false positives. This model steering is limited by a set of constraints (defining acceptable differences in behavior) and is based on a search process attempting to minimize a dissimilarity metric. This framework allows non-deterministic, but bounded, behavior differences, while preventing future mismatches, by guiding the oracle—within limits—to match the execution of the SUT. Results show that steering significantly increases SUT-oracle conformance with minimal masking of real faults and, thus, has significant potential for reducing false positives and, consequently, development costs."
		}, 
		{
		    "Title": "Automated Domain-Specific C Verification with mbeddr",
		    "Type": "Experience",
		    "Key": "p539",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Automated Domain-Specific C Verification with mbeddr",
		    "PersonsString": "Zaur Molotnikov, Markus Volter, Daniel Ratiu",
		    "Authors": ["Zaur Molotnikov", "Markus Volter", "Daniel Ratiu"],
		    "Affiliations": ["Fortiss Institute", "independent", "Fortiss Institute"],
		    "AffiliationsString": "Fortiss Institute, independent",
		    "Abstract": "When verifying C code, two major problems must be addressed. One is the specification of the verified systems properties, the other one is the construction of the verification environment. Neither C itself, nor existing C verification tools, offer the means to efficiently specify application domain-level properties and environments for verification. These two shortcomings hamper the usability of C verification, and limit its adoption in practice. In this paper we introduce an approach that addresses both problems and results in user-friendly and practically usable C verification. The novelty of the approach is the combination of domainspecific language engineering and C verification. We apply the approach in the domain of state-based software, using mbeddr and CBMC. We validate the implementation with an example from the Pacemaker Challenge, developing a functionally verified, lightweight, and deployable cardiac pulse generator. The approach itself is domain-independent."
		}, 
		{
		    "Title": "Pattern-based Auto-completion of UML Modeling Activities",
		    "Type": "New Idea",
		    "Key": "p551",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Pattern-based Auto-completion of UML Modeling Activities",
		    "PersonsString": "Tobias Kuschke, Patrick Mader",
		    "Authors": ["Tobias Kuschke", "Patrick Mader"],
		    "Affiliations": ["Technische Universitat Ilmenau", "Technische Universitat Ilmenau"],
		    "AffiliationsString": "Technische Universitat Ilmenau",
		    "Abstract": "Auto-completion of textual inputs when using IDEs benefits software development experts and novices. Researchers demonstrated that auto-completion is beneficial for graphical modeling tasks as well. However, supporting software development by auto-completing UML modeling activities remains largely unexplored by research and unsupported by modeling tools. By matching editing operations to activity patterns, partly performed modeling activities can be recognized and automatically completed. This paper proposes an approach that computes auto-completions for partly performed modeling activities while a developer is creating or evolving UML models. Selected auto-completions can be previewed and adjusted before being executed. We claim, that this approach can improve developers’ modeling efficiency. Therefore, we assessed our approach based on a catalog of common modeling activities for structural UML models and found that effort for conducting defined modeling activities can be reduced significantly."
		}, 
		{
		    "Title": "Abstraction-aware Verifying Compiler for Yet Another MDD",
		    "Type": "New Idea",
		    "Key": "p557",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Abstraction-aware Verifying Compiler for Yet Another MDD",
		    "PersonsString": "Naoyasu Ubayashi, Di Ai, Peiyuan Li, Yu Ning Li, Shintaro Hosoai, Yasutaka Kamei",
		    "Authors": ["Naoyasu Ubayashi", "Di Ai", "Peiyuan Li", "Yu Ning Li", "Shintaro Hosoai", "Yasutaka Kamei"],
		    "Affiliations": ["Kyushu University", "Kyushu University", "Kyushu University", "Kyushu University", "Kyushu University", "Kyushu University"],
		    "AffiliationsString": "Kyushu University",
		    "Abstract": "This paper rethinks both modularity and compilation in the light of abstraction between design and implementation. We propose a new compilation approach calledabstractionaware verifying compiler, in which abstraction is the target of compilation. Both a design model and its code are inputted as the first-class software modules to the compiler."
		}, 
		{
		    "Title": "Docovery: Toward Generic Automatic Document Recovery",
		    "Type": "Technical",
		    "Key": "p563",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Docovery: Toward Generic Automatic Document Recovery",
		    "PersonsString": "Tomasz Kuchta, Cristian Cadar, Miguel Castro, Manuel Costa",
		    "Authors": ["Tomasz Kuchta", "Cristian Cadar", "Miguel Castro", "Manuel Costa"],
		    "Affiliations": ["Imperial College London", "Imperial College London", "Microsoft Research", "Microsoft Research"],
		    "AffiliationsString": "Imperial College London, Microsoft Research",
		    "Abstract": "Application crashes and errors that occur while loading a document are one of the most visible defects of consumer software. While documents become corrupted in various ways—from storage media failures to incompatibility across applications to malicious modifications—the underlying reason they fail to load in a certain application is that their contents cause the application logic to exercise an uncommon execution path which the software was not designed to handle, or which was not properly tested. We present DOCOVERY, a novel document recovery technique based on symbolic execution that makes it possible to fix broken documents without any prior knowledge of the file format. Starting from the code path executed when opening a broken document, D OCOVERY explores alternative paths that avoid the error, and makes small changes to the document in order to force the application to follow one of these alternative paths. We implemented our approach in a prototype tool based on the symbolic execution engine KLEE. We present a preliminary case study, which shows that D OCOVERY can successfully recover broken documents processed by several popular applications such as the e-mail client pine, the pagination tool pr and the binary file utilities dwarfdump and readelf."
		}, 
		{
		    "Title": "Exact and Approximate Probabilistic Symbolic Execution for Nondeterministic Programs",
		    "Type": "Technical",
		    "Key": "p575",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Exact and Approximate Probabilistic Symbolic Execution for Nondeterministic Programs",
		    "PersonsString": "Kasper Luckow, Corina S. Pasareanu, Matthew B. Dwyer, Antonio Filieri, Willem Visser",
		    "Authors": ["Kasper Luckow", "Corina S. Pasareanu", "Matthew B. Dwyer", "Antonio Filieri", "Willem Visser"],
		    "Affiliations": ["Aalborg University", "CMU/NASA Ames Research Center", "University of Nebraska", "University of Stuttgart", "University of Stellenbosch"],
		    "AffiliationsString": "Aalborg University, CMU/NASA Ames Research Center, University of Nebraska, University of Stuttgart, University of Stellenbosch",
		    "Abstract": "Probabilistic software analysis seeks to quantify the likelihood of reaching a target event under uncertain environments. Recent approaches compute probabilities of execution paths using symbolic execution, but do not support nondeterminism. Nondeterminism arises naturally when no suitable probabilistic model can capture a program behavior, e.g., for multithreading or distributed systems. In this work, we propose a technique, based on symbolic execution, to synthesize schedulers that resolve nondeterminism to maximize the probability of reaching a target event. To scale to large systems, we also introduce approximate algorithms to search for good schedulers, speeding up established random sampling and reinforcement learning results through the quantification of path probabilities based on symbolic execution. We implemented the techniques in Symbolic PathFinder and evaluated them on nondeterministic Java programs. We show that our algorithms significantly improve upon a stateof-the-art statistical model checking algorithm, originally developed for Markov Decision Processes."
		}, 
		{
		    "Title": "Derailer: Interactive Security Analysis for Web Applications",
		    "Type": "Technical",
		    "Key": "p587",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Derailer: Interactive Security Analysis for Web Applications",
		    "PersonsString": "Joseph P. Near, Daniel Jackson",
		    "Authors": ["Joseph P. Near", "Daniel Jackson"],
		    "Affiliations": ["Massachusetts Institute of Technology", "Massachusetts Institute of Technology"],
		    "AffiliationsString": "Massachusetts Institute of Technology",
		    "Abstract": "Derailer is an interactive tool for finding security bugs in web applications. Using symbolic execution, it enumerates the ways in which application data might be exposed. The user is asked to examine these exposures and classify the conditions under which they occur as security-related or not; in so doing, the user effectively constructs a specification of the application’s security policy. The tool then highlights exposures missing security checks, which tend to be security bugs. We have tested Derailer’s scalability on several large opensource Ruby on Rails applications. We have also applied it to a large number of student projects (designed with different security policies in mind), exposing a variety of security bugs that eluded human reviewers."
		}, 
		{
		    "Title": "Tracking Down Root Causes of Defects in Simulink Models",
		    "Type": "New Idea",
		    "Key": "p599",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Tracking Down Root Causes of Defects in Simulink Models",
		    "PersonsString": "Johanna Schneider",
		    "Authors": ["Johanna Schneider"],
		    "Affiliations": ["Daimler AG"],
		    "AffiliationsString": "Daimler AG",
		    "Abstract": "Being confronted with a defect in software leads to the well known task: correcting the software such that the defect does not occur anymore. Here, the location of the defect and the corresponding root cause do not have to be identical. Thus, before any correction can be done, the reviewer has to detect the root cause for the defect. In order to reduce the reviewing effort, this paper presents a method to automatically narrow down possible root causes for defects found in Simulink models. Starting at a defect location, a backward search is applied to detect all paths leading to that defect. Each path is weighted by previously determined weights depending on the block types contained in the respective path. This weighting correlates with the probability of a path containing the root cause."
		}, 
		{
		    "Title": "The Confidence in Our k-Tails",
		    "Type": "New Idea",
		    "Key": "p605",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=The Confidence in Our k-Tails",
		    "PersonsString": "Hila Cohen, Shahar Maoz",
		    "Authors": ["Hila Cohen", "Shahar Maoz"],
		    "Affiliations": ["Tel Aviv University", "Tel Aviv University"],
		    "AffiliationsString": "Tel Aviv University",
		    "Abstract": "k-Tails is a popular algorithm for extracting a candidate behavioral model from a log of execution traces. The usefulness of k-Tails depends on the quality of its input log, which may include too few traces to build a representative model, or too many traces, whose analysis is a waste of resources. Given a set of traces, how can one be confident that it includes enough, but not too many, traces? While many have used the k-Tails algorithm, no previous work has yet investigated this question. In this paper we address this question by proposing a novel notion of log completeness. Roughly, a log of traces, extracted from a given system, is k-complete, iff adding any new trace to the log will not change the resulting model kTails would build for it. Since the system and its full set of traces is unknown, we cannot know whether a given log is k-complete. However, we can estimate its k-completeness. We call this estimation k-confidence. We formalize the notion of k-confidence and implement its computation. Preliminary experiments show that k-confidence can be efficiently computed and is a highly reliable estimator for k-completeness."
		}, 
		{
		    "Title": "Localization of Concurrency Bugs Using Shared Memory Access Pairs",
		    "Type": "Technical",
		    "Key": "p611",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Localization of Concurrency Bugs Using Shared Memory Access Pairs",
		    "PersonsString": "Wenwen Wang, Zhenjiang Wang, Chenggang Wu, Pen-Chung Yew, Xipeng Shen, Xiang Yuan, Jianjun Li, Xiaobing Feng, Yong Guan",
		    "Authors": ["Wenwen Wang", "Zhenjiang Wang", "Chenggang Wu", "Pen-Chung Yew", "Xipeng Shen", "Xiang Yuan", "Jianjun Li", "Xiaobing Feng", "Yong Guan"],
		    "Affiliations": ["Chinese Academy of Sciences & University of Chinese Academy of Sciences", "Chinese Academy of Sciences", "Chinese Academy of Sciences", "University of Minnesota at Twin-Cities", "College of William and Mary", "Chinese Academy of Sciences & University of Chinese Academy of Sciences", "Chinese Academy of Sciences", "Chinese Academy of Sciences", "Capital Normal University"],
		    "AffiliationsString": "Chinese Academy of Sciences & University of Chinese Academy of Sciences, Chinese Academy of Sciences, University of Minnesota at Twin-Cities, College of William and Mary, Chinese Academy of Sciences & University of Chinese Academy of Sciences, Capital Normal University",
		    "Abstract": "We propose an effective approach to automatically localize buggy shared memory accesses that trigger concurrency bugs. Compared to existing approaches, our approach has two advantages. First, as long as enough successful runs of a concurrent program are collected, our approach can localize buggy shared memory accesses even with only one single failed run captured, as opposed to the requirement of capturing multiple failed runs in existing approaches. This is a significant advantage because it is more difficult to capture the elusive failed runs than the successful runs in practice. Second, our approach exhibits more precise bug localization results because it also captures buggy shared memory accesses in those failed runs that terminate prematurely, which are often neglected in existing approaches. Based on this proposed approach, we also implement a prototype, named Locon. Evaluation results on 16 common concurrency bugs show that all buggy shared memory accesses that trigger these bugs can be precisely localized by Locon with only one failed run captured."
		}, 
		{
		    "Title": "Towards Self-Healing Smartphone Software via Automated Patching",
		    "Type": "New Idea",
		    "Key": "p623",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Towards Self-Healing Smartphone Software via Automated Patching",
		    "PersonsString": "Tanzirul Azim, Iulian Neamtiu, Lisa Marvel",
		    "Authors": ["Tanzirul Azim", "Iulian Neamtiu", "Lisa Marvel"],
		    "Affiliations": ["University of California, Riverside", "University of California, Riverside", "US Army Research Laboratory"],
		    "AffiliationsString": "University of California, Riverside, US Army Research Laboratory",
		    "Abstract": "Frequent app bugs and low tolerance for loss of functionality create an impetus for self-healing smartphone software. We take a step towards this via on-the-fly error detection and automated patching. Specifically, we add failure detection and recovery to Android by detecting crashes and “sealing off” the crashing part of the app to avoid future crashes. In the detection stage, our system dynamically analyzes app execution to detect certain exceptional situations. In the recovery stage, we use bytecode rewriting to alter app behavior as to avoid such situations in the future. When using our implementation, apps can resume operation (albeit with limited functionality) instead of repeatedly crashing. Our approach does not require access to app source code or any system (e.g., kernel-level) modification. Experiments on several real-world, popular Android apps and bugs show that our approach manages to recover the apps from crashes effectively, timely, and without introducing overhead."
		}, 
		{
		    "Title": "Minimal Strongly Unsatisfiable Subsets of Reactive System Specifications",
		    "Type": "New Idea",
		    "Key": "p629",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Minimal Strongly Unsatisfiable Subsets of Reactive System Specifications",
		    "PersonsString": "Shigeki Hagihara, Naoki Egawa, Masaya Shimakawa, Naoki Yonezaki",
		    "Authors": ["Shigeki Hagihara", "Naoki Egawa", "Masaya Shimakawa", "Naoki Yonezaki"],
		    "Affiliations": ["Tokyo Institute of Technology", "Sony Computer Entertainment Inc.", "Tokyo Institute of Technology", "Tokyo Institute of Technology"],
		    "AffiliationsString": "Tokyo Institute of Technology, Sony Computer Entertainment Inc.",
		    "Abstract": "Verifying realizability in the specification phase is expected to reduce the development costs of safety-critical reactive systems. If a specification is not realizable, we must correct the specification. However, it is not always obvious what part of a specification should be modified. In this paper, we propose a method for obtaining the location of flaws. Rather than realizability, we use strong satisfiability, due to the fact that many practical unrealizable specifications are also strongly unsatisfiable. Using strong satisfiability, the process of analyzing realizability becomes less complex. We define minimal strongly unsatisfiable subsets (MSUSs) to locate flaws, and construct a procedure to compute them. We also show correctness properties of our method, and clarify the time complexity of our method. Furthermore, we implement the procedure, and confirm that MSUSs are computable for specifications of reactive systems at non-trivial scales."
		}, 
		{
		    "Title": "Droidmarking: Resilient Software Watermarking for Impeding Android Application Repackaging",
		    "Type": "Technical",
		    "Key": "p635",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Droidmarking: Resilient Software Watermarking for Impeding Android Application Repackaging",
		    "PersonsString": "Chuangang Ren, Kai Chen, Peng Liu",
		    "Authors": ["Chuangang Ren", "Kai Chen", "Peng Liu"],
		    "Affiliations": ["The Pennsylvania State University", "Chinese Academy of Sciences", "The Pennsylvania State University"],
		    "AffiliationsString": "The Pennsylvania State University, Chinese Academy of Sciences",
		    "Abstract": "Software plagiarism in Android markets (app repackaging) is raising serious concerns about the health of the Android ecosystem. Existing app repackaging detection techniques fall short in detection efficiency and in resilience to circumventing attacks; this allows repackaged apps to be widely propagated and causes extensive damages before being detected. To overcome these difficulties and instantly thwart app repackaging threats, we devise a new dynamic software watermarking technique - Droidmarking - for Android apps that combines the efforts of all stakeholders and achieves the following three goals: (1) copyright ownership assertion for developers, (2) real-time app repackaging detection on user devices, and (3) resilience to evading attacks. Distinct from existing watermarking techniques, the watermarks in Droidmarking are non-stealthy, which means that watermark locations are not intentionally concealed, yet still are impervious to evading attacks. This property effectively enables normal users to recover and verify watermark copyright information without requiring a confidential watermark recognizer. Droidmarking is based on a primitive called self-decrypting code (SDC). Our evaluations show that Droidmarking is a feasible and robust technique to effectively impede app repackaging with relatively small performance overhead."
		}, 
		{
		    "Title": "From Out-Place Transformation Evolution to In-Place Model Patching",
		    "Type": "New Idea",
		    "Key": "p647",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=From Out-Place Transformation Evolution to In-Place Model Patching",
		    "PersonsString": "Alexander Bergmayr, Javier Troya, Manuel Wimmer",
		    "Authors": ["Alexander Bergmayr", "Javier Troya", "Manuel Wimmer"],
		    "Affiliations": ["Vienna University of Technology", "Vienna University of Technology", "Vienna University of Technology"],
		    "AffiliationsString": "Vienna University of Technology",
		    "Abstract": "Model transformation is a key technique to automate software engineering tasks. Like any other software, transformations are not resilient to change. As changes to transformations can invalidate previously produced models, these changes need to be reflected on existing models. Currently, revised out-place transformations are re-executed entirely to achieve this co-evolution task. However, this induces an unnecessary overhead, particularly when computation-intensive transformations are marginally revised, and if existing models have undergone updates prior the re-execution, these updates get discarded in the newly produced models. To overcome this co-evolution challenge, our idea is to infer from evolved out-place transformationspatch transformationsthat propagate changes to existing models by re-executing solely the affected parts based on an in-place execution strategy. Thereby, existing models are only updated by apatchinstead of newly produced. In this paper, we present the conceptual foundation of our approach and report on its evaluation in a real-world case study."
		}, 
		{
		    "Title": "Studying Task Allocation Decisions of Novice Agile Teams with Data from Agile Project Management Tools",
		    "Type": "New Idea",
		    "Key": "p689",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Studying Task Allocation Decisions of Novice Agile Teams with Data from Agile Project Management Tools",
		    "PersonsString": "Jun Lin, Han Yu, Zhiqi Shen, Chunyan Miao",
		    "Authors": ["Jun Lin", "Han Yu", "Zhiqi Shen", "Chunyan Miao"],
		    "Affiliations": ["Nanyang Technological University & Beihang University", "Nanyang Technological University", "Nanyang Technological University", "Nanyang Technological University"],
		    "AffiliationsString": "Nanyang Technological University & Beihang University, Nanyang Technological University",
		    "Abstract": "Task allocation decisions are critical for the success of Agile teams yet not well understood. Traditional survey/interview based methods limit the scale and level of details of data collection. As agile project management (APM) tools are increasingly adopted, they offer a mechanism for unobtrusively collecting behavior data to support research. In this paper, we demonstrate the advantage of APM tool based method of studying task allocation decision-making in agile software engineering compared to survey/interview based methods. Through the proposedHASEonline APM tool, we conducted a study involving 20 novice Agile teams consisting of 119 undergraduate software engineering students over an 8 week period. Analysis of the collected data provides insight into the effects of novice Agile team members’ competence and the difficulty of the tasks assigned on them on their workload variation, their confidence, and the timeliness of completion of these tasks. These findings can be useful in designing situation-aware task allocation decision support systems to serve Agile teams."
		}, 
		{
    		"Title": "PiE: Programming in Eliza",
    		"Type": "New Idea",
    		"Key": "p695",
    		"URL": "http://scholar.google.com/scholar?hl=en&q=PiE: Programming in Eliza",
    		"PersonsString": "Xiao Liu, Dinghao Wu",
		    "Authors": ["Xiao Liu", "Dinghao Wu"],
		    "Affiliations": ["The Pennsylvania State University", "The Pennsylvania State University"],
		    "AffiliationsString": "The Pennsylvania State University",
		    "Abstract": "Eliza, a primitive example of natural language processing, adopts a rule-based method to conduct simple conversations with people. In this paper, we extend Eliza for a novel application. We propose a system to assist with program synthesis called Programming in Eliza (PiE). According to a set of rules, PiE can automatically synthesize programs from natural language conversations between Eliza and users. PiE is useful for programming in domain-specific languages. We have implemented PiE to synthesize programs in the LOGO programming language, and our experimental results show that, on average, the success ratio is 88.4% for synthesizing LOGO programs from simple conversations with Eliza. PiE also enables end-users with no experience to program in LOGO with a smoother learning curve."
		}, 
		{
		    "Title": "Using Visual Dataflow Programming for Interactive Model Comparison",
		    "Type": "Technical",
		    "Key": "p653",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Using Visual Dataflow Programming for Interactive Model Comparison",
		    "PersonsString": "Rainer Lutz, Stephan Diehl",
		    "Authors": ["Rainer Lutz", "Stephan Diehl"],
		    "Affiliations": ["University of Trier", "University of Trier"],
		    "AffiliationsString": "University of Trier",
		    "Abstract": "In software engineering the comparison of graph-based models is a well-known problem. Although different comparison metrics have been proposed, there are situations in which automatic or pre-configured approaches do not provide reasonable results. Especially when models contain semantic similarities or differences, additional human knowledge is often required. However, only few approaches tackle the problem of how to support humans when comparing models. In this paper, we propose a tool for interactive model comparison. Its design was informed by a set of guidelines that we identified in previous work. In particular, our prototype leverages visual dataflow programming to allow users to implement custom comparison strategies. To this end, they can combine metrics and graph operations to compute similarities and differences, and use color coding to visualize the gained results. Additionally, a qualitative user study allowed to assess whether and how our tool facilitates iterative exploration of similarities and differences between models."
		}, 
		{
		    "Title": "NeedFeed: Taming Change Notifications by Modeling Code Relevance",
		    "Type": "Technical",
		    "Key": "p665",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=NeedFeed: Taming Change Notifications by Modeling Code Relevance",
		    "PersonsString": "Rohan Padhye, Senthil Mani, Vibha Singhal Sinha",
		    "Authors": ["Rohan Padhye", "Senthil Mani", "Vibha Singhal Sinha"],
		    "Affiliations": ["IBM Research India", "IBM Research India", "IBM Research India"],
		    "AffiliationsString": "IBM Research India",
		    "Abstract": "Most software development tools allow developers to subscribe to notifications about code checked-in by their team members in order to review changes to artifacts that they are responsible for. However, past user studies have indicated that this mechanism is counter-productive, as developers spend a significant amount of effort sifting through such feeds looking for items that are relevant to them. We present NEEDFEED, a system that models code relevance by mining a project’s software repository and highlights changes that a developer may need to review. We evaluate several techniques to model code relevance, from a naive TOUCH-based approach to generic HISTORY-based classifiers using temporal code metrics at file and method-level granularities, which are then improved by building developer-specific models using TEXT-based features from commit messages. N EEDFEED reduces notification clutter by more than 90%, on average, with the best strategy giving an average precision and recall of more than 75%."
		}, 
		{
		    "Title": "Active Code Search: Incorporating User Feedback to Improve Code Search Relevance",
		    "Type": "New Idea",
		    "Key": "p677",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Active Code Search: Incorporating User Feedback to Improve Code Search Relevance",
		    "PersonsString": "Shaowei Wang, David Lo, Lingxiao Jiang",
		    "Authors": ["Shaowei Wang", "David Lo", "Lingxiao Jiang"],
		    "Affiliations": ["Singapore Management University", "Singapore Management University", "Singapore Management University"],
		    "AffiliationsString": "Singapore Management University",
		    "Abstract": "Code search techniques return relevant code fragments given a user query. They typically work in a passive mode: given a user query, a static list of code fragments sorted by the relevance scores decided by a code search technique is returned to the user. A user will go through the sorted list of returned code fragments from top to bottom. As the user checks each code fragment one by one, he or she will naturally form an opinion about the true relevance of the code fragment. In an active model, those opinions will be taken as feedbacks to the search engine for refining result lists. In this work, we incorporate users’ opinion on the results from a code search engine to refine result lists: as a user forms an opinion about one result, our technique takes this opinion as feedback and leverages it to re-order the results to make truly relevant results appear earlier in the list. The refinement results can also be cached to potentially improve future code search tasks. We have built our active refinement technique on top of a state-of-the-art code search engine— Portfolio. Our technique improves Portfolio in terms of Normalized Discounted Cumulative Gain (NDCG) by more than 11.3%, from 0.738 to 0.821."
		}, 
		{
		    "Title": "Resilient User Interface Level Tests",
		    "Type": "New Idea",
		    "Key": "p683",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Resilient User Interface Level Tests",
		    "PersonsString": "Heidar Pirzadeh, Sara Shanian",
		    "Authors": ["Heidar Pirzadeh", "Sara Shanian"],
		    "Affiliations": ["hybris Canada, Inc.", "Laval University"],
		    "AffiliationsString": "hybris Canada, Inc., Laval University",
		    "Abstract": "About  60%  of  the  software  development  cost  for  online  applications  is  related  to  developing  user  interfaces  commonly  used by the end users to interact with those applications. Frequent  small changes to user interfaces (UIs) however easily break about  70% of the test cases intended to mimic users’ interactions. Fixing  broken tests results in extra costs of maintenance while lessening  the benefits of test automation. One of the biggest challenges in  creating  resilient  UI  level  test cases is to identify and locate the  elements of the UI in a way  that small UI changes do not break  the way in which an element was originally located. In  this  paper,  we  present  our  early  efforts  in  creating  a  test  development framework that makes test cases independent of the  internal structure of the UIs, so that a change in the structure does  not  break  any  test  as  long  as  the  functionalities  validated  in  the  test are not changed. Our approach is inspired by the way human  interact  with  the  UIs  of  online  applications  and  how  those  interactions are described and communicated in natural language  to  others.  Visual  landmarks  such  as  texts  (via  a  perceptual  activity)  help  end  users  to  locate  their  points  of  interest  during  their interaction with the application in a way that is independent  of the internal structure of application.  Our  framework  could  significantly  reduce  the  cost  of  test  maintenance by enabling software engineers create UI level tests  that are naturally resistant to UI changes."
		}, 
		{
		    "Title": "Search-Based Inference of Polynomial Metamorphic Relations",
		    "Type": "Technical",
		    "Key": "p701",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Search-Based Inference of Polynomial Metamorphic Relations",
		    "PersonsString": "Jie Zhang, Junjie Chen, Dan Hao, Yingfei Xiong, Bing Xie, Lu Zhang, Hong Mei",
		    "Authors": ["Jie Zhang", "Junjie Chen", "Dan Hao", "Yingfei Xiong", "Bing Xie", "Lu Zhang", "Hong Mei"],
		    "Affiliations": ["Peking University", "Peking University", "Peking University", "Peking University", "Peking University", "Peking University", "Peking University"],
		    "AffiliationsString": "Peking University",
		    "Abstract": "Metamorphic testing (MT) is an effective methodology for testing those so-called 'non-testable' programs (e.g., scientific programs), where it is sometimes very difficult for testers to know whether the outputs are correct. In metamorphic testing, metamorphic relations (MRs) (which specify how particular changes to the input of the program under test would change the output) play an essential role. However, testers may typically have to obtain MRs manually. In this paper, we propose a search-based approach to automatic inference of polynomial MRs for a program under test. In particular, we use a set of parameters to represent a particular class of MRs, which we refer to as polynomial MRs, and turn the problem of inferring MRs into a problem of searching for suitable values of the parameters. We then dynamically analyze multiple executions of the program, and use particle swarm optimization to solve the search problem. To improve the quality of inferred MRs, we further use MR filtering to remove some inferred MRs. We also conducted three empirical studies to evaluate our approach using four scientific libraries (including 189 scientific functions). From our empirical results, our approach is able to infer many high-quality MRs in acceptable time (i.e., from 9.87 seconds to 1231.16 seconds), which are effective in detecting faults with no false detection."
		}, 
		{
		    "Title": "A Dynamic Analysis to Support Object-Sharing Code Refactorings",
		    "Type": "Technical",
		    "Key": "p713",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=A Dynamic Analysis to Support Object-Sharing Code Refactorings",
		    "PersonsString": "Girish Maskeri Rama, Raghavan Komondoor",
		    "Authors": ["Girish Maskeri Rama", "Raghavan Komondoor"],
		    "Affiliations": ["Infosys Limited", "Indian Institute of Science"],
		    "AffiliationsString": "Infosys Limited, Indian Institute of Science",
		    "Abstract": "Creation of large numbers of co-existing long-lived isomorphic objects increases the memory footprint of applications significantly. In this paper we propose a dynamic-analysis based approach that detects allocation sites that create large numbers of long-lived isomorphic objects, estimates quantitatively the memory savings to be obtained by sharing isomorphic objects created at these sites, and also checks whether certain necessary conditions for safely employing object sharing hold. We have implemented our approach as a tool, and have conducted experiments on several real-life Java benchmarks. The results from our experiments indicate that in real benchmarks a significant amount of heap memory, ranging up to 37% in some benchmarks, can be saved by employing object sharing. We have also validated the precision of estimates from our tool by comparing these with actual savings obtained upon introducing object-sharing at selected sites in the real benchmarks."
		}, 
		{
		    "Title": "Language Fuzzing Using Constraint Logic Programming",
		    "Type": "New Idea",
		    "Key": "p725",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Language Fuzzing Using Constraint Logic Programming",
		    "PersonsString": "Kyle Dewey, Jared Roesch, Ben Hardekopf",
		    "Authors": ["Kyle Dewey", "Jared Roesch", "Ben Hardekopf"],
		    "Affiliations": ["University of California, Santa Barbara", "University of California, Santa Barbara", "University of California, Santa Barbara"],
		    "AffiliationsString": "University of California, Santa Barbara",
		    "Abstract": "Fuzz testing builds confidence in compilers and interpreters. It is desirable for fuzzers to allow targeted generation of programs that showcase specific language features and behaviors. However, the predominant program generation technique used by most language fuzzers, stochastic context-free grammars, does not have this property. We propose the use of constraint logic programming (CLP) for program generation. Using CLP, testers can write declarative predicates specifying interesting programs, including syntactic features and semantic behaviors. CLP subsumes and generalizes the stochastic grammar approach."
		}, 
		{
		    "Title": "Tracing Software Build Processes to Uncover License Compliance Inconsistencies",
		    "Type": "Technical",
		    "Key": "p731",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Tracing Software Build Processes to Uncover License Compliance Inconsistencies",
		    "PersonsString": "Sander van der Burg, Eelco Dolstra, Shane McIntosh, Julius Davies, Daniel M. German, Armijn Hemel",
		    "Authors": ["Sander van der Burg", "Eelco Dolstra", "Shane McIntosh", "Julius Davies", "Daniel M. German", "Armijn Hemel"],
		    "Affiliations": ["Delft University of Technology", "LogicBlox, Inc.", "Queen's University", "University of British Columbia", "University of Victoria", "Tjaldur Software Governance Solutions"],
		    "AffiliationsString": "Delft University of Technology, LogicBlox, Inc., Queen's University, University of British Columbia, University of Victoria, Tjaldur Software Governance Solutions",
		    "Abstract": "Open Source Software (OSS) components form the basis for many software systems. While the use of OSS components accelerates development, client systems must comply with the license terms of the OSS components that they use. Failure to do so exposes client system distributors to possible litigation from copyright holders. Yet despite the importance of license compliance, tool support for license compliance assessment is lacking. In this paper, we propose an approach to construct and analyze the Concrete Build Dependency Graph (CBDG) of a software system by tracing system calls that occur at build-time. Through a case study of seven open source systems, we show that the constructed CBDGs: (1) accurately classify sources as included in or excluded from deliverables with 88%-100% precision and 98%-100% recall, and (2) can uncover license compliance inconsistencies in real software systems – two of which prompted code fixes in the CUPS and FFmpeg systems."
		}, 
		{
		    "Title": "Automatic Verification of Interactions in Asynchronous Systems with Unbounded Buffers",
		    "Type": "Technical",
		    "Key": "p743",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Automatic Verification of Interactions in Asynchronous Systems with Unbounded Buffers",
		    "PersonsString": "Samik Basu, Tevfik Bultan",
		    "Authors": ["Samik Basu", "Tevfik Bultan"],
		    "Affiliations": ["Iowa State University", "University of California at Santa Barbara"],
		    "AffiliationsString": "Iowa State University, University of California at Santa Barbara",
		    "Abstract": "Asynchronous communication requires message queues to store the messages that are yet to be consumed. Verification of interactions in asynchronously communicating systems is challenging since the sizes of these queues can grow arbitrarily large during execution. In fact, behavioral models for asynchronously communicating systems typically have infinite state spaces, which makes many analysis and verification problems undecidable. In this paper, we show that, focusing only on the interaction behavior (modeled as the global sequence of messages that are sent, recorded in the order they are sent) results in decidable verification for a class of asynchronously communicating systems. In particular, we present the necessary and sufficient condition under which asynchronously communicating systems with unbounded queues exhibit interaction behavior that is equivalent to their interactions over finitely bounded queues. We show that this condition can be automatically checked, ensuring existence of a finite bound on the queue sizes, and, we show that, the finite bound on the queue sizes can be automatically computed."
		}, 
		{
		    "Title": "Towards an Intelligent Domain-Specific Traceability Solution",
		    "Type": "Technical",
		    "Key": "p755",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Towards an Intelligent Domain-Specific Traceability Solution",
		    "PersonsString": "Jin Guo, Natawut Monaikul, Cody Plepel, Jane Cleland-Huang",
		    "Authors": ["Jin Guo", "Natawut Monaikul", "Cody Plepel", "Jane Cleland-Huang"],
		    "Affiliations": ["DePaul University", "DePaul University", "DePaul University", "DePaul University"],
		    "AffiliationsString": "DePaul University",
		    "Abstract": "State-of-the-art software trace retrieval techniques are unable to perform the complex reasoning that a human analyst follows in order to create accurate trace links between artifacts such as regulatory codes and requirements. As a result, current algorithms often generate imprecise links. To address this problem, we present the Domain-Contextualized Intelligent Traceability Solution (DoCIT), designed to mimic some of the higher level reasoning that a human trace analyst performs. We focus our efforts on the complex domain of communication and control in a transportation system. DoCIT includes rules for extracting “action units” from software artifacts, a domain-specific knowledge base for relating semantically similar concepts across action units, and a set of link-creation heuristics which utilize the action units to establish meaningful trace links across pairs of artifacts. Our approach significantly improves the quality of the generated trace links. We illustrate and evaluate DoCIT with examples and experiments from the control and communication sector of a transportation domain."
		}, 
		{
		    "Title": "Automated Requirements Analysis for a Molecular Watchdog Timer",
		    "Type": "Technical",
		    "Key": "p767",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Automated Requirements Analysis for a Molecular Watchdog Timer",
		    "PersonsString": "Samuel J. Ellis, Eric R. Henderson, Titus H. Klinge, James I. Lathrop, Jack H. Lutz, Robyn R. Lutz, Divita Mathur, Andrew S. Miner",
		    "Authors": ["Samuel J. Ellis", "Eric R. Henderson", "Titus H. Klinge", "James I. Lathrop", "Jack H. Lutz", "Robyn R. Lutz", "Divita Mathur", "Andrew S. Miner"],
		    "Affiliations": ["Iowa State University", "Iowa State University", "Iowa State University", "Iowa State University", "Iowa State University", "Iowa State University", "Iowa State University", "Iowa State University"],
		    "AffiliationsString": "Iowa State University",
		    "Abstract": "Dynamic systems in DNA nanotechnology are often programmed using a chemical reaction network (CRN) model as an intermediate level of abstraction. In this paper, we design and analyze a CRN model of a watchdog timer, a device commonly used to monitor the health of a safety critical system. Our process uses incremental design practices with goal-oriented requirements engineering, software verification tools, and custom software to help automate the software engineering process. The watchdog timer is comprised of three components: an absence detector, a threshold filter, and a signal amplifier. These components are separately designed and verified, and only then composed to create the molecular watchdog timer. During the requirements-design iterations, simulation, model checking, and analysis are used to verify the system. Using this methodology several incomplete requirements and design flaws were found, and the final verified model helped determine specific parameters for biological experiments."
		}, 
		{
		    "Title": "Formalisation of the Integration of Behavior Trees",
		    "Type": "New Idea",
		    "Key": "p779",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Formalisation of the Integration of Behavior Trees",
		    "PersonsString": "Kushal Ahmed, M. A. Hakim Newton, Lian Wen, Abdul Sattar",
		    "Authors": ["Kushal Ahmed", "M. A. Hakim Newton", "Lian Wen", "Abdul Sattar"],
		    "Affiliations": ["Griffith University", "Griffith University", "Griffith University", "Griffith University"],
		    "AffiliationsString": "Griffith University",
		    "Abstract": "In this paper, we present a formal definition of the integration of the requirements modeling language Behavior Trees (BTs). We first provide the semantic integration of two interrelated BTs using an extended version of Communicating Sequential Processes. We then use a Semantic Network Model to capture a set of interrelated BTs, and develop algorithm to integrate them all into one BT. This formalisation facilitates developing (semi-)automated tools for modeling the requirements of large-scale software intensive systems."
		}, 
		{
		    "Title": "Automatic Early Defects Detection in Use Case Documents",
		    "Type": "New Idea",
		    "Key": "p785",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Automatic Early Defects Detection in Use Case Documents",
		    "PersonsString": "Shuang Liu, Jun Sun, Yang Liu, Yue Zhang, Bimlesh Wadhwa, Jin Song Dong, Xinyu Wang",
		    "Authors": ["Shuang Liu", "Jun Sun", "Yang Liu", "Yue Zhang", "Bimlesh Wadhwa", "Jin Song Dong", "Xinyu Wang"],
		    "Affiliations": ["National University of Singapore", "Singapore University of Technology and Design", "Nanyang Technological University", "Singapore University of Technology and Design", "National University of Singapore", "National University of Singapore", "ZheJiang University"],
		    "AffiliationsString": "National University of Singapore, Singapore University of Technology and Design, Nanyang Technological University, ZheJiang University",
		    "Abstract": "Use cases, as the primary techniques in the user requirement analysis, have been widely adopted in the requirement engineering practice. As developed early, use cases also serve as the basis for function requirement development, system design and testing. Errors in the use cases could potentially lead to problems in the system design or implementation. It is thus highly desirable to detect errors in use cases. Automatically analyzing use case documents is challenging primarily because they are written in natural languages. In this work, we aim to achieve automatic defect detection in use case documents by leveraging on advanced parsing techniques. In our approach, we first parse the use case document using dependency parsing techniques. The parsing results of each use case are further processed to form an activity diagram. Lastly, we perform defect detection on the activity diagrams. To evaluate our approach, we have conducted experiments on 200+ real-world as well as academic use cases. The results show the effectiveness of our method."
		}, 
		{
		    "Title": "SymCrash: Selective Recording for Reproducing Crashes",
		    "Type": "Technical",
		    "Key": "p791",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=SymCrash: Selective Recording for Reproducing Crashes",
		    "PersonsString": "Yu Cao, Hongyu Zhang, Sun Ding",
		    "Authors": ["Yu Cao", "Hongyu Zhang", "Sun Ding"],
		    "Affiliations": ["Tsinghua University", "Microsoft Research", "Nanyang Technological University"],
		    "AffiliationsString": "Tsinghua University, Microsoft Research, Nanyang Technological University",
		    "Abstract": "Software  often  crashes  despite  tremendous  effort  on  software  quality  assurance.  Once  developers  receive  a  crash  report,  they  need  to  reproduce  the  crash  in  order  to  understand  the  problem  and  locate  the  fault.  However,  limited  information  from  crash  reports often makes crash reproduction difficult. Many “captureand-replay”  techniques  have  been  proposed  to  automatically  capture  program  execution  data  from  the  failing  code,  and  help  developers replay the crash scenarios based on the captured data.  However, such techniques often suffer from heavy overhead and  introduce privacy concerns. Recently, methods such as BugRedux  were proposed  to  generate  test  input  that  leads  to  crash  through  symbolic  execution.  However,  such  methods  have  inherent  limitations because they rely on conventional symbolic execution  techniques.  In  this  paper,  we  propose  a  dynamic  symbolic  execution method called SymCon, which addresses the limitation  of conventional symbolic execution by selecting functions that are  hard to be resolved by a constraint solver and using their concrete  runtime  values  to  replace  the  symbols.  We  then  propose  SymCrash,  a  selective  recording  approach  that  only  instruments  and monitors the hard-to-solve functions. SymCrash can generate  test  input  for  crashes  through  SymCon.  We  have  applied  our  approach  to  successfully  reproduce  13  failures  of  6  real-world  programs.  Our  results  confirm  that  the  proposed  approach  is  suitable  for  reproducing  crashes,  in  terms  of  effectiveness,  overhead, and privacy. It also outperforms the related methods."
		}, 
		{
		    "Title": "Potential Biases in Bug Localization: Do They Matter?",
		    "Type": "Technical",
		    "Key": "p803",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Potential Biases in Bug Localization: Do They Matter?",
		    "PersonsString": "Pavneet Singh Kochhar, Yuan Tian, David Lo",
		    "Authors": ["Pavneet Singh Kochhar", "Yuan Tian", "David Lo"],
		    "Affiliations": ["Singapore Management University", "Singapore Management University", "Singapore Management University"],
		    "AffiliationsString": "Singapore Management University",
		    "Abstract": "Issue tracking systems are valuable resources during software maintenance activities and contain information about the issues faced during the development of a project as well as after its release. Many projects receive many reports of bugs and it is challenging for developers to manually debug and fix them. To mitigate this problem, past studies have proposed information retrieval (IR)-based bug localization techniques, which takes as input a textual description of a bug stored in an issue tracking system, and returns a list of potentially buggy source code files. These studies often evaluate their effectiveness on issue reports marked as bugs in issue tracking systems, using as ground truth the set of files that are modified in commits that fix each bug. However, there are a number of potential biases that can impact the validity of the results reported in these studies. First, issue reports marked as bugs might not be reports of bugs due to error in the reporting and classification process. Many issue reports are about documentation update, request for improvement, refactoring, code cleanups, etc. Second, bug reports might already explicitly specify the buggy program files and for these reports bug localization techniques are not needed. Third, files that get modified in commits that fix the bugs might not contain the bug. This study investigates the extent these potential biases affect the results of a bug localization technique and whether bug localization researchers need to consider these potential biases when evaluating their solutions. In this paper, we analyse issue reports from three different projects: HTTPClient, Jackrabbit, and Lucene-Java to examine the impact of above three biases on bug localization. Our results show that one of these biases significantly and substantially impacts bug localization results, while the other two biases have negligible or minor impact."
		}, 
		{
		    "Title": "MIMIC: Locating and Understanding Bugs by Analyzing Mimicked Executions",
		    "Type": "Technical",
		    "Key": "p815",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=MIMIC: Locating and Understanding Bugs by Analyzing Mimicked Executions",
		    "PersonsString": "Daniele Zuddas, Wei Jin, Fabrizio Pastore, Leonardo Mariani, Alessandro Orso",
		    "Authors": ["Daniele Zuddas", "Wei Jin", "Fabrizio Pastore", "Leonardo Mariani", "Alessandro Orso"],
		    "Affiliations": ["University of Milano - Bicocca", "Georgia Institute of Technology", "University of Milano - Bicocca", "University of Milano - Bicocca", "Georgia Institute of Technology"],
		    "AffiliationsString": "University of Milano - Bicocca, Georgia Institute of Technology",
		    "Abstract": "Automated debugging techniques aim to help developers locate and understand the cause of a failure, an extremely challenging yet fundamental task. Most state-of-the-art approaches suffer from two problems: they require a large number of passing and failing tests and report possible faulty code with no explanation. To mitigate these issues, we present MIMIC, a novel automated debugging technique that combines and extends our previous input generation and anomaly detection techniques. MIMIC (1) synthesizes multiple passing and failing executions similar to an observed failure and (2) uses these executions to detect anomalies in behavior that may explain the failure. We evaluated MIMIC on six failures of realworld programs with promising results: for five of these failures, MIMIC identified their root causes while producing a limited number of false positives. Most importantly, the anomalies identified by MIMIC provided information that may help developers understand (and ultimately eliminate) such root causes."
		},

		{
		    "Title": "Workspace Updates of Visual Models",
		    "Type": "ToolDemo",
		    "Key": "p827",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Workspace Updates of Visual Models",
		    "PersonsString": "Timo Kehrer, Udo Kelter, Dennis Reuling",
		    "Authors": ["Timo Kehrer", "Udo Kelter", "Dennis Reuling"],
		    "Affiliations": ["University of Siegen", "University of Siegen", "University of Siegen"],
		    "AffiliationsString": "University of Siegen",
		    "Abstract": "In MDE, large models must be collaboratively developed in teams. Collaboration is usually supported by optimistic versioning based on workspaces and a repository. Workspace copies of a model are synchronized with the repository version by an update function. Most update functions currently available compromise the consistency of a model. We present a new approach which guarantees updated models to be consistent and processable by standard visual editors without post-processing. Our approach assumes changes in the repository to be represented as a consistency-preserving edit script. This edit script is executed in a controlled, interactive manner on the workspace copy. Unlike 3-way merging, our approach needs no conflict analysis. Conflicts are detected and resolved interactively. Our approach offers improved usability and requires less implementation effort than existing approaches."
		}, 
		{
		    "Title": "Meta-Model Validation and Verification with MetaBest",
		    "Type": "ToolDemo",
		    "Key": "p831",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Meta-Model Validation and Verification with MetaBest",
		    "PersonsString": "Jesús J. Lopez-Fernandez, Esther Guerra, Juan de Lara",
		    "Authors": ["Jesús J. Lopez-Fernandez", "Esther Guerra", "Juan de Lara"],
		    "Affiliations": ["Universidad Autonoma de Madrid", "Universidad Autonoma de Madrid", "Universidad Autonoma de Madrid"],
		    "AffiliationsString": "Universidad Autonoma de Madrid",
		    "Abstract": "Meta-models play a cornerstone role in Model-Driven Engineering as they are used to define the abstract syntax of Domain-Specific Modelling Languages, and so models and all sorts of model transformations depend on them. However, there are scarce tools and methods supporting their validation and verification, which are essential activities for the proper engineering of meta-models. In this paper we present an Eclipse-based tool that aims to fill this gap by providing two complementary meta-model testing languages. The first one has similar philosophy to the xUnit framework, enabling the definition of meta-model unit test suites comprising model fragments and assertions on their (in-)correctness. The second one is directed to verify expected properties of the meta-model, including domain and design properties, quality criteria and platform-specific requirements. Both tools are integrated within a framework for example-based, incremental meta-model development."
		}, 
		{
		    "Title": "A Web Based UML Modeling Tool with Touch Screens",
		    "Type": "ToolDemo",
		    "Key": "p835",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=A Web Based UML Modeling Tool with Touch Screens",
		    "PersonsString": "Zhiyi Ma, Chih-Yi Yeh, Huihong He, Hongjie Chen",
		    "Authors": ["Zhiyi Ma", "Chih-Yi Yeh", "Huihong He", "Hongjie Chen"],
		    "Affiliations": ["Peking University", "Peking University", "Peking University", "Peking University"],
		    "AffiliationsString": "Peking University",
		    "Abstract": "With the popularity of pads, large touch screens, notebooks and  smart mobiles, it is a reasonable requirement that modelers use  such devices to models. However, there are few modeling tools  that take full advantage of the devices. This paper discusses a  Web based UML modeling tool withtouch screens, based on our  full analysis of human-machine interaction modes for software  modeling. The tool provides moreinput means, i.e. combining  gesture input and traditional keyboard and mouse input, and  supports cross-platforms modeling by using HTML 5."
		}, 
		{
		    "Title": "SeSAME: Modeling and Analyzing High-Quality Service Compositions",
		    "Type": "ToolDemo",
		    "Key": "p839",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=SeSAME: Modeling and Analyzing High-Quality Service Compositions",
		    "PersonsString": "Svetlana Arifulina, Sven Walther, Matthias Becker, Marie C. Platenius",
		    "Authors": ["Svetlana Arifulina", "Sven Walther", "Matthias Becker", "Marie C. Platenius"],
		    "Affiliations": ["University of Paderborn", "Heinz Nixdorf Institute & University of Paderborn", "University of Paderborn", "University of Paderborn"],
		    "AffiliationsString": "University of Paderborn, Heinz Nixdorf Institute & University of Paderborn",
		    "Abstract": "Today, software components are traded on markets in form of services. These services can be service compositions consisting of several services. If a software architect wants to provide such a service composition in the market for trade, she needs to perform several tasks: she needs to model the composition, to discover existing services to be part of that composition, and to analyze the composition’s functional correctness as well as its quality, e.g., performance. Up to now, the architect needed to find and use different tools for these tasks. Typically, these tools are not interoperable with each other. We provide the tool SeSAME that supports a software architect in all of these tasks. SeSAME is an integrated Eclipse-based tool-suite providing a comprehensive service specification language to model service compositions and existing services. Furthermore, it includes modules for service matching, functional analysis, and non-functional analysis. SeSAME is the first tool that integrates all these tasks into one tool-suite and, thereby, provides holistic support for trading software services. Thus, it contributes to the acceptance and success of a service market."
		}, 
		{
		    "Title": "MPAnalyzer: A Tool for Finding Unintended Inconsistencies in Program Source Code",
		    "Type": "ToolDemo",
		    "Key": "p843",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=MPAnalyzer: A Tool for Finding Unintended Inconsistencies in Program Source Code",
		    "PersonsString": "Yoshiki Higo, Shinji Kusumoto",
		    "Authors": ["Yoshiki Higo", "Shinji Kusumoto"],
		    "Affiliations": ["Osaka University", "Osaka University"],
		    "AffiliationsString": "Osaka University",
		    "Abstract": "Unintended inconsistencies are caused by missing a modification task that requires code changes on multiple locations in program source code. In order to identify such inconsistencies efficiently, we proposed a new technique. It firstly learns how code fragments were changed in the past modification tasks, and then, it identifies where inconsistencies exist at the latest version. In this paper, we focus on an aspect of the tool that we developed and shows a case study that we conducted with the tool. A video of the tool is available at http://youtu.be/a7_PVVZ4-vo."
		}, 
		{
		    "Title": "Firecrow - A Tool for Web Application Analysis and Reuse",
		    "Type": "ToolDemo",
		    "Key": "p847",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Firecrow - A Tool for Web Application Analysis and Reuse",
		    "PersonsString": "Josip Maras, Maja Štula, Jan Carlson",
		    "Authors": ["Josip Maras", "Maja Štula", "Jan Carlson"],
		    "Affiliations": ["University of Split", "University of Split", "Malardalen University"],
		    "AffiliationsString": "University of Split, Malardalen University",
		    "Abstract": "This paper presents Firecrow – a tool for Web application analysis and reuse. The tool’s primary function is to support reuse of client-side features, but it can also be used for feature identification, web application slicing, and generation of usage scenarios, i.e. sequences of user actions that cause the manifestation of application behaviors. The tool is in prototype stage and is accessible through a plug-in to the Firefox browser, but it can also be used as a library from other browsers (e.g. Chrome, Safari, and PhantomJs)."
		}, 
		{
		    "Title": "HUSACCT: Architecture Compliance Checking with Rich Sets of Module and Rule Types",
		    "Type": "ToolDemo",
		    "Key": "p851",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=HUSACCT: Architecture Compliance Checking with Rich Sets of Module and Rule Types",
		    "PersonsString": "Leo Pruijt, Christian Koppe, Jan Martijn van der Werf, Sjaak Brinkkemper",
		    "Authors": ["Leo Pruijt", "Christian Koppe", "Jan Martijn van der Werf", "Sjaak Brinkkemper"],
		    "Affiliations": ["Hogeschool Utrecht", "HAN University of Applied Sciences", "University Utrecht", "University Utrecht"],
		    "AffiliationsString": "Hogeschool Utrecht, HAN University of Applied Sciences, University Utrecht",
		    "Abstract": "Architecture  Compliance  Checking  (ACC)  is  an  approach  to  verify  the  conformance  of  implemented  program  code  to  highlevel  models  of  architectural  design.  Static  ACC  focuses  on  the  module views of architecture and especially on rules constraining  the  modular  elements.  This  paper  presents  HUSACCT,  a  static  ACC  tool  that  adds  extensive  support  for  semantically  rich  modular  architectures  (SRMAs)  to  the  current  practice  of  static  ACC tools. An SRMA contains modules of semantically different  types, like layers and components, which are constrained by rules  of different types. HUSACCT provides support for five commonly  used types of modules and eleven types of rules. We describe and  illustrate  how  basic  and  extensive  support  of  these  types  is  provided and how the support can be configured. In addition, we  discuss the internal architecture of the tool."
		}, 
		{
		    "Title": "CoCoTest: A Tool for Model-in-the-Loop Testing of Continuous Controllers",
		    "Type": "ToolDemo",
		    "Key": "p855",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=CoCoTest: A Tool for Model-in-the-Loop Testing of Continuous Controllers",
		    "PersonsString": "Reza Matinnejad, Shiva Nejati, Lionel C. Briand, Thomas Bruckmann",
		    "Authors": ["Reza Matinnejad", "Shiva Nejati", "Lionel C. Briand", "Thomas Bruckmann"],
		    "Affiliations": ["University of Luxembourg", "University of Luxembourg", "University of Luxembourg", "Delphi Automotive Systems"],
		    "AffiliationsString": "University of Luxembourg, Delphi Automotive Systems",
		    "Abstract": "We present CoCoTest, a tool for automated testing of continuous controllers at the Model-in-the-Loop stage. CoCoTest combines explorative and exploitative search algorithms to identify scenarios in the controller input space that violate or are likely to violate the controller requirements. This enables a scalable and systematic way to test continuous properties of such controllers. Our experiments show that CoCoTest identifies critical flaws in the controller design that are rarely found by manual testing and go unnoticed until late stages of embedded software system development."
		}, 
		{
		    "Title": "8Cage: Lightweight Fault-Based Test Generation for Simulink",
		    "Type": "ToolDemo",
		    "Key": "p859",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=8Cage: Lightweight Fault-Based Test Generation for Simulink",
		    "PersonsString": "Dominik Holling, Alexander Pretschner, Matthias Gemmar",
		    "Authors": ["Dominik Holling", "Alexander Pretschner", "Matthias Gemmar"],
		    "Affiliations": ["Technische Universitat Munchen", "Technische Universitat Munchen", "ITK Engineering AG"],
		    "AffiliationsString": "Technische Universitat Munchen, ITK Engineering AG",
		    "Abstract": "Matlab Simulink models, mainly used for the specification of continuous embedded systems, employ a data flow-driven notation well understood by engineers. This notation abstracts from the underlying computational model, hiding run time failures such as over-/underflows and divisions by zero. They are often detected late in the development process by the use of static analysis tools on the completely developed system. The responsible underlying faults are sometimes attributable to a single operation in a model. 8Cage is an automated test case generator for the early detection of such single operation related faults. It is configurable to detect these faults and runs automatically in the background. It tries to find potentially failure-causing operations and generates a test case to gather evidence for an actual fault. 8Cage is usable by developing/testing engineers with knowledge of Matlab. It does not require an expert to perform result validation or fault localization."
		}, 
		{
		    "Title": "PBGT Tool: An Integrated Modeling and Testing Environment for Pattern-Based Gui Testing",
		    "Type": "ToolDemo",
		    "Key": "p863",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=PBGT Tool: An Integrated Modeling and Testing Environment for Pattern-Based Gui Testing",
		    "PersonsString": "Rodrigo M. L. M. Moreira, Ana C. R. Paiva",
		    "Authors": ["Rodrigo M. L. M. Moreira", "Ana C. R. Paiva"],
		    "Affiliations": ["University of Porto", "University of Porto"],
		    "AffiliationsString": "University of Porto",
		    "Abstract": "Pattern Based GUI Testing (PBGT) is a new methodology that aims at systematizing and automating the GUI testing process. It is supported by a Tool (PBGT Tool) which provides an integrated modeling and testing environment that supports the crafting of test models based on UI Test Patterns, using a GUI modeling DSL called PARADIGM. The tool is freely available as an Eclipse plugin, developed on top of the Eclipse Modeling Framework. This paper presents PBGT Tool, which has been successfully used in several projects, and more recently at industry level."
		}, 
		{
		    "Title": "A Tool Chain for Generating the Description Files of Highly Available Software",
		    "Type": "ToolDemo",
		    "Key": "p867",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=A Tool Chain for Generating the Description Files of Highly Available Software",
		    "PersonsString": "Maxime Turenne, Ali Kanso, Abdelouahed Gherbi, Samer Razzook",
		    "Authors": ["Maxime Turenne", "Ali Kanso", "Abdelouahed Gherbi", "Samer Razzook"],
		    "Affiliations": ["Universite du Quebec", "Ericsson", "Universite du Quebec", "Ericsson"],
		    "AffiliationsString": "Universite du Quebec, Ericsson",
		    "Abstract": "Service availability is a key non-functional requirement that  system architects and integrators seek to achieve. High  Availability (HA) can be attained using a dedicated distributed  HA middleware that can manage clustered redundant resources to  maintain the continuous service delivery even in the presence of  failures. Nonetheless, employing such middleware based solutions  requires deep knowledge of the domain and substantial  configuration effort, which can bea tedious and error prone task.  In this paper, we demonstrate an automated approach that  mitigates the efforts of configuring HA systems, and allows nondomain experts to easily use specialized HA solutions to increase  the reliability of the services provided by their systems."
		}, 
		{
		    "Title": "DupFinder: Integrated Tool Support for Duplicate Bug Report Detection",
		    "Type": "ToolDemo",
		    "Key": "p871",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=DupFinder: Integrated Tool Support for Duplicate Bug Report Detection",
		    "PersonsString": "Ferdian Thung, Pavneet Singh Kochhar, David Lo",
		    "Authors": ["Ferdian Thung", "Pavneet Singh Kochhar", "David Lo"],
		    "Affiliations": ["Singapore Management University", "Singapore Management University", "Singapore Management University"],
		    "AffiliationsString": "Singapore Management University",
		    "Abstract": "To track bugs that appear in a software, developers often make use of a bug tracking system. Users can report bugs that they encounter in such a system. Bug reporting is inherently an uncoordinated distributed process though and thus when a user submits a new bug report, there might be cases when another bug report describing exactly the same problem is already present in the system. Such bug reports are duplicate of each other and these duplicate bug reports need to be identified. A number of past studies have proposed a number of automated approaches to detect duplicate bug reports. However, these approaches are not integrated to existing bug tracking systems. In this paper, we propose a tool named DupFinder, which implements the state-of-theart unsupervised duplicate bug report approach by Runeson et al., as a Bugzilla extension. DupFinder does not require any training data and thus can easily be deployed to any project. DupFinder extracts texts from summary and description fields of a new bug report and recent bug reports present in a bug tracking system, uses vector space model to measure similarity of bug reports, and provides developers with a list of potential duplicate bug reports based on the similarity of these reports with the new bug report. We have released DupFinder as an open source tool in GitHub, which is available at: https://github.com/smagsmu/dupfinder."
		}, 

		{
		    "Title": "Determining the Most Probable Root Causes of Run-Time Errors in Simulink Models",
		    "Type": "DoctoralSymposium",
		    "Key": "p875",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Determining the Most Probable Root Causes of Run-Time Errors in Simulink Models",
		    "PersonsString": "Johanna Schneider",
		    "Authors": ["Johanna Schneider"],
		    "Affiliations": ["Daimler AG"],
		    "AffiliationsString": "Daimler AG",
		    "Abstract": "Being confronted with a defect in software leads to the well known task: correcting the software such that the defect does not occur anymore. Here, the location of the defect and the corresponding root cause do not have to be identical. Thus, before any correction can be done, the reviewer has to detect the root cause for the defect. In order to reduce the reviewing effort, this approach presents a method to automatically narrow down possible root causes for defects found in Simulink models. Starting at a defect location, a backward search is applied to detect all paths leading to that defect. Each path is weighted by previously determined weights depending on the block types contained in the respective path. This weighting correlates with the probability of a path containing the root cause."
		}, 
		{
		    "Title": "Utilizing Feature Location Techniques for Feature Addition and Feature Enhancement",
		    "Type": "DoctoralSymposium",
		    "Key": "p879",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Utilizing Feature Location Techniques for Feature Addition and Feature Enhancement",
		    "PersonsString": "Joseph Burke",
		    "Authors": ["Joseph Burke"],
		    "Affiliations": ["University of Limerick"],
		    "AffiliationsString": "University of Limerick",
		    "Abstract": "Additions  and enhancements to software are prevalent issues  within software development. When developers want to make  enhancements to a piece of software they first have to build up an  understanding of the relevant parts of the system. There are a  number of challenges within this: where is the best place to add  changes, what to reuse and identifying possible ripple effects.  This research aims to investigate the utility of feature location  techniques to address these challenges. Feature location can help in automating what traditionally is seen  as a manual activity, i.e., searching within code. Feature location  techniques may lead to improved software evolution by reducing  the amount of noise the developer needs to look through to find  code of interest for the three challenges above. However these  challenges  do not  appear to be  directly addressed within  the feature location literature. This research examines how we can  leverage the potential of feature location to create feature addition  and enhancement techniques to address the above challenges  uncovering techniques that help with positioning, reusing  and  evolving code."
		}, 
		{
		    "Title": "AugIR - The Conceptual Design and Evaluation of an Augmented Interaction Room",
		    "Type": "DoctoralSymposium",
		    "Key": "p883",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=AugIR - The Conceptual Design and Evaluation of an Augmented Interaction Room",
		    "PersonsString": "Markus Kleffmann",
		    "Authors": ["Markus Kleffmann"],
		    "Affiliations": ["University of Duisburg-Essen"],
		    "AffiliationsString": "University of Duisburg-Essen",
		    "Abstract": "It is often difficult for stakeholders with heterogeneous backgrounds to maintain a common understanding of the most important risk and value drivers of a complex software project. Therefore, I propose the concept of a so-called Augmented Interaction Room, i.e. a persistent physical team room whose walls are outfitted with large interactive displays. It provides a dedicated project space for supporting collaborative system design and the communication among members of a software development project. In this paper, I describe the specific challenges regarding visualization and navigation on these large displays and present my approach on how to support stakeholders by automatically identifying inconsistencies, contradictions and potential project risks."
		}, 
		{
		    "Title": "A Requirements Monitoring Infrastructure for Systems of Systems",
		    "Type": "DoctoralSymposium",
		    "Key": "p887",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=A Requirements Monitoring Infrastructure for Systems of Systems",
		    "PersonsString": "Michael Vierhauser",
		    "Authors": ["Michael Vierhauser"],
		    "Affiliations": ["Johannes Kepler University Linz"],
		    "AffiliationsString": "Johannes Kepler University Linz",
		    "Abstract": "An increasing number of software systems today are systems of systems (SoS) that have been developed by diverse teams over many years. Such systems emerge gradually and it is hard to analyze or predict their behavior due to their scale, complexity, and heterogeneity. In particular, certain behavior only emerges at runtime due to complex interactions between the involved systems and their environment. Requirements monitoring has been proposed as a solution for checking at runtime whether systems adhere to their requirements. However, existing requirements monitoring approaches have been designed for single systems and therefore do not adequately consider the characteristics of SoS. More specifically, requirements in SoS exist at different levels, across different systems, and are owned by diverse stakeholders. Furthermore, requirements monitoring for SoS has to be flexible with respect to technologies and architectural patterns. This thesis will identify the capabilities required for requirements monitoring of SoS. It will further provide a flexible and tailorable infrastructure to support engineers and maintenance staff in observing and analyzing the behavior of a SoS at runtime. We plan to evaluate our work by assessing its usefulness in the context of an industrial SoS."
		}, 
		{
		    "Title": "Embrace Your Issues: Compassing the Software Engineering Landscape Using Bug Reports",
		    "Type": "DoctoralSymposium",
		    "Key": "p891",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Embrace Your Issues: Compassing the Software Engineering Landscape Using Bug Reports",
		    "PersonsString": "Markus Borg",
		    "Authors": ["Markus Borg"],
		    "Affiliations": ["Lund University"],
		    "AffiliationsString": "Lund University",
		    "Abstract": "Software developers in large projects work in complex information landscapes, and staying on top of all relevant software artifacts is challenging. As software systems often evolve for years, a high number of issue reports is typically managed during the lifetime of a system. Efficient management of incoming issue requires successful navigation of the information landscape. In our work, we address two important work tasks involved in issue management: Issue Assignment (IA) and Change Impact Analysis (CIA). IA is the early task of allocating an issue report to a development team. CIA deals with identifying how source code changes affect the software system, a fundamental activity in safetycritical development. Our solution approach is to support navigation, both among development teams and software artifacts, based on information available in historical issue reports. We present how we apply techniques from machine learning and information retrieval to develop recommendation systems. Finally, we report intermediate results from two controlled experiments and an industrial case study."
		}, 
		{
		    "Title": "Issues of Automated Software Composition in AI Planning",
		    "Type": "DoctoralSymposium",
		    "Key": "p895",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Issues of Automated Software Composition in AI Planning",
		    "PersonsString": "Felix Mohr",
		    "Authors": ["Felix Mohr"],
		    "Affiliations": ["University of Paderborn"],
		    "AffiliationsString": "University of Paderborn",
		    "Abstract": "Automated programming aims at automatically assembling a new software artifact from existing software modules. Although automated programming was revitalized through automated software composition in the last decade, the problem cannot be considered solved. Automated software composition is widely accepted as being a planning task, but the problem is that it has very special properties that other planning problems do not have and that are commonly overseen. These properties usually imply that the composition problem cannot be solved with standard planning tools. This paper gives a brief and intuitive description of the planning problem that most approaches are based on. It points out special properties of this problem and explains why it is not adequate to solve the problem with classical planning tools as done by most existing approaches."
		}, 
		{
		    "Title": "A Proposal for Revisiting Coverage Testing Metrics",
		    "Type": "DoctoralSymposium",
		    "Key": "p899",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=A Proposal for Revisiting Coverage Testing Metrics",
		    "PersonsString": "Breno Miranda",
		    "Authors": ["Breno Miranda"],
		    "Affiliations": ["Universita di Pisa"],
		    "AffiliationsString": "Universita di Pisa",
		    "Abstract": "Test coverage information can be very useful for guiding testers in enhancing their test suites to exercise possible uncovered entities and in deciding when to stop testing. Since the concept of test criterion was born, several contributions have been made by both academia and industry in the definition and adaptation of adequacy criteria aiming at ensuring the discovery of more failures. Numerous contributions have also been done in the development of coverage tools. However, for complex applications that are reused in different contexts and for emerging paradigms (e.g., componentbased development, service-oriented architecture, and cloud computing), traditional coverage metrics may no longer provide meaningful information to help testers on these tasks. Inspired by the idea of relative coverage this research focuses on the introduction of meaningful coverage metrics to cope with the challenges imposed by the current programming paradigms as well as on the definition of a theoretical framework for the development of relative coverage metrics."
		}, 
		{
		    "Title": "Variability-Aware Change Impact Analysis of Multi-Language Product Lines",
		    "Type": "DoctoralSymposium",
		    "Key": "p903",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Variability-Aware Change Impact Analysis of Multi-Language Product Lines",
		    "PersonsString": "Florian Angerer",
		    "Authors": ["Florian Angerer"],
		    "Affiliations": ["Johannes Kepler University, Linz"],
		    "AffiliationsString": "Johannes Kepler University, Linz",
		    "Abstract": "Change impact analysis (CIA) techniques have been applied successfully to determine the effects of modifications when evolving software systems. However, many software systems today use multiple programming languages and they are organized as software product lines (SPLs) to ease their customization to different customer and market needs. Due to the limitations of current CIA approaches regarding variability and cross-language support assessing the impact of changes becomes difficult and arduous. This work aims at developing a CIA approach for multi-language SPLs. The approach is based on a multiple conditional system dependency graphs. We will evaluate the approach based on the software product lines of an industry partner in the domain of industrial automation."
		}, 
		{
		    "Title": "Improvement of Applications' Stability Through Robust APIs",
		    "Type": "DoctoralSymposium",
		    "Key": "p907",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Improvement of Applications' Stability Through Robust APIs",
		    "PersonsString": "Maria Kechagia",
		    "Authors": ["Maria Kechagia"],
		    "Affiliations": ["Athens University of Economics and Business"],
		    "AffiliationsString": "Athens University of Economics and Business",
		    "Abstract": "Modern programs require useful and robust apis to guarantee applications’ responsiveness. Given that large apis can be used by novice developers and that not all experts are infallible, a well-designed api should inform developers about all the possible exceptions that an application can throw when it calls specific api methods. This research aims to identify automatically which exceptions should be included in an api reference. For this, there will be an evaluation of the Android api with an emphasis on its Java error-handling mechanism. First goal will be the automatic identification of as many as possible critical exceptions that each api method of the system can throw. Second goal will be the recommendation of undocumented exceptions that can lead client applications to execution failures (crashes). Consequently, the contribution of this research would be the decrease of possible application crashes that are associated with undocumented exceptions."
		}, 
		{
		    "Title": "Model-Driven Development of Content Management Systems Based on Joomla",
		    "Type": "DoctoralSymposium",
		    "Key": "p911",
		    "URL": "http://scholar.google.com/scholar?hl=en&q=Model-Driven Development of Content Management Systems Based on Joomla",
		    "PersonsString": "Dennis Priefer",
		    "Authors": ["Dennis Priefer"],
		    "Affiliations": ["Philipps University & Technische Hochschule Mittelhessen - University of Applied Sciences"],
		    "AffiliationsString": "Philipps University & Technische Hochschule Mittelhessen - University of Applied Sciences",
		    "Abstract": "Today’s web consists of dynamic web sites with a wide range of functionality, whereby most of the sites are based on Content Management Systems (CMS). CMSs became a de facto standard as basic frameworks for web applications, because they provide lots of existing features and a high usability. Even though typical CMSs come along with lots of core functions, the most of them are extensible through different extension types. Through these extensions CMS-based applications become fully adequate web applications. One of the most popular CMSs is Joomla, which is extensible through external functionality. During the development and maintenance of both external functionality and concrete Joomla-based sites, some obstacles occur. One of the most substantial obstacle occurs when a new version of the core CMS platform is released. A further migration process is always an extremely time-consuming process. Through the use of model-driven development (MDD) a lot of the invested development and maintenance effort can be reduced, especially when new platform versions appear frequently. This paper proposes an MDD approach to the Joomla CMS, and contains several use cases for both forward engineering and reverse engineering of Joomla extensions and Joomla-based web sites with concrete data which shall be used for a faster and simpler migration process."
		}
	],

	"Sessions":
	[
		{
            "Id": "programUnderstandingId",
            "Title": "Program Understanding",
            "ShortTitle": "Program Understanding",
            "Type": "Research Track",
            "Key": "programUnderstanding",
            "Day": "2014-09-17",
            "Time": "10:30 - 12:30",
            "Location": "Congress hall",
            "LocationIndex": 1,
            "ChairsString": "Houari Sahraoui",
            "Chairs": [ "Houari Sahraoui"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p19", "p31", "p37", "p43"]
        },

        {
            "Id": "testing1Id",
            "Title": "Testing I",
            "ShortTitle": "Testing I",
            "Type": "Research Track",
            "Key": "testing1",
            "Day": "2014-09-17",
            "Time": "10:30 - 12:30",
            "Location": "Room 301",
            "LocationIndex": 2,
            "ChairsString": "Corina Pasarenau",
            "Chairs": [ "Corina Pasarenau"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p55", "p67", "p79", "p91", "p97"]
        },

        {
            "Id": "dataMining1Id",
            "Title": "Data Mining I",
            "ShortTitle": "Data Mining I",
            "Type": "Research Track",
            "Key": "dataMining1",
            "Day": "2014-09-17",
            "Time": "10:30 - 12:30",
            "Location": "Congress hall",
            "LocationIndex": 1,
            "ChairsString": "Jane Cleland-Huang",
            "Chairs": [ "Jane Cleland-Huang"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p103", "p115", "p121", "p127"]
        },
        {
            "Id": "variabilityAndConfigurationId",
            "Title": "Variability and Configuration",
            "ShortTitle": "Variability and Configuration",
            "Type": "Research Track",
            "Key": "variabilityAndConfiguration",
            "Day": "2014-09-17",
            "Time": "14:00 - 15:30",
            "Location": "Room 301",
            "LocationIndex": 2,
            "ChairsString": "Charles Pecheur",
            "Chairs": [ "Charles Pecheur"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p139", "p151", "p163"]
        },
        {
            "Id": "abstractionId",
            "Title": "Abstraction",
            "ShortTitle": "Abstraction",
            "Type": "Research Track",
            "Key": "abstraction",
            "Day": "2014-09-17",
            "Time": "14:00 - 15:30",
            "Location": "Room 302",
            "LocationIndex": 3,
            "ChairsString": "Tevfik Bultan",
            "Chairs": [ "Tevfik Bultan"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p175", "p187", "p199"]
        },
        {
            "Id": "componentsId",
            "Title": "Components",
            "ShortTitle": "Components",
            "Type": "Research Track",
            "Key": "components",
            "Day": "2014-09-17",
            "Time": "16:00 - 17:30",
            "Location": "Congress hall",
            "LocationIndex": 1,
            "ChairsString": "Shiva Nejati",
            "Chairs": [ "Shiva Nejati"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p211", "p223", "p235"]
        },

        {
            "Id": "symbolicExecution1Id",
            "Title": "Symbolic Execution I",
            "ShortTitle": "Symbolic Execution I",
            "Type": "Research Track",
            "Key": "symbolicExecution1",
            "Day": "2014-09-17",
            "Time": "16:00 - 17:30",
            "Location": "Room 301",
            "LocationIndex": 2,
            "ChairsString": "Mike Whalen",
            "Chairs": [ "Mike Whalen"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p247", "p259", "p271"]
        },

        {
            "Id": "transformations1Id",
            "Title": "Transformations I",
            "ShortTitle": "Transformations I",
            "Type": "Research Track",
            "Key": "transformations1",
            "Day": "2014-09-17",
            "Time": "16:00 - 17:30",
            "Location": "Room 302",
            "LocationIndex": 3,
            "ChairsString": "Bernd Fischer",
            "Chairs": [ "Bernd Fischer"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p277", "p289", "p301"]
        },

        {
            "Id": "changeManagementId",
            "Title": "Change Management",
            "ShortTitle": "Change Management",
            "Type": "Research Track",
            "Key": "changeManagement",
            "Day": "2014-09-18",
            "Time": "10:30 - 12:30",
            "Location": "Congress Hall",
            "LocationIndex": 1,
            "ChairsString": "Yuriy Brun",
            "Chairs": [ "Yuriy Brun"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p313", "p325", "p331", "p337", "p343", "p349"]
        },

        {
            "Id": "testingIIId",
            "Title": "Testing II",
            "ShortTitle": "Testing II",
            "Type": "Research Track",
            "Key": "testingII",
            "Day": "2014-09-18",
            "Time": "10:30 - 12:30",
            "Location": "Room 301",
            "LocationIndex": 2,
            "ChairsString": "John Grundy",
            "Chairs": [ "John Grundy"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p361", "p373", "p385", "p397"]
        },

        {
            "Id": "productLinesId",
            "Title": "Product Lines",
            "ShortTitle": "Product Lines",
            "Type": "Research Track",
            "Key": "productLines",
            "Day": "2014-09-18",
            "Time": "10:30 - 12:30",
            "Location": "Room 302",
            "LocationIndex": 3,
            "ChairsString": "Motoshi Saeki",
            "Chairs": [ "Motoshi Saeki"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p409", "p421", "p433", "p445"]
        },

        {
            "Id": "dataMiningIIId",
            "Title": "Data Mining II",
            "ShortTitle": "Data Mining II",
            "Type": "Research Track",
            "Key": "dataMiningII",
            "Day": "2014-09-18",
            "Time": "14:00 - 15:30",
            "Location": "Congress hall",
            "LocationIndex": 1,
            "ChairsString": "Darko Marinov",
            "Chairs": [ "Darko Marinov"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p457", "p469", "p479", "p485"]
        },

        {
            "Id": "analysisOfWebApplicationsId",
            "Title": "Analysis of Web Applications",
            "ShortTitle": "Analysis of Web Applications",
            "Type": "Research Track",
            "Key": "analysisOfWebApplications",
            "Day": "2014-09-18",
            "Time": "14:00 - 15:30",
            "Location": "Room 301",
            "LocationIndex": 2,
            "ChairsString": "Arie Gurfinkel",
            "Chairs": [ "Arie Gurfinkel"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p491", "p503", "p515"]
        },

        {
            "Id": "ModelDrivenEngineeringId",
            "Title": "Model-Driven Engineering",
            "ShortTitle": "Model-Driven Engineering",
            "Type": "Research Track",
            "Key": "analysisOfWebApplications",
            "Day": "2014-09-18",
            "Time": "14:00 - 15:30",
            "Location": "Room 302",
            "LocationIndex": 3,
            "ChairsString": "Michel Chaudron",
            "Chairs": [ "Michel Chaudron"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p527", "p539", "p551", "p557"]
        },

        {
            "Id": "SymbolicExecutionIIId",
            "Title": "Symbolic Execution II",
            "ShortTitle": "Symbolic Execution II",
            "Type": "Research Track",
            "Key": "symbolicExecutionII",
            "Day": "2014-09-18",
            "Time": "16:00 - 17:30",
            "Location": "Congress hall",
            "LocationIndex": 1,
            "ChairsString": "Michael Lowry",
            "Chairs": [ "Michael Lowry"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p563", "p575", "p587"]
        },

        {
            "Id": "SpecificationAndDebuggingId",
            "Title": "Specification and Debugging",
            "ShortTitle": "Specification and Debugging",
            "Type": "Research Track",
            "Key": "SpecificationAndDebugging",
            "Day": "2014-09-18",
            "Time": "16:00 - 17:30",
            "Location": "Room 301",
            "LocationIndex": 2,
            "ChairsString": "David Lo",
            "Chairs": [ "David Lo"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p599", "p605", "p611", "p623", "p629"]
        },

        {
            "Id": "TransformationsIIId",
            "Title": "Transformations II",
            "ShortTitle": "Transformations II",
            "Type": "Research Track",
            "Key": "TransformationsII",
            "Day": "2014-09-18",
            "Time": "16:00 - 17:30",
            "Location": "Room 302",
            "LocationIndex": 3,
            "ChairsString": "Gabriele Taentzer",
            "Chairs": [ "Gabriele Taentzer"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p635", "p647"]
        },

        {
            "Id": "HumanFactorsId",
            "Title": "Human Factors",
            "ShortTitle": "Human Factors",
            "Type": "Research Track",
            "Key": "HumanFactors",
            "Day": "2014-09-19",
            "Time": "10:30 - 12:30",
            "Location": "Congress Hall",
            "LocationIndex": 1,
            "ChairsString": "Michael Goedicke",
            "Chairs": [ "Michael Goedicke"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p689", "p695", "p653", "p665", "p677", "p683"]
        },

        {
            "Id": "VerificationId",
            "Title": "Verification",
            "ShortTitle": "Verification",
            "Type": "Research Track",
            "Key": "Verification",
            "Day": "2014-09-19",
            "Time": "10:30 - 12:45",
            "Location": "Room 301",
            "LocationIndex": 2,
            "ChairsString": "Radu Calinescu",
            "Chairs": [ "Radu Calinescu"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p701", "p713", "p725", "p731", "p743"]
        },

        {
            "Id": "RequirementsEngineeringId",
            "Title": "Requirements Engineering",
            "ShortTitle": "Requirements Engineering",
            "Type": "Research Track",
            "Key": "RequirementsEngineering",
            "Day": "2014-09-19",
            "Time": "14:00 - 15:30",
            "Location": "Congress Hall",
            "LocationIndex": 1,
            "ChairsString": "Myra Cohen",
            "Chairs": [ "Myra Cohen"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p755", "p767", "p779", "p785"]
        },

        {
            "Id": "Bug LocalizationId",
            "Title": "Bug Localization",
            "ShortTitle": "Bug Localization",
            "Type": "Research Track",
            "Key": "BugLocalization",
            "Day": "2014-09-19",
            "Time": "14:00 - 15:30",
            "Location": "Room 301",
            "LocationIndex": 2,
            "ChairsString": "Tien Nguyen",
            "Chairs": [ "Tien Nguyen"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p791", "p803", "p815"]
        },

        {
            "Id": "ToolTeasersId",
            "Title": "Tool Teasers",
            "ShortTitle": "Tool Teasers",
            "Type": "Demo Track",
            "Key": "ToolTeasers",
            "Day": "2014-09-17",
            "Time": "10:30 - 12:30",
            "Location": "Room 302",
            "LocationIndex": 3,
            "ChairsString": "Arie Gurfinkel, Gabriele Taentzer",
            "Chairs": [ "Arie Gurfinkel", "Gabriele Taentzer"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p827", "p831", "p835", "p839", "p843", "p851", "p855", "p859", "p863", "p867", "p871"]
        },

        {
            "Id": "ToolDemonstrationId",
            "Title": "Tool Demonstration",
            "ShortTitle": "Tool Demonstration",
            "Type": "Demo Track",
            "Key": "ToolDemonstration",
            "Day": "2014-09-17",
            "Time": "13:00 - 14:00",
            "Location": "Room 302",
            "LocationIndex": 3,
            "ChairsString": "Arie Gurfinkel, Gabriele Taentzer",
            "Chairs": [ "Arie Gurfinkel", "Gabriele Taentzer"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p827", "p831", "p835", "p839", "p843", "p851", "p855", "p859", "p863", "p867", "p871"]
        },

        {
            "Id": "DoctoralSymposiumId",
            "Title": "Doctoral Symposium",
            "ShortTitle": "Doctoral Symposium",
            "Type": "Doctoral Symposium",
            "Key": "DoctoralSymposium",
            "Day": "2014-09-15",
            "Time": "08:40 - 17:30",
            "Location": "TBA",
            "LocationIndex": 4,
            "ChairsString": "Lars Grunske, Michael Whalen",
            "Chairs": [ "Lars Grunske", "Michael Whalen"],
            "Comment": "",
            "Abstract": "",
            "Items": [ "p875", "p879", "p883", "p887", "p891", "p895", "p899", "p903", "p907", "p911"]
        }
	],

	"People": 
	[{
    "Name": "Ivica Crnkovic",
    "Affiliation": "Malardalen University",
    "Key": "IvicaCrnkovic"
}, {
    "Name": "Marsha Chechik",
    "Affiliation": "University of Toronto",
    "Key": "MarshaChechik"
}, {
    "Name": "Paul Grunbacher",
    "Affiliation": "Johannes Kepler Universitat Linz",
    "Key": "PaulGrunbacher"
}, {
    "Name": "Luciano Floridi",
    "Affiliation": "University of Oxford",
    "Key": "LucianoFloridi"
}, {
    "Name": "Andrei Voronkov",
    "Affiliation": "University of Manchester",
    "Key": "AndreiVoronkov"
}, {
    "Name": "Magnus Larsson",
    "Affiliation": "India Development Center",
    "Key": "MagnusLarsson"
}, {
    "Name": "Alexander Tarvo",
    "Affiliation": "Brown University",
    "Key": "AlexanderTarvo"
}, {
    "Name": "Steven P. Reiss",
    "Affiliation": "Brown University",
    "Key": "StevenP.Reiss"
}, {
    "Name": "Tony Ohmann",
    "Affiliation": "University of Massachusetts",
    "Key": "TonyOhmann"
}, {
    "Name": "Michael Herzberg",
    "Affiliation": "University of Massachusetts",
    "Key": "MichaelHerzberg"
}, {
    "Name": "Sebastian Fiss",
    "Affiliation": "University of Massachusetts",
    "Key": "SebastianFiss"
}, {
    "Name": "Armand Halbert",
    "Affiliation": "University of Massachusetts",
    "Key": "ArmandHalbert"
}, {
    "Name": "Marc Palyart",
    "Affiliation": "University of British Columbia",
    "Key": "MarcPalyart"
}, {
    "Name": "Ivan Beschastnikh",
    "Affiliation": "University of British Columbia",
    "Key": "IvanBeschastnikh"
}, {
    "Name": "Yuriy Brun",
    "Affiliation": "University of Massachusetts",
    "Key": "YuriyBrun"
}, {
    "Name": "Peter Dinges",
    "Affiliation": "University of Illinois",
    "Key": "PeterDinges"
}, {
    "Name": "Gul Agha",
    "Affiliation": "University of Illinois",
    "Key": "GulAgha"
}, {
    "Name": "Vijay Krishna Palepu",
    "Affiliation": "University of California, Irvine",
    "Key": "VijayKrishnaPalepu"
}, {
    "Name": "James A. Jones",
    "Affiliation": "University of California, Irvine",
    "Key": "JamesA.Jones"
}, {
    "Name": "Kartik Bajaj",
    "Affiliation": "University of British Columbia",
    "Key": "KartikBajaj"
}, {
    "Name": "Karthik Pattabiraman",
    "Affiliation": "University of British Columbia",
    "Key": "KarthikPattabiraman"
}, {
    "Name": "Ali Mesbah",
    "Affiliation": "University of British Columbia",
    "Key": "AliMesbah"
}, {
    "Name": "Jose Campos",
    "Affiliation": "University of Sheffield",
    "Key": "JoseCampos"
}, {
    "Name": "Andrea Arcuri",
    "Affiliation": "Simula Research Laboratory",
    "Key": "AndreaArcuri"
}, {
    "Name": "Gordon Fraser",
    "Affiliation": "University of Sheffield",
    "Key": "GordonFraser"
}, {
    "Name": "Rui Abreu",
    "Affiliation": "University of Porto",
    "Key": "RuiAbreu"
}, {
    "Name": "Amin Milani Fard",
    "Affiliation": "University of British Columbia",
    "Key": "AminMilaniFard"
}, {
    "Name": "Mehdi Mirzaaghaei",
    "Affiliation": "University of British Columbia",
    "Key": "MehdiMirzaaghaei"
}, {
    "Name": "Ali Mesbah",
    "Affiliation": "University of British Columbia",
    "Key": "AliMesbah"
}, {
    "Name": "Andrea Arcuri",
    "Affiliation": "Simula Research Laboratory",
    "Key": "AndreaArcuri"
}, {
    "Name": "Gordon Fraser",
    "Affiliation": "University of Sheffield",
    "Key": "GordonFraser"
}, {
    "Name": "Juan Pablo Galeotti",
    "Affiliation": "Saarland University",
    "Key": "JuanPabloGaleotti"
}, {
    "Name": "Sonal Mahajan",
    "Affiliation": "University of Southern California",
    "Key": "SonalMahajan"
}, {
    "Name": "William G. J. Halfond",
    "Affiliation": "University of Southern California",
    "Key": "WilliamG.J.Halfond"
}, {
    "Name": "Ajitha Rajan",
    "Affiliation": "University of Edinburgh",
    "Key": "AjithaRajan"
}, {
    "Name": "Subodh Sharma",
    "Affiliation": "University of Oxford",
    "Key": "SubodhSharma"
}, {
    "Name": "Peter Schrammel",
    "Affiliation": "University of Oxford",
    "Key": "PeterSchrammel"
}, {
    "Name": "Daniel Kroening",
    "Affiliation": "University of Oxford",
    "Key": "DanielKroening"
}, {
    "Name": "Steven P. Reiss",
    "Affiliation": "Brown University",
    "Key": "StevenP.Reiss"
}, {
    "Name": "Ting Ye",
    "Affiliation": "Peking University & Ministry of Education",
    "Key": "TingYe"
}, {
    "Name": "Bing Xie",
    "Affiliation": "Peking University & Ministry of Education",
    "Key": "BingXie"
}, {
    "Name": "Yanzhen Zou",
    "Affiliation": "Peking University & Ministry of Education",
    "Key": "YanzhenZou"
}, {
    "Name": "Xiuzhao Chen",
    "Affiliation": "Peking University",
    "Key": "XiuzhaoChen"
}, {
    "Name": "Jihun Park",
    "Affiliation": "Korea Advanced Institute of Science and Technology",
    "Key": "JihunPark"
}, {
    "Name": "Miryung Kim",
    "Affiliation": "The University of Texas at Austin",
    "Key": "MiryungKim"
}, {
    "Name": "Doo-Hwan Bae",
    "Affiliation": "Korea Advanced Institute of Science and Technology",
    "Key": "Doo-HwanBae"
}, {
    "Name": "Lucia",
    "Affiliation": "Singapore Management University",
    "Key": "Lucia"
}, {
    "Name": "David Lo",
    "Affiliation": "Singapore Management University",
    "Key": "DavidLo"
}, {
    "Name": "Xin Xia",
    "Affiliation": "Zhejiang University",
    "Key": "XinXia"
}, {
    "Name": "Sergio Segura",
    "Affiliation": "University of Seville",
    "Key": "SergioSegura"
}, {
    "Name": "Ana B. Sanchez",
    "Affiliation": "University of Seville",
    "Key": "AnaBSanchez"
}, {
    "Name": "Antonio Ruiz-Cortes",
    "Affiliation": "University of Seville",
    "Key": "AntonioRuiz-Cortes"
}, {
    "Name": "Dongpu Jin",
    "Affiliation": "University of Nebraska-Lincoln",
    "Key": "DongpuJin"
}, {
    "Name": "Myra B. Cohen",
    "Affiliation": "University of Nebraska-Lincoln",
    "Key": "MyraBCohen"
}, {
    "Name": "Xiao Qu",
    "Affiliation": "ABB Corporate Research",
    "Key": "XiaoQu"
}, {
    "Name": "Brian Robinson",
    "Affiliation": "ABB Inc",
    "Key": "BrianRobinson"
}, {
    "Name": "Reza Matinnejad",
    "Affiliation": "University of Luxembourg",
    "Key": "RezaMatinnejad"
}, {
    "Name": "Shiva Nejati",
    "Affiliation": "University of Luxembourg",
    "Key": "ShivaNejati"
}, {
    "Name": "Lionel C. Briand",
    "Affiliation": "University of Luxembourg",
    "Key": "LionelC.Briand"
}, {
    "Name": "Thomas Bruckmann",
    "Affiliation": "Delphi Automotive Systems",
    "Key": "ThomasBruckmann"
}, {
    "Name": "Markus Kusano",
    "Affiliation": "Virginia Tech",
    "Key": "MarkusKusano"
}, {
    "Name": "Chao Wang",
    "Affiliation": "Virginia Tech",
    "Key": "ChaoWang"
}, {
    "Name": "Yueqi Li",
    "Affiliation": "Hong Kong University of Science and Technology",
    "Key": "YueqiLi"
}, {
    "Name": "Shing Chi Cheung",
    "Affiliation": "Hong Kong University of Science and Technology",
    "Key": "ShingChiCheung"
}, {
    "Name": "Wenhua Yang",
    "Affiliation": "Nanjing University",
    "Key": "WenhuaYang"
}, {
    "Name": "Chang Xu",
    "Affiliation": "Nanjing University",
    "Key": "ChangXu"
}, {
    "Name": "Yepang Liu",
    "Affiliation": "The Hong Kong University of Science and Technology",
    "Key": "YepangLiu"
}, {
    "Name": "Chun Cao",
    "Affiliation": "Nanjing University",
    "Key": "ChunCao"
}, {
    "Name": "Xiaoxing Ma",
    "Affiliation": "Nanjing University",
    "Key": "XiaoxingMa"
}, {
    "Name": "Jian Lu",
    "Affiliation": "Nanjing University",
    "Key": "JianLu"
}, {
    "Name": "Roberto Di Cosmo",
    "Affiliation": "Universite Paris Diderot",
    "Key": "RobertoDiCosmo"
}, {
    "Name": "Michael Lienhardt",
    "Affiliation": "Universite Paris Diderot",
    "Key": "MichaelLienhardt"
}, {
    "Name": "Ralf Treinen",
    "Affiliation": "Universite Paris Diderot",
    "Key": "RalfTreinen"
}, {
    "Name": "Stefano Zacchiroli",
    "Affiliation": "Universite Paris Diderot",
    "Key": "StefanoZacchiroli"
}, {
    "Name": "Jakub Zwolakowski",
    "Affiliation": "Universite Paris Diderot",
    "Key": "JakubZwolakowski"
}, {
    "Name": "Antoine Eiche",
    "Affiliation": "Mandriva",
    "Key": "AntoineEiche"
}, {
    "Name": "Alexis Agahi",
    "Affiliation": "Kyriba Corporation",
    "Key": "AlexisAgahi"
}, {
    "Name": "Erik Osterlund",
    "Affiliation": "Linnaeus University",
    "Key": "ErikOsterlund"
}, {
    "Name": "Welf Lowe",
    "Affiliation": "Linnaeus University",
    "Key": "WelfLowe"
}, {
    "Name": "Ernest Wozniak",
    "Affiliation": "CEA LIST & McGill University",
    "Key": "ErnestWozniak"
}, {
    "Name": "Marco Di Natale",
    "Affiliation": "Scuola Superiore Sant'Anna",
    "Key": "MarcoDiNatale"
}, {
    "Name": "Haibo Zeng",
    "Affiliation": "McGill University",
    "Key": "HaiboZeng"
}, {
    "Name": "Chokri Mraidha",
    "Affiliation": "CEA LIST",
    "Key": "ChokriMraidha"
}, {
    "Name": "Sara Tucci-Piergiovanni",
    "Affiliation": "CEA LIST",
    "Key": "SaraTucci-Piergiovanni"
}, {
    "Name": "Sebastien Gerard",
    "Affiliation": "CEA LIST",
    "Key": "SebastienGerard"
}, {
    "Name": "Anthony Romano",
    "Affiliation": "Stanford University",
    "Key": "AnthonyRomano"
}, {
    "Name": "Dawson R. Engler",
    "Affiliation": "Stanford University",
    "Key": "DawsonREngler"
}, {
    "Name": "Scott Kausler",
    "Affiliation": "Boise State University",
    "Key": "ScottKausler"
}, {
    "Name": "Elena Sherman",
    "Affiliation": "Boise State University",
    "Key": "ElenaSherman"
}, {
    "Name": "Sarmad Makhdoom",
    "Affiliation": "LUMS School of Science and Engineering",
    "Key": "SarmadMakhdoom"
}, {
    "Name": "Muhammad Adeel Khan",
    "Affiliation": "LUMS School of Science and Engineering",
    "Key": "MuhammadAdeelKhan"
}, {
    "Name": "Junaid Haroon Siddiqui",
    "Affiliation": "LUMS School of Science and Engineering",
    "Key": "JunaidHaroonSiddiqui"
}, {
    "Name": "Julian James Stephen",
    "Affiliation": "Purdue University",
    "Key": "JulianJamesStephen"
}, {
    "Name": "Savvas Savvides",
    "Affiliation": "Purdue University",
    "Key": "SavvasSavvides"
}, {
    "Name": "Russell Seidel",
    "Affiliation": "Purdue University",
    "Key": "RussellSeidel"
}, {
    "Name": "Patrick Eugster",
    "Affiliation": "Purdue University",
    "Key": "PatrickEugster"
}, {
    "Name": "Hani Abdeen",
    "Affiliation": "Universite de Montreal",
    "Key": "HaniAbdeen"
}, {
    "Name": "Daniel Varra³",
    "Affiliation": "Budapest University of Technology and Economics",
    "Key": "DanielVarra³"
}, {
    "Name": "Houari Sahraoui",
    "Affiliation": "Universite de Montreal",
    "Key": "HouariSahraoui"
}, {
    "Name": "Andras Szabolcs Nagy",
    "Affiliation": "Budapest University of Technology and Economics",
    "Key": "AndrasSzabolcsNagy"
}, {
    "Name": "Abel Hegedus",
    "Affiliation": "Budapest University of Technology and Economics",
    "Key": "AbelHegedus"
}, {
    "Name": "Akos Horvath",
    "Affiliation": "Budapest University of Technology and Economics",
    "Key": "AkosHorvath"
}, {
    "Name": "Csaba Debreceni",
    "Affiliation": "Budapest University of Technology and Economics",
    "Key": "CsabaDebreceni"
}, {
    "Name": "Bryan Marker",
    "Affiliation": "The University of Texas at Austin",
    "Key": "BryanMarker"
}, {
    "Name": "Don Batory",
    "Affiliation": "The University of Texas at Austin",
    "Key": "DonBatory"
}, {
    "Name": "Robert van de Geijn",
    "Affiliation": "The University of Texas at Austin",
    "Key": "RobertvandeGeijn"
}, {
    "Name": "Jean-Remy Falleri",
    "Affiliation": "Universite Bordeaux",
    "Key": "Jean-RemyFalleri"
}, {
    "Name": "Floreal Morandat",
    "Affiliation": "Universite Bordeaux",
    "Key": "FlorealMorandat"
}, {
    "Name": "Xavier Blanc",
    "Affiliation": "Universite Bordeaux",
    "Key": "XavierBlanc"
}, {
    "Name": "Matias Martinez",
    "Affiliation": "INRIA & University of Lille",
    "Key": "MatiasMartinez"
}, {
    "Name": "Martin Montperrus",
    "Affiliation": "INRIA & University of Lille",
    "Key": "MartinMontperrus"
}, {
    "Name": "Yguarata Cerqueira Cavalcanti",
    "Affiliation": "Brazilian Federal Data Processing Service & Federal University of Pernambuco",
    "Key": "YguarataCerqueiraCavalcanti"
}, {
    "Name": "Ivan do Carmo Machado",
    "Affiliation": "Federal University of Bahia",
    "Key": "IvandoCarmoMachado"
}, {
    "Name": "Paulo A. da Mota S. Neto",
    "Affiliation": "Federal University of Pernambuco",
    "Key": "PauloA.daMotaS.Neto"
}, {
    "Name": "Eduardo Santana de Almeida",
    "Affiliation": "Federal University of Bahia",
    "Key": "EduardoSantanadeAlmeida"
}, {
    "Name": "Silvio Romero de Lemos Meira",
    "Affiliation": "Federal University of Pernambuco",
    "Key": "SilvioRomerodeLemosMeira"
}, {
    "Name": "Wiem Mkaouer",
    "Affiliation": "University of Michigan",
    "Key": "WiemMkaouer"
}, {
    "Name": "Marouane Kessentini",
    "Affiliation": "University of Michigan",
    "Key": "MarouaneKessentini"
}, {
    "Name": "Slim Bechikh",
    "Affiliation": "University of Michigan",
    "Key": "SlimBechikh"
}, {
    "Name": "Kalyanmoy Deb",
    "Affiliation": "Michigan State University",
    "Key": "KalyanmoyDeb"
}, {
    "Name": "Mel O Cinneide",
    "Affiliation": "University College Dublin",
    "Key": "MelOCinneide"
}, {
    "Name": "Gabriele Bavota",
    "Affiliation": "University of Sannio",
    "Key": "GabrieleBavota"
}, {
    "Name": "Sebastiano Panichella",
    "Affiliation": "University of Sannio",
    "Key": "SebastianoPanichella"
}, {
    "Name": "Nikolaos Tsantalis",
    "Affiliation": "Concordia University",
    "Key": "NikolaosTsantalis"
}, {
    "Name": "Massimiliano Di Penta",
    "Affiliation": "University of Sannio",
    "Key": "MassimilianoDiPenta"
}, {
    "Name": "Rocco Oliveto",
    "Affiliation": "University of Molise",
    "Key": "RoccoOliveto"
}, {
    "Name": "Gerardo Canfora",
    "Affiliation": "University of Sannio",
    "Key": "GerardoCanfora"
}, {
    "Name": "Haipeng Cai",
    "Affiliation": "University of Notre Dame",
    "Key": "HaipengCai"
}, {
    "Name": "Raul Santelices",
    "Affiliation": "University of Notre Dame",
    "Key": "RaulSantelices"
}, {
    "Name": "Dennis Felsing",
    "Affiliation": "Karlsruhe Institute of Technology",
    "Key": "DennisFelsing"
}, {
    "Name": "Sarah Grebing",
    "Affiliation": "Karlsruhe Institute of Technology",
    "Key": "SarahGrebing"
}, {
    "Name": "Vladimir Klebanov",
    "Affiliation": "Karlsruhe Institute of Technology",
    "Key": "VladimirKlebanov"
}, {
    "Name": "Philipp Rummer",
    "Affiliation": "Uppsala University",
    "Key": "PhilippRummer"
}, {
    "Name": "Mattias Ulbrich",
    "Affiliation": "Karlsruhe Institute of Technology",
    "Key": "MattiasUlbrich"
}, {
    "Name": "Milos Gligoric",
    "Affiliation": "University of Illinois at Urbana-Champaign",
    "Key": "MilosGligoric"
}, {
    "Name": "Stas Negara",
    "Affiliation": "University of Illinois at Urbana-Champaign",
    "Key": "StasNegara"
}, {
    "Name": "Owolabi Legunsen",
    "Affiliation": "University of Illinois at Urbana-Champaign",
    "Key": "OwolabiLegunsen"
}, {
    "Name": "Darko Marinov",
    "Affiliation": "University of Illinois at Urbana-Champaign",
    "Key": "DarkoMarinov"
}, {
    "Name": "Dimitra Giannakopoulou",
    "Affiliation": "NASA Ames Research Center",
    "Key": "DimitraGiannakopoulou"
}, {
    "Name": "Falk Howar",
    "Affiliation": "Carnegie Mellon University Silicon Valley",
    "Key": "FalkHowar"
}, {
    "Name": "Malte Isberner",
    "Affiliation": "TU Dortmund",
    "Key": "MalteIsberner"
}, {
    "Name": "Todd Lauderdale",
    "Affiliation": "NASA Ames Research Center",
    "Key": "ToddLauderdale"
}, {
    "Name": "Zvonimir Rakamaric",
    "Affiliation": "University of Utah",
    "Key": "ZvonimirRakamaric"
}, {
    "Name": "Vishwanath Raman",
    "Affiliation": "FireEye, Inc.",
    "Key": "VishwanathRaman"
}, {
    "Name": "Nikolai Tillmann",
    "Affiliation": "Microsoft Research",
    "Key": "NikolaiTillmann"
}, {
    "Name": "Jonathan de Halleux",
    "Affiliation": "Microsoft Research",
    "Key": "JonathandeHalleux"
}, {
    "Name": "Tao Xie",
    "Affiliation": "University of Illinois at Urbana-Champaign",
    "Key": "TaoXie"
}, {
    "Name": "Mark Harman",
    "Affiliation": "University College London",
    "Key": "MarkHarman"
}, {
    "Name": "Yue Jia",
    "Affiliation": "University College London",
    "Key": "YueJia"
}, {
    "Name": "Pedro Reales Mateo",
    "Affiliation": "University of Castilla-La Mancha",
    "Key": "PedroRealesMateo"
}, {
    "Name": "Macario Polo",
    "Affiliation": "University of Castilla-La Mancha",
    "Key": "MacarioPolo"
}, {
    "Name": "Jianmei Guo",
    "Affiliation": "University of Waterloo",
    "Key": "JianmeiGuo"
}, {
    "Name": "Edward Zulkoski",
    "Affiliation": "University of Waterloo",
    "Key": "EdwardZulkoski"
}, {
    "Name": "Rafael Olaechea",
    "Affiliation": "University of Waterloo",
    "Key": "RafaelOlaechea"
}, {
    "Name": "Derek Rayside",
    "Affiliation": "University of Waterloo",
    "Key": "DerekRayside"
}, {
    "Name": "Krzysztof Czarnecki",
    "Affiliation": "University of Waterloo",
    "Key": "KrzysztofCzarnecki"
}, {
    "Name": "Sven Apel",
    "Affiliation": "University of Passau",
    "Key": "SvenApel"
}, {
    "Name": "Joanne M. Atlee",
    "Affiliation": "University of Waterloo",
    "Key": "JoanneM.Atlee"
}, {
    "Name": "Iago Abal",
    "Affiliation": "IT University of Copenhagen",
    "Key": "IagoAbal"
}, {
    "Name": "Claus Brabrand",
    "Affiliation": "IT University of Copenhagen",
    "Key": "ClausBrabrand"
}, {
    "Name": "Andrzej Wasowski",
    "Affiliation": "IT University of Copenhagen",
    "Key": "AndrzejWasowski"
}, {
    "Name": "Guillaume Becan",
    "Affiliation": "Inria - IRISA",
    "Key": "GuillaumeBecan"
}, {
    "Name": "Nicolas Sannier",
    "Affiliation": "Inria - IRISA",
    "Key": "NicolasSannier"
}, {
    "Name": "Mathieu Acher",
    "Affiliation": "Inria - IRISA",
    "Key": "MathieuAcher"
}, {
    "Name": "Olivier Barais",
    "Affiliation": "Inria - IRISA",
    "Key": "OlivierBarais"
}, {
    "Name": "Arnaud Blouin",
    "Affiliation": "Inria - IRISA",
    "Key": "ArnaudBlouin"
}, {
    "Name": "Benoit Baudry",
    "Affiliation": "Inria - IRISA",
    "Key": "BenoitBaudry"
}, {
    "Name": "Max Lillack",
    "Affiliation": "University of Leipzig",
    "Key": "MaxLillack"
}, {
    "Name": "Christian Kastner",
    "Affiliation": "Carnegie Mellon University",
    "Key": "ChristianKastner"
}, {
    "Name": "Eric Bodden",
    "Affiliation": "Fraunhofer SIT & TU Darmstadt",
    "Key": "EricBodden"
}, {
    "Name": "Anh Tuan Nguyen",
    "Affiliation": "Iowa State University",
    "Key": "AnhTuanNguyen"
}, {
    "Name": "Hoan Anh Nguyen",
    "Affiliation": "Iowa State University",
    "Key": "HoanAnhNguyen"
}, {
    "Name": "Tung Thanh Nguyen",
    "Affiliation": "Utah State University",
    "Key": "TungThanhNguyen"
}, {
    "Name": "Tien N. Nguyen",
    "Affiliation": "Iowa State University",
    "Key": "TienN.Nguyen"
}, {
    "Name": "Venkatesh-Prasad Ranganath",
    "Affiliation": "Kansas State University",
    "Key": "Venkatesh-PrasadRanganath"
}, {
    "Name": "Pradip Vallathol",
    "Affiliation": "University of Wisconsin-Madison",
    "Key": "PradipVallathol"
}, {
    "Name": "Pankaj Gupta",
    "Affiliation": "Microsoft Corporation",
    "Key": "PankajGupta"
}, {
    "Name": "Mona Rahimi",
    "Affiliation": "DePaul University",
    "Key": "MonaRahimi"
}, {
    "Name": "Jane Cleland-Huang",
    "Affiliation": "DePaul University",
    "Key": "JaneCleland-Huang"
}, {
    "Name": "Saeideh Hamidi",
    "Affiliation": "York University",
    "Key": "SaeidehHamidi"
}, {
    "Name": "Periklis Andritsos",
    "Affiliation": "University of Lausanne",
    "Key": "PeriklisAndritsos"
}, {
    "Name": "Sotirios Liaskos",
    "Affiliation": "York University",
    "Key": "SotiriosLiaskos"
}, {
    "Name": "Yuta Maezawa",
    "Affiliation": "The University of Tokyo",
    "Key": "YutaMaezawa"
}, {
    "Name": "Kazuki Nishiura",
    "Affiliation": "The University of Tokyo",
    "Key": "KazukiNishiura"
}, {
    "Name": "Shinichi Honiden",
    "Affiliation": "The University of Tokyo",
    "Key": "ShinichiHoniden"
}, {
    "Name": "Hironori Washizaki",
    "Affiliation": "Waseda University",
    "Key": "HironoriWashizaki"
}, {
    "Name": "Mark Hills",
    "Affiliation": "East Carolina University",
    "Key": "MarkHills"
}, {
    "Name": "Paul Klint",
    "Affiliation": "Centrum Wiskunde and Information",
    "Key": "PaulKlint"
}, {
    "Name": "Jurgen J. Vinju",
    "Affiliation": "Centrum Wiskunde and Information & INRIA Lille Nord Europe",
    "Key": "JurgenJVinju"
}, {
    "Name": "Feng Shen",
    "Affiliation": "University at Buffalo, The State University of New York",
    "Key": "FengShen"
}, {
    "Name": "Namita Vishnubhotla",
    "Affiliation": "University at Buffalo, The State University of New York",
    "Key": "NamitaVishnubhotla"
}, {
    "Name": "Chirag Todarka",
    "Affiliation": "University at Buffalo, The State University of New York",
    "Key": "ChiragTodarka"
}, {
    "Name": "Mohit Arora",
    "Affiliation": "University at Buffalo, The State University of New York",
    "Key": "MohitArora"
}, {
    "Name": "Babu Dhandapani",
    "Affiliation": "University at Buffalo, The State University of New York",
    "Key": "BabuDhandapani"
}, {
    "Name": "Eric John Lehner",
    "Affiliation": "University at Buffalo, The State University of New York",
    "Key": "EricJohnLehner"
}, {
    "Name": "Steven Y. Ko",
    "Affiliation": "University at Buffalo, The State University of New York",
    "Key": "StevenYKo"
}, {
    "Name": "Lukasz Ziarek",
    "Affiliation": "University at Buffalo, The State University of New York",
    "Key": "LukaszZiarek"
}, {
    "Name": "Gregory Gay",
    "Affiliation": "University of Minnesota",
    "Key": "GregoryGay"
}, {
    "Name": "Sanjai Rayadurgam",
    "Affiliation": "University of Minnesota",
    "Key": "SanjaiRayadurgam"
}, {
    "Name": "Mats P. E. Heimdahl",
    "Affiliation": "University of Minnesota",
    "Key": "MatsPEHeimdahl"
}, {
    "Name": "Zaur Molotnikov",
    "Affiliation": "Fortiss Institute",
    "Key": "ZaurMolotnikov"
}, {
    "Name": "Markus Volter",
    "Affiliation": "independent",
    "Key": "MarkusVolter"
}, {
    "Name": "Daniel Ratiu",
    "Affiliation": "Fortiss Institute",
    "Key": "DanielRatiu"
}, {
    "Name": "Tobias Kuschke",
    "Affiliation": "Technische Universitat Ilmenau",
    "Key": "TobiasKuschke"
}, {
    "Name": "Patrick Mader",
    "Affiliation": "Technische Universitat Ilmenau",
    "Key": "PatrickMader"
}, {
    "Name": "Naoyasu Ubayashi",
    "Affiliation": "Kyushu University",
    "Key": "NaoyasuUbayashi"
}, {
    "Name": "Di Ai",
    "Affiliation": "Kyushu University",
    "Key": "DiAi"
}, {
    "Name": "Peiyuan Li",
    "Affiliation": "Kyushu University",
    "Key": "PeiyuanLi"
}, {
    "Name": "Yu Ning Li",
    "Affiliation": "Kyushu University",
    "Key": "YuNingLi"
}, {
    "Name": "Shintaro Hosoai",
    "Affiliation": "Kyushu University",
    "Key": "ShintaroHosoai"
}, {
    "Name": "Yasutaka Kamei",
    "Affiliation": "Kyushu University",
    "Key": "YasutakaKamei"
}, {
    "Name": "Tomasz Kuchta",
    "Affiliation": "Imperial College London",
    "Key": "TomaszKuchta"
}, {
    "Name": "Cristian Cadar",
    "Affiliation": "Imperial College London",
    "Key": "CristianCadar"
}, {
    "Name": "Miguel Castro",
    "Affiliation": "Microsoft Research",
    "Key": "MiguelCastro"
}, {
    "Name": "Manuel Costa",
    "Affiliation": "Microsoft Research",
    "Key": "ManuelCosta"
}, {
    "Name": "Kasper Luckow",
    "Affiliation": "Aalborg University",
    "Key": "KasperLuckow"
}, {
    "Name": "Corina S. Pasareanu",
    "Affiliation": "CMU/NASA Ames Research Center",
    "Key": "CorinaSPasareanu"
}, {
    "Name": "Matthew B. Dwyer",
    "Affiliation": "University of Nebraska",
    "Key": "MatthewBDwyer"
}, {
    "Name": "Antonio Filieri",
    "Affiliation": "University of Stuttgart",
    "Key": "AntonioFilieri"
}, {
    "Name": "Willem Visser",
    "Affiliation": "University of Stellenbosch",
    "Key": "WillemVisser"
}, {
    "Name": "Joseph P. Near",
    "Affiliation": "Massachusetts Institute of Technology",
    "Key": "JosephP.Near"
}, {
    "Name": "Daniel Jackson",
    "Affiliation": "Massachusetts Institute of Technology",
    "Key": "DanielJackson"
}, {
    "Name": "Johanna Schneider",
    "Affiliation": "Daimler AG",
    "Key": "JohannaSchneider"
}, {
    "Name": "Hila Cohen",
    "Affiliation": "Tel Aviv University",
    "Key": "HilaCohen"
}, {
    "Name": "Shahar Maoz",
    "Affiliation": "Tel Aviv University",
    "Key": "ShaharMaoz"
}, {
    "Name": "Wenwen Wang",
    "Affiliation": "Chinese Academy of Sciences & University of Chinese Academy of Sciences",
    "Key": "WenwenWang"
}, {
    "Name": "Zhenjiang Wang",
    "Affiliation": "Chinese Academy of Sciences",
    "Key": "ZhenjiangWang"
}, {
    "Name": "Chenggang Wu",
    "Affiliation": "Chinese Academy of Sciences",
    "Key": "ChenggangWu"
}, {
    "Name": "Pen-Chung Yew",
    "Affiliation": "University of Minnesota at Twin-Cities",
    "Key": "Pen-ChungYew"
}, {
    "Name": "Xipeng Shen",
    "Affiliation": "College of William and Mary",
    "Key": "XipengShen"
}, {
    "Name": "Xiang Yuan",
    "Affiliation": "Chinese Academy of Sciences & University of Chinese Academy of Sciences",
    "Key": "XiangYuan"
}, {
    "Name": "Jianjun Li",
    "Affiliation": "Chinese Academy of Sciences",
    "Key": "JianjunLi"
}, {
    "Name": "Xiaobing Feng",
    "Affiliation": "Chinese Academy of Sciences",
    "Key": "XiaobingFeng"
}, {
    "Name": "Yong Guan",
    "Affiliation": "Capital Normal University",
    "Key": "YongGuan"
}, {
    "Name": "Tanzirul Azim",
    "Affiliation": "University of California, Riverside",
    "Key": "TanzirulAzim"
}, {
    "Name": "Iulian Neamtiu",
    "Affiliation": "University of California, Riverside",
    "Key": "IulianNeamtiu"
}, {
    "Name": "Lisa Marvel",
    "Affiliation": "US Army Research Laboratory",
    "Key": "LisaMarvel"
}, {
    "Name": "Shigeki Hagihara",
    "Affiliation": "Tokyo Institute of Technology",
    "Key": "ShigekiHagihara"
}, {
    "Name": "Naoki Egawa",
    "Affiliation": "Sony Computer Entertainment Inc.",
    "Key": "NaokiEgawa"
}, {
    "Name": "Masaya Shimakawa",
    "Affiliation": "Tokyo Institute of Technology",
    "Key": "MasayaShimakawa"
}, {
    "Name": "Naoki Yonezaki",
    "Affiliation": "Tokyo Institute of Technology",
    "Key": "NaokiYonezaki"
}, {
    "Name": "Chuangang Ren",
    "Affiliation": "The Pennsylvania State University",
    "Key": "ChuangangRen"
}, {
    "Name": "Kai Chen",
    "Affiliation": "Chinese Academy of Sciences",
    "Key": "KaiChen"
}, {
    "Name": "Peng Liu",
    "Affiliation": "The Pennsylvania State University",
    "Key": "PengLiu"
}, {
    "Name": "Alexander Bergmayr",
    "Affiliation": "Vienna University of Technology",
    "Key": "AlexanderBergmayr"
}, {
    "Name": "Javier Troya",
    "Affiliation": "Vienna University of Technology",
    "Key": "JavierTroya"
}, {
    "Name": "Manuel Wimmer",
    "Affiliation": "Vienna University of Technology",
    "Key": "ManuelWimmer"
}, {
    "Name": "Jun Lin",
    "Affiliation": "Nanyang Technological University And Beihang University",
    "Key": "JunLin"
}, {
    "Name": "Han Yu",
    "Affiliation": "Nanyang Technological University",
    "Key": "HanYu"
}, {
    "Name": "Zhiqi Shen",
    "Affiliation": "Nanyang Technological University",
    "Key": "ZhiqiShen"
}, {
    "Name": "Chunyan Miao",
    "Affiliation": "Nanyang Technological University",
    "Key": "ChunyanMiao"
}, {
    "Name": "Xiao Liu",
    "Affiliation": "The Pennsylvania State University",
    "Key": "XiaoLiu"
}, {
    "Name": "Dinghao Wu",
    "Affiliation": "The Pennsylvania State University",
    "Key": "DinghaoWu"
}, {
    "Name": "Rainer Lutz",
    "Affiliation": "University of Trier",
    "Key": "RainerLutz"
}, {
    "Name": "Stephan Diehl",
    "Affiliation": "University of Trier",
    "Key": "StephanDiehl"
}, {
    "Name": "Rohan Padhye",
    "Affiliation": "IBM Research India",
    "Key": "RohanPadhye"
}, {
    "Name": "Senthil Mani",
    "Affiliation": "IBM Research India",
    "Key": "SenthilMani"
}, {
    "Name": "Vibha Singhal Sinha",
    "Affiliation": "IBM Research India",
    "Key": "VibhaSinghalSinha"
}, {
    "Name": "Shaowei Wang",
    "Affiliation": "Singapore Management University",
    "Key": "ShaoweiWang"
}, {
    "Name": "David Lo",
    "Affiliation": "Singapore Management University",
    "Key": "DavidLo"
}, {
    "Name": "Lingxiao Jiang",
    "Affiliation": "Singapore Management University",
    "Key": "LingxiaoJiang"
}, {
    "Name": "Heidar Pirzadeh",
    "Affiliation": "hybris Canada, Inc.",
    "Key": "HeidarPirzadeh"
}, {
    "Name": "Sara Shanian",
    "Affiliation": "Laval University",
    "Key": "SaraShanian"
}, {
    "Name": "Jie Zhang",
    "Affiliation": "Peking University",
    "Key": "JieZhang"
}, {
    "Name": "Junjie Chen",
    "Affiliation": "Peking University",
    "Key": "JunjieChen"
}, {
    "Name": "Dan Hao",
    "Affiliation": "Peking University",
    "Key": "DanHao"
}, {
    "Name": "Yingfei Xiong",
    "Affiliation": "Peking University",
    "Key": "YingfeiXiong"
}, {
    "Name": "Bing Xie",
    "Affiliation": "Peking University",
    "Key": "BingXie"
}, {
    "Name": "Lu Zhang",
    "Affiliation": "Peking University",
    "Key": "LuZhang"
}, {
    "Name": "Hong Mei",
    "Affiliation": "Peking University",
    "Key": "HongMei"
}, {
    "Name": "Girish Maskeri Rama",
    "Affiliation": "Infosys Limited",
    "Key": "GirishMaskeriRama"
}, {
    "Name": "Raghavan Komondoor",
    "Affiliation": "Indian Institute of Science",
    "Key": "RaghavanKomondoor"
}, {
    "Name": "Kyle Dewey",
    "Affiliation": "University of California, Santa Barbara",
    "Key": "KyleDewey"
}, {
    "Name": "Jared Roesch",
    "Affiliation": "University of California, Santa Barbara",
    "Key": "JaredRoesch"
}, {
    "Name": "Ben Hardekopf",
    "Affiliation": "University of California, Santa Barbara",
    "Key": "BenHardekopf"
}, {
    "Name": "Sander van der Burg",
    "Affiliation": "Delft University of Technology",
    "Key": "SandervanderBurg"
}, {
    "Name": "Eelco Dolstra",
    "Affiliation": "LogicBlox, Inc.",
    "Key": "EelcoDolstra"
}, {
    "Name": "Shane McIntosh",
    "Affiliation": "Queen's University",
    "Key": "ShaneMcIntosh"
}, {
    "Name": "Julius Davies",
    "Affiliation": "University of British Columbia",
    "Key": "JuliusDavies"
}, {
    "Name": "Daniel M. German",
    "Affiliation": "University of Victoria",
    "Key": "DanielM.German"
}, {
    "Name": "Armijn Hemel",
    "Affiliation": "Tjaldur Software Governance Solutions",
    "Key": "ArmijnHemel"
}, {
    "Name": "Samik Basu",
    "Affiliation": "Iowa State University",
    "Key": "SamikBasu"
}, {
    "Name": "Tevfik Bultan",
    "Affiliation": "University of California at Santa Barbara",
    "Key": "TevfikBultan"
}, {
    "Name": "Jin Guo",
    "Affiliation": "DePaul University",
    "Key": "JinGuo"
}, {
    "Name": "Natawut Monaikul",
    "Affiliation": "DePaul University",
    "Key": "NatawutMonaikul"
}, {
    "Name": "Cody Plepel",
    "Affiliation": "DePaul University",
    "Key": "CodyPlepel"
}, {
    "Name": "Jane Cleland-Huang",
    "Affiliation": "DePaul University",
    "Key": "JaneCleland-Huang"
}, {
    "Name": "Samuel J. Ellis",
    "Affiliation": "Iowa State University",
    "Key": "SamuelJEllis"
}, {
    "Name": "Eric R. Henderson",
    "Affiliation": "Iowa State University",
    "Key": "EricRHenderson"
}, {
    "Name": "Titus H. Klinge",
    "Affiliation": "Iowa State University",
    "Key": "TitusHKlinge"
}, {
    "Name": "James I. Lathrop",
    "Affiliation": "Iowa State University",
    "Key": "JamesI.Lathrop"
}, {
    "Name": "Jack H. Lutz",
    "Affiliation": "Iowa State University",
    "Key": "JackHLutz"
}, {
    "Name": "Robyn R. Lutz",
    "Affiliation": "Iowa State University",
    "Key": "RobynRLutz"
}, {
    "Name": "Divita Mathur",
    "Affiliation": "Iowa State University",
    "Key": "DivitaMathur"
}, {
    "Name": "Andrew S. Miner",
    "Affiliation": "Iowa State University",
    "Key": "AndrewS.Miner"
}, {
    "Name": "Kushal Ahmed",
    "Affiliation": "Griffith University",
    "Key": "KushalAhmed"
}, {
    "Name": "M. A. Hakim Newton",
    "Affiliation": "Griffith University",
    "Key": "MAHakimNewton"
}, {
    "Name": "Lian Wen",
    "Affiliation": "Griffith University",
    "Key": "LianWen"
}, {
    "Name": "Abdul Sattar",
    "Affiliation": "Griffith University",
    "Key": "AbdulSattar"
}, {
    "Name": "Shuang Liu",
    "Affiliation": "National University of Singapore",
    "Key": "ShuangLiu"
}, {
    "Name": "Jun Sun",
    "Affiliation": "Singapore University of Technology and Design",
    "Key": "JunSun"
}, {
    "Name": "Yang Liu",
    "Affiliation": "Nanyang Technological University",
    "Key": "YangLiu"
}, {
    "Name": "Yue Zhang",
    "Affiliation": "Singapore University of Technology and Design",
    "Key": "YueZhang"
}, {
    "Name": "Bimlesh Wadhwa",
    "Affiliation": "National University of Singapore",
    "Key": "BimleshWadhwa"
}, {
    "Name": "Jin Song Dong",
    "Affiliation": "National University of Singapore",
    "Key": "JinSongDong"
}, {
    "Name": "Xinyu Wang",
    "Affiliation": "ZheJiang University",
    "Key": "XinyuWang"
}, {
    "Name": "Yu Cao",
    "Affiliation": "Tsinghua University",
    "Key": "YuCao"
}, {
    "Name": "Hongyu Zhang",
    "Affiliation": "Microsoft Research",
    "Key": "HongyuZhang"
}, {
    "Name": "Sun Ding",
    "Affiliation": "Nanyang Technological University",
    "Key": "SunDing"
}, {
    "Name": "Pavneet Singh Kochhar",
    "Affiliation": "Singapore Management University",
    "Key": "PavneetSinghKochhar"
}, {
    "Name": "Yuan Tian",
    "Affiliation": "Singapore Management University",
    "Key": "YuanTian"
}, {
    "Name": "David Lo",
    "Affiliation": "Singapore Management University",
    "Key": "DavidLo"
}, {
    "Name": "Daniele Zuddas",
    "Affiliation": "University of Milano - Bicocca",
    "Key": "DanieleZuddas"
}, {
    "Name": "Wei Jin",
    "Affiliation": "Georgia Institute of Technology",
    "Key": "WeiJin"
}, {
    "Name": "Fabrizio Pastore",
    "Affiliation": "University of Milano - Bicocca",
    "Key": "FabrizioPastore"
}, {
    "Name": "Leonardo Mariani",
    "Affiliation": "University of Milano - Bicocca",
    "Key": "LeonardoMariani"
}, {
    "Name": "Alessandro Orso",
    "Affiliation": "Georgia Institute of Technology",
    "Key": "AlessandroOrso"
}, {
    "Name": "Timo Kehrer",
    "Affiliation": "University of Siegen",
    "Key": "TimoKehrer"
}, {
    "Name": "Udo Kelter",
    "Affiliation": "University of Siegen",
    "Key": "UdoKelter"
}, {
    "Name": "Dennis Reuling",
    "Affiliation": "University of Siegen",
    "Key": "DennisReuling"
}, {
    "Name": "Jesaºs J. La³pez-Fernandez",
    "Affiliation": "Universidad Auta³noma de Madrid",
    "Key": "JesaºsJ.La³pez-Fernandez"
}, {
    "Name": "Esther Guerra",
    "Affiliation": "Universidad Auta³noma de Madrid",
    "Key": "EstherGuerra"
}, {
    "Name": "Juan de Lara",
    "Affiliation": "Universidad Auta³noma de Madrid",
    "Key": "JuandeLara"
}, {
    "Name": "Zhiyi Ma",
    "Affiliation": "Peking University",
    "Key": "ZhiyiMa"
}, {
    "Name": "Chih-Yi Yeh",
    "Affiliation": "Peking University",
    "Key": "ChihYiYeh"
}, {
    "Name": "Huihong He",
    "Affiliation": "Peking University",
    "Key": "HuihongHe"
}, {
    "Name": "Hongjie Chen",
    "Affiliation": "Peking University",
    "Key": "HongjieChen"
}, {
    "Name": "Svetlana Arifulina",
    "Affiliation": "University of Paderborn",
    "Key": "SvetlanaArifulina"
}, {
    "Name": "Sven Walther",
    "Affiliation": "Heinz Nixdorf Institute & University of Paderborn",
    "Key": "SvenWalther"
}, {
    "Name": "Matthias Becker",
    "Affiliation": "University of Paderborn",
    "Key": "MatthiasBecker"
}, {
    "Name": "Marie C. Platenius",
    "Affiliation": "University of Paderborn",
    "Key": "MarieC.Platenius"
}, {
    "Name": "Yoshiki Higo",
    "Affiliation": "Osaka University",
    "Key": "YoshikiHigo"
}, {
    "Name": "Shinji Kusumoto",
    "Affiliation": "Osaka University",
    "Key": "ShinjiKusumoto"
}, {
    "Name": "Josip Maras",
    "Affiliation": "University of Split",
    "Key": "JosipMaras"
}, {
    "Name": "Maja Stula",
    "Affiliation": "University of Split",
    "Key": "MajaStula"
}, {
    "Name": "Jan Carlson",
    "Affiliation": "Malardalen University",
    "Key": "JanCarlson"
}, {
    "Name": "Leo Pruijt",
    "Affiliation": "Hogeschool Utrecht",
    "Key": "LeoPruijt"
}, {
    "Name": "Christian Koppe",
    "Affiliation": "HAN University of Applied Sciences",
    "Key": "ChristianKoppe"
}, {
    "Name": "Jan Martijn van der Werf",
    "Affiliation": "University Utrecht",
    "Key": "JanMartijnvanderWerf"
}, {
    "Name": "Sjaak Brinkkemper",
    "Affiliation": "University Utrecht",
    "Key": "SjaakBrinkkemper"
}, {
    "Name": "Reza Matinnejad",
    "Affiliation": "University of Luxembourg",
    "Key": "RezaMatinnejad"
}, {
    "Name": "Shiva Nejati",
    "Affiliation": "University of Luxembourg",
    "Key": "ShivaNejati"
}, {
    "Name": "Lionel C. Briand",
    "Affiliation": "University of Luxembourg",
    "Key": "LionelC.Briand"
}, {
    "Name": "Thomas Bruckmann",
    "Affiliation": "Delphi Automotive Systems",
    "Key": "ThomasBruckmann"
}, {
    "Name": "Dominik Holling",
    "Affiliation": "Technische Universitat Munchen",
    "Key": "DominikHolling"
}, {
    "Name": "Alexander Pretschner",
    "Affiliation": "Technische Universitat Munchen",
    "Key": "AlexanderPretschner"
}, {
    "Name": "Matthias Gemmar",
    "Affiliation": "ITK Engineering AG",
    "Key": "MatthiasGemmar"
}, {
    "Name": "Rodrigo M. L. M. Moreira",
    "Affiliation": "University of Porto",
    "Key": "RodrigoMLMMoreira"
}, {
    "Name": "Ana C. R. Paiva",
    "Affiliation": "University of Porto",
    "Key": "AnaCRPaiva"
}, {
    "Name": "Maxime Turenne",
    "Affiliation": "Universite du Quebec",
    "Key": "MaximeTurenne"
}, {
    "Name": "Ali Kanso",
    "Affiliation": "Ericsson",
    "Key": "AliKanso"
}, {
    "Name": "Abdelouahed Gherbi",
    "Affiliation": "Universite du Quebec",
    "Key": "AbdelouahedGherbi"
}, {
    "Name": "Samer Razzook",
    "Affiliation": "Ericsson",
    "Key": "SamerRazzook"
}, {
    "Name": "Ferdian Thung",
    "Affiliation": "Singapore Management University",
    "Key": "FerdianThung"
}, {
    "Name": "Pavneet Singh Kochhar",
    "Affiliation": "Singapore Management University",
    "Key": "PavneetSinghKochhar"
}, {
    "Name": "David Lo",
    "Affiliation": "Singapore Management University",
    "Key": "DavidLo"
}, {
    "Name": "Johanna Schneider",
    "Affiliation": "Daimler AG",
    "Key": "JohannaSchneider"
}, {
    "Name": "Joseph Burke",
    "Affiliation": "University of Limerick",
    "Key": "JosephBurke"
}, {
    "Name": "Markus Kleffmann",
    "Affiliation": "University of Duisburg-Essen",
    "Key": "MarkusKleffmann"
}, {
    "Name": "Michael Vierhauser",
    "Affiliation": "Johannes Kepler University Linz",
    "Key": "MichaelVierhauser"
}, {
    "Name": "Markus Borg",
    "Affiliation": "Lund University",
    "Key": "MarkusBorg"
}, {
    "Name": "Felix Mohr",
    "Affiliation": "University of Paderborn",
    "Key": "FelixMohr"
}, {
    "Name": "Breno Miranda",
    "Affiliation": "Universita  di Pisa",
    "Key": "BrenoMiranda"
}, {
    "Name": "Florian Angerer",
    "Affiliation": "Johannes Kepler University, Linz",
    "Key": "FlorianAngerer"
}, {
    "Name": "Maria Kechagia",
    "Affiliation": "Athens University of Economics and Business",
    "Key": "MariaKechagia"
}, {
    "Name": "Dennis Priefer",
    "Affiliation": "Philipps University & Technische Hochschule Mittelhessen University of Applied Sciences",
    "Key": "DennisPriefer"
}]
}